import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-5f6064b2.js";const i="/assets/image-20240407183435242-201-ec2293b5.gif",u="/assets/image-20240407183435242-202-61a172e7.png",k="/assets/image-20240407183435242-203-7e14edb1.png",r="/assets/image-20240407183435242-204-4392d314.png",d="/assets/image-20240407183435242-205-898a5166.png",m="/assets/image-20240407183435242-206-c156f388.png",v="/assets/image-20240407183435242-207-f4a134f1.png",b="/assets/image-20240407183435243-208-ab953574.png",g="/assets/image-20240407183435243-209-e62f5761.png",y="/assets/image-20240407183435243-210-605c5d48.png",f="/assets/image-20240407183435243-211-a86960a1.png",h="/assets/image-20240407183435243-212-1c7a3382.png",w="/assets/image-20240407183435243-213-acaac6e8.png",q="/assets/image-20240407183435243-214-6d8bf4e4.png",_="/assets/image-20240407183435243-215-3a0e4fe7.png",T="/assets/image-20240407183435243-216-a1f7990b.png",L="/assets/image-20240407183435243-217-95967db4.png",O="/assets/image-20240407183435243-218-6536b836.png",S="/assets/image-20240407183435243-219-945c90af.png",E="/assets/image-20240407183435243-220-5e5e0957.png",j="/assets/image-20240407183435243-221-cd22a5d8.png",x="/assets/image-20240407183435243-222-b381154a.png",C="/assets/image-20240407183435244-223-45503d55.png",N="/assets/image-20240407183435244-224-5d57dc93.png",R="/assets/image-20240407183435244-225-90d6f4be.png",A="/assets/image-20240407183435244-226-4c63e823.png",B="/assets/image-20240407183435244-227-7e7fe366.png",I="/assets/image-20240407183435244-228-c50a6ae8.svg",D="/assets/image-20240407183435244-229-88546431.png",M="/assets/image-20240407183435244-230-6bce64ed.png",U="/assets/image-20240407183435244-231-6cd7aae6.png",P="/assets/image-20240407183435244-232-e12c2fdb.png",z="/assets/image-20240407183435244-233-7094cf08.png",Q="/assets/image-20240407183435244-234-65e69810.png",$="/assets/image-20240407183435245-235-df790338.png",H="/assets/image-20240407183435245-236-549e8b4c.png",F="/assets/image-20240407183435245-237-5a8f3f11.png",W="/assets/image-20240407183435245-238-1101b9b5.svg",V="/assets/image-20240407183435245-239-1dadac2f.png",J="/assets/image-20240407183435245-240-377f38e9.png",G="/assets/image-20240407183435245-241-1b4e9d3f.png",Y="/assets/image-20240407183435246-242-1407a0a2.png",K="/assets/image-20240407183435246-243-152ea628.png",X="/assets/image-20240407183435246-244-61e330b5.png",Z="/assets/image-20240407183435246-245-c7873f2f.png",nn="/assets/image-20240407183435246-246-38eab580.png",sn="/assets/image-20240407183435246-247-e9803f8a.png",an="/assets/image-20240407183435246-248-313a895f.png",tn="/assets/image-20240407183435246-249-370ce740.png",pn="/assets/image-20240407183435246-250-2ebad589.png",en="/assets/image-20240407183435246-251-19902a22.png",on="/assets/image-20240407183435246-252-92f7d2c0.png",cn="/assets/image-20240407183435246-253-b7127dd8.png",ln="/assets/image-20240407183435246-254-213db16d.png",un="/assets/image-20240407183435246-255-e40de6cb.png",kn="/assets/image-20240407183435246-256-d5e3ff05.png",rn="/assets/image-20240407183435247-257-0c554ebe.png",dn="/assets/image-20240407183435247-258-6012f76d.png",mn="/assets/image-20240407183435247-259-37cca6cd.png",vn="/assets/image-20240407183435247-260-bf115be2.png",bn={},gn=p('<h1 id="课程安排" tabindex="-1"><a class="header-anchor" href="#课程安排" aria-hidden="true">#</a> 课程安排</h1><ul><li>路线规划需求分析</li><li>熟悉路线规划项目工程</li><li>实现机构数据同步</li><li>实现路线管理</li><li>综合功能测试</li></ul><h1 id="_1、背景说明" tabindex="-1"><a class="header-anchor" href="#_1、背景说明" aria-hidden="true">#</a> 1、背景说明</h1><p>通过前面的Neo4j的学习，你已经基本掌握了Neo4j的使用，接下来就需要应用Neo4j来实现路线规划微服务了。<br> 目前路线规划微服务中的代码框架基本上已经写好了，但是具体的实现并没有编写，所以就需要你来填充这些关键核心的代码。<br><img src="'+i+'" alt="" loading="lazy"></p><h1 id="_2、需求分析" tabindex="-1"><a class="header-anchor" href="#_2、需求分析" aria-hidden="true">#</a> 2、需求分析</h1><p>对于运输路线规划，总的需求有两个，一个是机构管理，一个是路线管理。<br> 其中，机构的管理是需要与【权限管家】系统中的【组织管理】中的数据进行同步，该同步是需要通过MQ完成的。<br><img src="'+u+'" alt="" loading="lazy"><br> 路线管理，主要提供路线的维护，最核心的服务是提供路线规划查询服务。<br><img src="'+k+'" alt="" loading="lazy"><br><img src="'+r+'" alt="" loading="lazy"></p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>需要说明的是，一个完整的运输路线是由多个转运节点组合完成的，并且每一个转运路线都是双向往返的，也就是A与B节点直接的路线必须是成对创建的。</p></div><h1 id="_3、项目工程" tabindex="-1"><a class="header-anchor" href="#_3、项目工程" aria-hidden="true">#</a> 3、项目工程</h1><h2 id="_3-1、拉取代码" tabindex="-1"><a class="header-anchor" href="#_3-1、拉取代码" aria-hidden="true">#</a> 3.1、拉取代码</h2><p>拉取<code>sl-express-ms-transport</code>相关的代码：</p>',10),yn=n("thead",null,[n("tr",null,[n("th",null,"工程名"),n("th",null,"git地址")])],-1),fn=n("td",null,"sl-express-ms-transport-api",-1),hn={href:"http://git.sl-express.com/sl/sl-express-ms-transport-api",target:"_blank",rel:"noopener noreferrer"},wn=n("td",null,"sl-express-ms-transport-domain",-1),qn={href:"http://git.sl-express.com/sl/sl-express-ms-transport-domain.git",target:"_blank",rel:"noopener noreferrer"},_n=n("td",null,"sl-express-ms-transport-service",-1),Tn={href:"http://git.sl-express.com/sl/sl-express-ms-transport-service.git",target:"_blank",rel:"noopener noreferrer"},Ln=p('<figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-2、配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2、配置文件" aria-hidden="true">#</a> 3.2、配置文件</h2><p>在配置文件中引入了如下共享配置：</p><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>shared-spring-rabbitmq.yml</td><td>关于rabbitmq的统一配置，其中有对于消息消费失败处理的配置项</td></tr><tr><td>shared-spring-eaglemap.yml</td><td>自研对接地图服务商的中台服务EagleMap的配置</td></tr><tr><td>shared-spring-neo4j.yml</td><td>neo4j的相关配置</td></tr></tbody></table><h3 id="_3-2-1、shared-spring-rabbitmq-yml" tabindex="-1"><a class="header-anchor" href="#_3-2-1、shared-spring-rabbitmq-yml" aria-hidden="true">#</a> 3.2.1、shared-spring-rabbitmq.yml</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">#rabbitmq的基础配置</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span> <span class="token comment">#mq的配置</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.150.101
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> sl
    <span class="token key atrule">password</span><span class="token punctuation">:</span> sl321
    <span class="token key atrule">virtual-host</span><span class="token punctuation">:</span> /dispatch
    <span class="token key atrule">publisher-confirm-type</span><span class="token punctuation">:</span> correlated <span class="token comment">#发送消息的异步回调，记录消息是否发送成功</span>
    <span class="token key atrule">publisher-returns</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#开启publish-return功能，消息到达交换机，但是没有到达对列表</span>
    <span class="token key atrule">template</span><span class="token punctuation">:</span>
      <span class="token key atrule">mandatory</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#消息路由失败时的策略, true: 调用ReturnCallback, false：丢弃消息</span>
    <span class="token key atrule">listener</span><span class="token punctuation">:</span>
      <span class="token key atrule">simple</span><span class="token punctuation">:</span>
        <span class="token key atrule">acknowledge-mode</span><span class="token punctuation">:</span> auto <span class="token comment">#，出现异常时返回nack，消息回滚到mq；没有异常，返回ack</span>
        <span class="token key atrule">retry</span><span class="token punctuation">:</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 开启消费者失败重试</span>
          <span class="token key atrule">initial-interval</span><span class="token punctuation">:</span> <span class="token number">1000</span> <span class="token comment"># 初识的失败等待时长为1秒</span>
          <span class="token key atrule">multiplier</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 失败的等待时长倍数，下次等待时长 = multiplier * last-interval</span>
          <span class="token key atrule">max-attempts</span><span class="token punctuation">:</span> <span class="token number">3</span> <span class="token comment"># 最大重试次数</span>
          <span class="token key atrule">stateless</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true无状态；false有状态。如果业务中包含事务，这里改为false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-2、shared-spring-eaglemap-yml" tabindex="-1"><a class="header-anchor" href="#_3-2-2、shared-spring-eaglemap-yml" aria-hidden="true">#</a> 3.2.2、shared-spring-eaglemap.yml</h3><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>关于EagleMap使用，在后面讲解。</p></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">eagle</span><span class="token punctuation">:</span>
  <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.150.101 <span class="token comment">#EagleMap服务地址</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8484</span> <span class="token comment">#EagleMap服务端口</span>
  <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">20000</span> <span class="token comment">#http请求的超时时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-3、shared-spring-neo4j-yml" tabindex="-1"><a class="header-anchor" href="#_3-2-3、shared-spring-neo4j-yml" aria-hidden="true">#</a> 3.2.3、shared-spring-neo4j.yml</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">data</span><span class="token punctuation">:</span>
    <span class="token key atrule">neo4j</span><span class="token punctuation">:</span>
      <span class="token key atrule">database</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>neo4j.database<span class="token punctuation">}</span>
  <span class="token key atrule">neo4j</span><span class="token punctuation">:</span>
    <span class="token key atrule">authentication</span><span class="token punctuation">:</span>
      <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>neo4j.username<span class="token punctuation">}</span>
      <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>neo4j.password<span class="token punctuation">}</span>
    <span class="token key atrule">uri</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>neo4j.uri<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的参数值在<code>sl-express-transport.properties</code>文件中：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">neo4j.uri</span><span class="token punctuation">=</span><span class="token value attr-value">neo4j://192.168.150.101:7687</span>
<span class="token key attr-name">neo4j.username</span><span class="token punctuation">=</span><span class="token value attr-value">neo4j</span>
<span class="token key attr-name">neo4j.password</span><span class="token punctuation">=</span><span class="token value attr-value">neo4j123</span>
<span class="token key attr-name">neo4j.database</span><span class="token punctuation">=</span><span class="token value attr-value">neo4j</span>

<span class="token key attr-name">jdbc.url</span> <span class="token punctuation">=</span> <span class="token value attr-value">jdbc:mysql://192.168.150.101:3306/sl_transport?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;allowMultiQueries=true&amp;useSSL=false</span>
<span class="token key attr-name">jdbc.username</span> <span class="token punctuation">=</span> <span class="token value attr-value">root</span>
<span class="token key attr-name">jdbc.password</span> <span class="token punctuation">=</span> <span class="token value attr-value">123</span>

<span class="token comment">#权限系统对接的交换机</span>
<span class="token key attr-name">rabbitmq.exchange</span> <span class="token punctuation">=</span> <span class="token value attr-value">itcast-auth</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-3、代码结构" tabindex="-1"><a class="header-anchor" href="#_3-3、代码结构" aria-hidden="true">#</a> 3.3、代码结构</h2><p>下面是路线规划微服务代码结构，主要是实现下面选中的部分：<br><img src="`+m+'" alt="" loading="lazy"></p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>关于Entity，与sl-express-sdn工程的类似，只是属性多了一些，按照项目的业务需求制定的。</p></div><p>Feign接口定义：<br><img src="'+v+'" alt="" loading="lazy"><br> domain定义：<br><img src="'+b+'" alt="" loading="lazy"></p><h2 id="_3-4、sl-express-mq" tabindex="-1"><a class="header-anchor" href="#_3-4、sl-express-mq" aria-hidden="true">#</a> 3.4、sl-express-mq</h2>',18),On={href:"https://sl-express.itheima.net/#/zh-cn/modules/sl-express-mq",target:"_blank",rel:"noopener noreferrer"},Sn=p('<h3 id="_3-4-1、发送消息" tabindex="-1"><a class="header-anchor" href="#_3-4-1、发送消息" aria-hidden="true">#</a> 3.4.1、发送消息</h3><p>对于发送消息的场景，正常情况没有问题，直接发送即可：<br><img src="'+g+'" alt="" loading="lazy"><br> 如果是非正常情况就需要特殊处理了，一般会有三种非正常情况需要处理：</p><ul><li>第一种情况，消息发送到交换机（exchange），但是没有队列与交换机绑定，消息会丢失。<br><img src="'+y+'" alt="" loading="lazy"></li><li>第二种情况，在消息的发送后进行确认，如果发送失败需要将消息持久化，例如：发送的交换机不存在的情况。<br><img src="'+f+'" alt="" loading="lazy"></li><li>第三种情况，由于网络、MQ服务宕机等原因导致消息没有发送到MQ服务器。<br><img src="'+h+'" alt="" loading="lazy"></li></ul><p><strong>第一种情况：</strong><br> 对于消息只是到了交换机，并没有到达队列，这种情况记录日志即可，因为我们也不确定哪个队列需要这个消息。<br> 配置如下（nacos中的<code>shared-spring-rabbitmq.yml</code>文件）：<br><img src="'+w+`" alt="" loading="lazy"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">Constants</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RabbitTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">BeansException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContextAware</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageConfig</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextAware</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 发送者回执 没有路由到队列的情况
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> 应用上下文
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">BeansException</span></span> 异常
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取RabbitTemplate</span>
        <span class="token class-name">RabbitTemplate</span> rabbitTemplate <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RabbitTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置ReturnCallback</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">setReturnsCallback</span><span class="token punctuation">(</span>message <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">MQ</span><span class="token punctuation">.</span><span class="token constant">DELAYED_KEYWORD</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//延迟消息没有发到队列是正常情况，无需记录日志</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 投递失败，记录日志</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;消息没有投递到队列，应答码：{}，原因：{}，交换机：{}，路由键：{},消息：{}&quot;</span><span class="token punctuation">,</span>
                    message<span class="token punctuation">.</span><span class="token function">getReplyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getReplyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getRoutingKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第二种情况：</strong><br> 在配文件中开启配置<code>publisher-confirm-type</code>，即可在发送消息时添加回调方法：<br><img src="`+q+'" alt="" loading="lazy"><br> 在代码中进行处理，将消息数据持久化到数据库中，后续通过xxl-job进行处理，将消息进行重新发送。<br><img src="'+_+'" alt="" loading="lazy"><br> 同样，如果出现异常情况也是将消息持久化：<br><img src="'+T+'" alt="" loading="lazy"><br><strong>第三种情况：</strong><br> 将发送消息的代码进行try{}catch{}处理，如果出现异常会通过Spring-retry机制进重试，最多重试3次，如果依然失败就将消息数据进行持久化：<br><img src="'+L+'" alt="" loading="lazy"><br> 设置重试：<br><img src="'+O+'" alt="" loading="lazy"><br> 最终的落库操作：<br><img src="'+S+`" alt="" loading="lazy"><br> xxl-job任务，主要负责从数据库中查询出错误消息数据然后进行重试：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>job</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LambdaQueryWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">FailMsgEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">FailMsgService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">MQService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xxl<span class="token punctuation">.</span>job<span class="token punctuation">.</span>core<span class="token punctuation">.</span>handler<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">XxlJob</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 失败消息的处理任务
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@ConditionalOnBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">MQService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">FailMsgService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FailMsgJob</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">FailMsgService</span> failMsgService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">MQService</span> mqService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span><span class="token string">&quot;failMsgJob&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//查询失败的数据，每次最多处理100条错误消息</span>
        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FailMsgEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FailMsgEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token class-name">FailMsgEntity</span><span class="token operator">::</span><span class="token function">getCreated</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;limit 100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FailMsgEntity</span><span class="token punctuation">&gt;</span></span> failMsgEntityList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>failMsgService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>failMsgEntityList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FailMsgEntity</span> failMsgEntity <span class="token operator">:</span> failMsgEntityList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//发送消息</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>mqService<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>failMsgEntity<span class="token punctuation">.</span><span class="token function">getExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> failMsgEntity<span class="token punctuation">.</span><span class="token function">getRoutingKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> failMsgEntity<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//删除数据</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>failMsgService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>failMsgEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;处理错误消息失败, failMsgEntity = {}&quot;</span><span class="token punctuation">,</span> failMsgEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>xxl-job中的任务调度：<br><img src="`+E+'" alt="" loading="lazy"></p><h3 id="_3-4-2、消费消息" tabindex="-1"><a class="header-anchor" href="#_3-4-2、消费消息" aria-hidden="true">#</a> 3.4.2、消费消息</h3><p>对于消息的消费，首先采用的自动确认策略：<br><img src="'+j+'" alt="" loading="lazy"><br> 如果出现消费错误，会进行重试，最多重试3次：<br><img src="'+x+`" alt="" loading="lazy"><br> 如果3次后依然失败，需要将消息发送到指定的队列，为了区分不同的微服务，所以会针对不同微服务创建不同的队列，但是交换机是同一个：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">Constants</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Binding</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">BindingBuilder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Queue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">TopicExchange</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RabbitTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>retry<span class="token punctuation">.</span></span><span class="token class-name">MessageRecoverer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>retry<span class="token punctuation">.</span></span><span class="token class-name">RepublishMessageRecoverer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ErrorMessageConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.application.name}&quot;</span><span class="token punctuation">)</span> <span class="token comment">//获取微服务的名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> appName<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TopicExchange</span> <span class="token function">errorMessageExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//定义错误消息的交换机，类型为：topic</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TopicExchange</span><span class="token punctuation">(</span><span class="token class-name">Constants<span class="token punctuation">.</span>MQ<span class="token punctuation">.</span>Exchanges</span><span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Queue</span> <span class="token function">errorQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//【前缀+微服务】名作为错误消息存放的队列名称，并且开启了持久化</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token class-name">Constants<span class="token punctuation">.</span>MQ<span class="token punctuation">.</span>Queues</span><span class="token punctuation">.</span><span class="token constant">ERROR_PREFIX</span> <span class="token operator">+</span> appName<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Binding</span> <span class="token function">errorBinding</span><span class="token punctuation">(</span><span class="token class-name">Queue</span> errorQueue<span class="token punctuation">,</span> <span class="token class-name">TopicExchange</span> errorMessageExchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//完成绑定关系</span>
        <span class="token keyword">return</span> <span class="token class-name">BindingBuilder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>errorQueue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>errorMessageExchange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MessageRecoverer</span> <span class="token function">republishMessageRecoverer</span><span class="token punctuation">(</span><span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//设置全部重试失败后进行重新发送消息，指定了交换机以及路由key</span>
        <span class="token comment">//需要注意的是，路由key是应用名称，与上述的绑定关系中的路由key一致</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RepublishMessageRecoverer</span><span class="token punctuation">(</span>rabbitTemplate<span class="token punctuation">,</span> <span class="token class-name">Constants<span class="token punctuation">.</span>MQ<span class="token punctuation">.</span>Exchanges</span><span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终会以微服务名称创建队列：<br><img src="`+C+'" alt="" loading="lazy"><br> 其绑定关系如下：<br><img src="'+N+'" alt="" loading="lazy"></p><h3 id="_3-4-3、统一封装" tabindex="-1"><a class="header-anchor" href="#_3-4-3、统一封装" aria-hidden="true">#</a> 3.4.3、统一封装</h3><p>为了在各个微服务中方便发送消息，所以在<code>sl-express-ms-base</code>微服务中进行了封装，使用时<code>com.sl.ms.base.api.common.MQFeign</code>调用即可。<br> 在base微服务中添加了配置以及启用Spring-retry机制：<br><img src="'+R+'" alt="" loading="lazy"><br><img src="'+A+'" alt="" loading="lazy"><br> 使用示例如下：<br><img src="'+B+'" alt="" loading="lazy"></p><blockquote><p><strong>发送时指定交换机、路由key、消息内容、延时时间（毫秒）即可。</strong></p></blockquote><h1 id="_4、机构同步" tabindex="-1"><a class="header-anchor" href="#_4、机构同步" aria-hidden="true">#</a> 4、机构同步</h1><p>机构的新增、更新、删除是在权限管家中完成的，需要是操作后同步到路线规划微服务中，这里采用的是MQ消息通知的方式。</p><h2 id="_4-1、业务流程" tabindex="-1"><a class="header-anchor" href="#_4-1、业务流程" aria-hidden="true">#</a> 4.1、业务流程</h2><p><img src="'+I+'" alt="" loading="lazy"><br> 权限管家的MQ配置是在 <code>/itcast/itcast-auth-server/application-test.properties</code>文件中，如下：<br><img src="'+D+'" alt="" loading="lazy"><br> 可以看出，消息发往的交换机为：itcast-auth，交换机的类型为：topic<br> 发送消息的规则如下：</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><ul><li>消息为json字符串 <ul><li>如：{&quot;type&quot;:&quot;ORG&quot;,&quot;content&quot;:[{&quot;managerId&quot;:&quot;1&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;name&quot;:&quot;测试组织&quot;,&quot;id&quot;:&quot;973902113476182273&quot;,&quot;status&quot;:true}],&quot;operation&quot;:&quot;UPDATE&quot;}</li></ul></li><li>type表示变更的对象，比如组织：ORG</li><li>content为更改对象列表</li><li>operation类型列表 <ul><li>新增-ADD</li><li>修改-UPDATE</li><li>删除-DEL</li></ul></li></ul></div><p>所以，对应的在<code>sl-express-transport.properties</code>中配置相同的交换机。</p><h2 id="_4-3、业务规范" tabindex="-1"><a class="header-anchor" href="#_4-3、业务规范" aria-hidden="true">#</a> 4.3、业务规范</h2><p><img src="'+M+`" alt="" loading="lazy"><br> 上图是在权限管家中新增组织的界面，可以从界面中看出，添加的组织并没有标识是【网点】还是【转运中心】，所以，在这里我们做一下约定，按照机构名称的后缀进行区分，具体规则如下：</p><ul><li>xxx转运中心 → 一级转运中心（OLT）</li><li>xxx分拣中心 → 二级转运中心 （TLT）</li><li>xxx营业部 → 网点（AGENCY）</li></ul><h2 id="_4-4、具体实现" tabindex="-1"><a class="header-anchor" href="#_4-4、具体实现" aria-hidden="true">#</a> 4.4、具体实现</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>mq</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">Constants</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">AgencyEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">OLTEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">TLTEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">OrganTypeEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">OrganServiceFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">ExchangeTypes</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">TopicExchange</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Exchange</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Queue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">QueueBinding</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RabbitListener</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 对于权限管家系统消息的处理
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthMQListener</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
            value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token class-name">Constants<span class="token punctuation">.</span>MQ<span class="token punctuation">.</span>Queues</span><span class="token punctuation">.</span><span class="token constant">AUTH_TRANSPORT</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;\${rabbitmq.exchange}&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ExchangeTypes</span><span class="token punctuation">.</span><span class="token constant">TOPIC</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            key <span class="token operator">=</span> <span class="token string">&quot;#&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listenAgencyMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//{&quot;type&quot;:&quot;ORG&quot;,&quot;operation&quot;:&quot;ADD&quot;,&quot;content&quot;:[{&quot;id&quot;:&quot;977263044792942657&quot;,&quot;name&quot;:&quot;55&quot;,&quot;parentId&quot;:&quot;0&quot;,&quot;managerId&quot;:null,&quot;status&quot;:true}]}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收到消息 -&gt; {}&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parseObj</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> type <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getStr</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token string">&quot;ORG&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//非机构消息</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> operation <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getStr</span><span class="token punctuation">(</span><span class="token string">&quot;operation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONObject</span> content <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> jsonObject<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getObj</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">getStr</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> parentId <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span><span class="token string">&quot;parentId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">IService</span> iService<span class="token punctuation">;</span>
        <span class="token class-name">BaseEntity</span> entity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">endWith</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;转运中心&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//一级转运中心</span>
            iService <span class="token operator">=</span> <span class="token class-name">OrganServiceFactory</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">OrganTypeEnum</span><span class="token punctuation">.</span><span class="token constant">OLT</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OLTEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entity<span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">endWith</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;分拣中心&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//二级转运中心</span>
            iService <span class="token operator">=</span> <span class="token class-name">OrganServiceFactory</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">OrganTypeEnum</span><span class="token punctuation">.</span><span class="token constant">TLT</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TLTEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entity<span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span>parentId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">endWith</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;营业部&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//网点</span>
            iService <span class="token operator">=</span> <span class="token class-name">OrganServiceFactory</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">OrganTypeEnum</span><span class="token punctuation">.</span><span class="token constant">AGENCY</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entity<span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span>parentId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//设置参数</span>
        entity<span class="token punctuation">.</span><span class="token function">setBid</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        entity<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        entity<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">getBool</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>operation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&quot;ADD&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                iService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token string">&quot;UPDATE&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                iService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token string">&quot;DEL&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                iService<span class="token punctuation">.</span><span class="token function">deleteByBid</span><span class="token punctuation">(</span>entity<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">警告</p><p>由于Service还没有具体实现，暂时不对代码测试，后面实现后进行测试。</p></div><h1 id="_5、iservice" tabindex="-1"><a class="header-anchor" href="#_5、iservice" aria-hidden="true">#</a> 5、IService</h1><p>在Service中一些方法是通用的，比如新增、更新、删除等，这个通用的方法可以写到一个Service中，其他的Service继承该Service即可。</p><h2 id="_5-1、iservice" tabindex="-1"><a class="header-anchor" href="#_5-1、iservice" aria-hidden="true">#</a> 5.1、IService</h2><p>接口定义：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 基础服务实现
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 根据业务id查询数据
     *
     * <span class="token keyword">@param</span> <span class="token parameter">bid</span> 业务id
     * <span class="token keyword">@return</span> 节点数据
     */</span>
    <span class="token class-name">T</span> <span class="token function">queryByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 新增节点
     *
     * <span class="token keyword">@param</span> <span class="token parameter">t</span> 节点数据
     * <span class="token keyword">@return</span> 新增的节点数据
     */</span>
    <span class="token class-name">T</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 更新节点
     *
     * <span class="token keyword">@param</span> <span class="token parameter">t</span> 节点数据
     * <span class="token keyword">@return</span> 更新的节点数据
     */</span>
    <span class="token class-name">T</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据业务id删除数据
     *
     * <span class="token keyword">@param</span> <span class="token parameter">bid</span> 业务id
     * <span class="token keyword">@return</span> 是否删除成功
     */</span>
    <span class="token class-name">Boolean</span> <span class="token function">deleteByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-2、serviceimpl" tabindex="-1"><a class="header-anchor" href="#_5-2、serviceimpl" aria-hidden="true">#</a> 5.2、ServiceImpl</h2><p>下面编写具体的实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">BeanUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>copier<span class="token punctuation">.</span></span><span class="token class-name">CopyOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">BaseRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 基础服务的实现
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span> <span class="token keyword">extends</span> <span class="token class-name">BaseRepository</span><span class="token punctuation">,</span> <span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">R</span> repository<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">queryByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">findByBid</span><span class="token punctuation">(</span>bid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//id由neo4j自动生成</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//先查询，再更新</span>
        <span class="token class-name">T</span> tData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">queryByBid</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>tData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> tData<span class="token punctuation">,</span> <span class="token class-name">CopyOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoreNullValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIgnoreProperties</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>tData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">deleteByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">deleteByBid</span><span class="token punctuation">(</span>bid<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-3、agencyserviceimpl" tabindex="-1"><a class="header-anchor" href="#_5-3、agencyserviceimpl" aria-hidden="true">#</a> 5.3、AgencyServiceImpl</h2><p>网点服务实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">AgencyEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">AgencyRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">AgencyService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgencyServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AgencyRepository</span><span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">AgencyService</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-4、oltserviceimpl" tabindex="-1"><a class="header-anchor" href="#_5-4、oltserviceimpl" aria-hidden="true">#</a> 5.4、OLTServiceImpl</h2><p>一级转运中心服务实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">OLTEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">OLTRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">OLTService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OLTServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OLTRepository</span><span class="token punctuation">,</span> <span class="token class-name">OLTEntity</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">OLTService</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-5、tltserviceimpl" tabindex="-1"><a class="header-anchor" href="#_5-5、tltserviceimpl" aria-hidden="true">#</a> 5.5、TLTServiceImpl</h2><p>二级转运中心服务实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">TLTEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">TLTRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">TLTService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TLTServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TLTRepository</span><span class="token punctuation">,</span> <span class="token class-name">TLTEntity</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">TLTService</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-6、单元测试" tabindex="-1"><a class="header-anchor" href="#_5-6、单元测试" aria-hidden="true">#</a> 5.6、单元测试</h2><p>编写测试用例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">AgencyEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">AgencyServiceTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">AgencyService</span> agencyService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testQueryByBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">AgencyEntity</span> agencyEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>agencyService<span class="token punctuation">.</span><span class="token function">queryByBid</span><span class="token punctuation">(</span><span class="token number">25073L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>agencyEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//AgencyEntity(super=BaseEntity(id=18, parentId=null, bid=25073, name=江苏省南京市玄武区紫金墨香苑, managerName=null, phone=025-58765331,025-83241955,025-83241881, address=栖霞区燕尧路100号, location=Point [x=32.117016, y=118.863193], status=null, extra=null))</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>🚨注意：需要将OrganController、TransportLineController中的@RestController注释掉才能测试，否则会抛出异常。</p></blockquote><h2 id="_5-7、测试机构同步" tabindex="-1"><a class="header-anchor" href="#_5-7、测试机构同步" aria-hidden="true">#</a> 5.7、测试机构同步</h2><p>将Neo4j中的数据全部删除：<code>MATCH (n) DETACH DELETE n</code><br> 创建机构：<br><img src="`+U+'" alt="" loading="lazy"><br> 可以看到对应的Neo4j中已经有数据：<br><img src="'+P+`" alt="" loading="lazy"><br> 同理可以测试更新、删除操作。</p><h1 id="_6、机构管理" tabindex="-1"><a class="header-anchor" href="#_6、机构管理" aria-hidden="true">#</a> 6、机构管理</h1><p>按照业务系统的需求，会通过bid查询机构，无需指定type，也就是说，我们需要将网点和转运中心都看作是机构，需要实现两个查询方法：</p><ul><li>根据bid查询</li><li>查询机构列表</li></ul><h2 id="_6-1、接口定义" tabindex="-1"><a class="header-anchor" href="#_6-1、接口定义" aria-hidden="true">#</a> 6.1、接口定义</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">OrganDTO</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> zzj
 * <span class="token keyword">@version</span> 1.0
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrganService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 无需指定type，根据id查询
     *
     * <span class="token keyword">@param</span> <span class="token parameter">bid</span> 机构id
     * <span class="token keyword">@return</span> 机构信息
     */</span>
    <span class="token class-name">OrganDTO</span> <span class="token function">findByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 无需指定type，根据ids查询
     *
     * <span class="token keyword">@param</span> <span class="token parameter">bids</span> 机构ids
     * <span class="token keyword">@return</span> 机构信息
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByBids</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> bids<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询所有的机构，如果name不为空的按照name模糊查询
     *
     * <span class="token keyword">@param</span> <span class="token parameter">name</span> 机构名称
     * <span class="token keyword">@return</span> 机构列表
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询机构树
     * <span class="token keyword">@return</span> 机构树
     */</span>
    <span class="token class-name">String</span> <span class="token function">findAllTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-2、具体实现" tabindex="-1"><a class="header-anchor" href="#_6-2、具体实现" aria-hidden="true">#</a> 6.2、具体实现</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">BeanUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>tree<span class="token punctuation">.</span></span><span class="token class-name">Tree</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>tree<span class="token punctuation">.</span></span><span class="token class-name">TreeUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JsonProcessingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">SLException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">OrganDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">ExceptionEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">OrganRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">OrganService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrganServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrganService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">OrganRepository</span> organRepository<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">OrganDTO</span> <span class="token function">findByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">OrganDTO</span> organDTO <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organRepository<span class="token punctuation">.</span><span class="token function">findByBid</span><span class="token punctuation">(</span>bid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>organDTO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> organDTO<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">ORGAN_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByBids</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> bids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> organDTOS <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organRepository<span class="token punctuation">.</span><span class="token function">findByBids</span><span class="token punctuation">(</span>bids<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>organDTOS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> organDTOS<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">ORGAN_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">findAllTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-3、organrepositoryimpl" tabindex="-1"><a class="header-anchor" href="#_6-3、organrepositoryimpl" aria-hidden="true">#</a> 6.3、OrganRepositoryImpl</h2><p>下面对于OrganRepository接口进行实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">BeanUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">ListUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">OrganDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">OrganTypeEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">OrganRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span><span class="token class-name">InternalPoint2D</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Neo4jClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrganRepositoryImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrganRepository</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">Neo4jClient</span> neo4jClient<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">OrganDTO</span> <span class="token function">findByBid</span><span class="token punctuation">(</span><span class="token class-name">Long</span> bid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;MATCH (n)\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;WHERE n.bid = {}\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;RETURN n&quot;</span><span class="token punctuation">,</span> bid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByBids</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> bids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;MATCH (n)\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;WHERE n.bid in {}\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;RETURN n&quot;</span><span class="token punctuation">,</span> bids<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">executeQuery</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token char">&#39;\\&#39;&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">?</span>
                <span class="token string">&quot;MATCH (n) RETURN n&quot;</span> <span class="token operator">:</span>
                <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;MATCH (n) WHERE n.name CONTAINS &#39;{}&#39; RETURN n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">executeQuery</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token class-name">String</span> cypherQuery<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">OrganDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token comment">//设置响应的类型</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token comment">//对结果进行封装处理</span>
                    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">OrganDTO</span> organDTO <span class="token operator">=</span> <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">toBean</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> <span class="token class-name">OrganDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">InternalPoint2D</span> location <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InternalPoint2D</span><span class="token punctuation">)</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;location&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        organDTO<span class="token punctuation">.</span><span class="token function">setLongitude</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        organDTO<span class="token punctuation">.</span><span class="token function">setLatitude</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">//获取类型</span>
                    <span class="token class-name">String</span> type <span class="token operator">=</span> <span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">labels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    organDTO<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">OrganTypeEnum</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> organDTO<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-4、测试用例" tabindex="-1"><a class="header-anchor" href="#_6-4、测试用例" aria-hidden="true">#</a> 6.4、测试用例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">OrganDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">OrganServiceTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">OrganService</span> organService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">findByBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//bid值要改成自己neo4j中的值</span>
        <span class="token class-name">OrganDTO</span> organDTO <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organService<span class="token punctuation">.</span><span class="token function">findByBid</span><span class="token punctuation">(</span><span class="token number">1012479939628238305L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>organDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//查询包含“上海”关键字的机构</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&quot;上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-5、整合测试" tabindex="-1"><a class="header-anchor" href="#_6-5、整合测试" aria-hidden="true">#</a> 6.5、整合测试</h2>`,63),En={href:"http://127.0.0.1:18083/doc.html",target:"_blank",rel:"noopener noreferrer"},jn=p('<div class="hint-container danger"><p class="hint-container-title">警告</p><p>测试时，由于部分Service还没有实现，会导致启动报错，所以需要将报错Controller中的@RestController注释掉。</p></div><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_6-6、树形结构" tabindex="-1"><a class="header-anchor" href="#_6-6、树形结构" aria-hidden="true">#</a> 6.6、树形结构</h2>',3),xn=n("br",null,null,-1),Cn=n("img",{src:Q,alt:"",loading:"lazy"},null,-1),Nn=n("br",null,null,-1),Rn=n("code",null,"com.sl.transport.service.OrganService",-1),An=n("code",null,"findAllTree()",-1),Bn=n("br",null,null,-1),In={href:"https://www.hutool.cn/docs/#/core/%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7/%E6%A0%91%E7%BB%93%E6%9E%84/%E6%A0%91%E7%BB%93%E6%9E%84%E5%B7%A5%E5%85%B7-TreeUtil",target:"_blank",rel:"noopener noreferrer"},Dn=n("br",null,null,-1),Mn=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">findAllTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrganDTO</span><span class="token punctuation">&gt;</span></span> organList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>organList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//构造树结构</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tree</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> treeNodes <span class="token operator">=</span> <span class="token class-name">TreeUtil</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>organList<span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span>organDTO<span class="token punctuation">,</span> tree<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    tree<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>organDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    tree<span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span>organDTO<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    tree<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">beanToMap</span><span class="token punctuation">(</span>organDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    tree<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;bid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>treeNodes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token string">&quot;序列化json出错！&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据类似这样：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1012438698496623009&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;parentId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;上海市转运中心&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;managerName&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;extra&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1012479939628238305&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;parentId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1012438698496623009&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;浦东区分拣中心&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;managerName&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;extra&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1012479716659037537&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;parentId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;北京市转运中心&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;managerName&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;extra&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>功能测试：<br><img src="`+$+'" alt="" loading="lazy"></p><blockquote><p>🔔如果测试没有数据，需要自行在权限管家中创建相对应的网点、转运中心等数据，进行测试。</p></blockquote><h2 id="_6-7、编辑机构" tabindex="-1"><a class="header-anchor" href="#_6-7、编辑机构" aria-hidden="true">#</a> 6.7、编辑机构</h2><p>在后台系统中可以对机构数据进行编辑，主要是填充一些属性数据，例如：经纬度、详细地址。如下：<br><img src="'+H+'" alt="" loading="lazy"><br> 经纬度是如何计算出来的呢？这里使用的是高德地图的API进行查询的，将中文字段转化为经纬度值，我们是直接调用的高德地图的API吗，不是的，我们是通过EagleMap调用的。</p><h3 id="_6-7-1、eaglemap介绍" tabindex="-1"><a class="header-anchor" href="#_6-7-1、eaglemap介绍" aria-hidden="true">#</a> 6.7.1、EagleMap介绍</h3><p>EagleMap是黑马程序员研究院自研的地图中台服务，它可以对接多个地图服务商，目前已经完成百度地图和高德地图的对接。<br> 目前EagleMap已经部署安装在101机器中，配置文件所在的位置：<code>/itcast/eaglemap/app/application.yml</code></p>',9),Un={class:"hint-container danger"},Pn=n("p",{class:"hint-container-title"},"警告",-1),zn=n("code",null,"docker restart eagle-map-server",-1),Qn=n("br",null,null,-1),$n=n("img",{src:F,alt:"",loading:"lazy"},null,-1),Hn=n("br",null,null,-1),Fn=n("strong",null,"web API的申请：",-1),Wn={href:"https://lbs.amap.com/dev/key",target:"_blank",rel:"noopener noreferrer"},Vn=n("br",null,null,-1),Jn=n("strong",null,"申请时注意【服务平台】选项，需要申请【Web端(JS API)】和【Web服务】的key。",-1),Gn=p('<p>具体的使用，参考sdk使用手册：</p><h1 id="_7、路线管理" tabindex="-1"><a class="header-anchor" href="#_7、路线管理" aria-hidden="true">#</a> 7、路线管理</h1><p>路线管理是在路线规划中核心的功能，用户在下单时、订单转运单时会进行调用路线规划，后台系统对路线进行维护管理。路线类型如下：</p><ul><li><strong>干线</strong><ul><li>一级转运中心到一级转运中心</li></ul></li><li><strong>支线</strong><ul><li>一级转运中心与二级转运中心之间线路</li></ul></li><li><strong>接驳路线</strong><ul><li>二级转运中心到网点</li></ul></li><li><strong>专线（暂时不支持）</strong><ul><li>任务城市到任意城市</li></ul></li><li><strong>临时线路（暂时不支持）</strong><ul><li>任意转运中心到任意转运中心</li></ul><div class="hint-container danger"><p class="hint-container-title">警告</p><p>新增路线业务规则：干线：起点终点无顺序，支线：起点必须是二级转运中心，接驳路线：起点必须是网点</p></div></li></ul><h2 id="_7-1、业务流程" tabindex="-1"><a class="header-anchor" href="#_7-1、业务流程" aria-hidden="true">#</a> 7.1、业务流程</h2><figure><img src="'+W+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_7-2-1、接口定义" tabindex="-1"><a class="header-anchor" href="#_7-2-1、接口定义" aria-hidden="true">#</a> 7.2.1、接口定义</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PageResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">TransportLineNodeDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">TransportLineSearchDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>line<span class="token punctuation">.</span></span><span class="token class-name">TransportLine</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">AgencyEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 运输路线查询
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TransportLineRepository</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 查询两个网点之间最短的路线，查询深度为：10
     *
     * <span class="token keyword">@param</span> <span class="token parameter">start</span> 开始网点
     * <span class="token keyword">@param</span> <span class="token parameter">end</span>   结束网点
     * <span class="token keyword">@return</span> 路线
     */</span>
    <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">findShortestPath</span><span class="token punctuation">(</span><span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询两个网点之间最短的路线，最大查询深度为：10
     *
     * <span class="token keyword">@param</span> <span class="token parameter">start</span> 开始网点
     * <span class="token keyword">@param</span> <span class="token parameter">end</span>   结束网点
     * <span class="token keyword">@param</span> <span class="token parameter">depth</span> 查询深度，最大为：10
     * <span class="token keyword">@return</span> 路线
     */</span>
    <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">findShortestPath</span><span class="token punctuation">(</span><span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> depth<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询两个网点之间的路线列表，成本优先 &gt; 转运节点优先
     *
     * <span class="token keyword">@param</span> <span class="token parameter">start</span> 开始网点
     * <span class="token keyword">@param</span> <span class="token parameter">end</span>   结束网点
     * <span class="token keyword">@param</span> <span class="token parameter">depth</span> 查询深度
     * <span class="token keyword">@param</span> <span class="token parameter">limit</span> 返回路线的数量
     * <span class="token keyword">@return</span> 路线
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLineNodeDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findPathList</span><span class="token punctuation">(</span><span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> depth<span class="token punctuation">,</span> <span class="token keyword">int</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询数据节点之间的关系数量
     *
     * <span class="token keyword">@param</span> <span class="token parameter">firstNode</span>  第一个节点
     * <span class="token keyword">@param</span> <span class="token parameter">secondNode</span> 第二个节点
     * <span class="token keyword">@return</span> 数量
     */</span>
    <span class="token class-name">Long</span> <span class="token function">queryCount</span><span class="token punctuation">(</span><span class="token class-name">BaseEntity</span> firstNode<span class="token punctuation">,</span> <span class="token class-name">BaseEntity</span> secondNode<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 新增路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">firstNode</span>     第一个节点
     * <span class="token keyword">@param</span> <span class="token parameter">secondNode</span>    第二个节点
     * <span class="token keyword">@param</span> <span class="token parameter">transportLine</span> 路线数据
     * <span class="token keyword">@return</span> 新增关系的数量
     */</span>
    <span class="token class-name">Long</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">BaseEntity</span> firstNode<span class="token punctuation">,</span> <span class="token class-name">BaseEntity</span> secondNode<span class="token punctuation">,</span> <span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 更新路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">transportLine</span> 路线数据
     * <span class="token keyword">@return</span> 更新的数量
     */</span>
    <span class="token class-name">Long</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 删除路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">lineId</span> 关系id
     * <span class="token keyword">@return</span> 删除关系的数量
     */</span>
    <span class="token class-name">Long</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span> lineId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 分页查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">transportLineSearchDTO</span> 搜索参数
     * <span class="token keyword">@return</span> 路线列表
     */</span>
    <span class="token class-name">PageResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryPageList</span><span class="token punctuation">(</span><span class="token class-name">TransportLineSearchDTO</span> transportLineSearchDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * 根据ids批量查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">ids</span> id列表
     * <span class="token keyword">@return</span> 路线列表
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据id查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">id</span> 路线id
     * <span class="token keyword">@return</span> 路线数据
     */</span>
    <span class="token class-name">TransportLine</span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-2、接口实现" tabindex="-1"><a class="header-anchor" href="#_7-2-2、接口实现" aria-hidden="true">#</a> 7.2.2、接口实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">BeanUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">ListUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>convert<span class="token punctuation">.</span></span><span class="token class-name">Convert</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">MapUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PageUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PageResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">TransportLineNodeDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">TransportLineSearchDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>line<span class="token punctuation">.</span></span><span class="token class-name">TransportLine</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">AgencyEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">TransportLineRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">TransportLineUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>driver<span class="token punctuation">.</span></span><span class="token class-name">Record</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>value<span class="token punctuation">.</span></span><span class="token class-name">PathValue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token class-name">Relationship</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Neo4jClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>core<span class="token punctuation">.</span>schema<span class="token punctuation">.</span></span><span class="token class-name">Node</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 对于路线的各种操作
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransportLineRepositoryImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TransportLineRepository</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">Neo4jClient</span> neo4jClient<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">findShortestPath</span><span class="token punctuation">(</span><span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findShortestPath</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">findShortestPath</span><span class="token punctuation">(</span><span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> depth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取网点数据在Neo4j中的类型</span>
        <span class="token class-name">String</span> type <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//构造查询语句</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                <span class="token string">&quot;MATCH path = shortestPath((start:{}) -[*..{}]-&gt; (end:{}))\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;WHERE start.bid = $startId AND end.bid = $endId AND start.status = true AND end.status = true\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;RETURN path&quot;</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> depth<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLineNodeDTO</span><span class="token punctuation">&gt;</span></span> transportLineNodeDTOS <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeQueryPath</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>transportLineNodeDTOS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TransportLineNodeDTO</span> transportLineNodeDTO <span class="token operator">:</span> transportLineNodeDTOS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> transportLineNodeDTO<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLineNodeDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">executeQueryPath</span><span class="token punctuation">(</span><span class="token class-name">String</span> cypherQuery<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>start<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;startId&quot;</span><span class="token punctuation">)</span> <span class="token comment">//设置参数</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>end<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;endId&quot;</span><span class="token punctuation">)</span> <span class="token comment">//设置参数</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">TransportLineNodeDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token comment">//设置响应的类型</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token comment">//对结果进行封装处理</span>
                    <span class="token class-name">PathValue</span> pathValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PathValue</span><span class="token punctuation">)</span> record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token class-name">TransportLineUtils</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>pathValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLineNodeDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findPathList</span><span class="token punctuation">(</span><span class="token class-name">AgencyEntity</span> start<span class="token punctuation">,</span> <span class="token class-name">AgencyEntity</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> depth<span class="token punctuation">,</span> <span class="token keyword">int</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取网点数据在Neo4j中的类型</span>
        <span class="token class-name">String</span> type <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//构造查询语句</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                <span class="token string">&quot;MATCH path = (start:{}) -[*..{}]-&gt; (end:{})\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;WHERE start.bid = $startId AND end.bid = $endId AND start.status = true AND end.status = true\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;UNWIND relationships(path) AS r\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;WITH sum(r.cost) AS cost, path\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;RETURN path ORDER BY cost ASC, LENGTH(path) ASC LIMIT {}&quot;</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> depth<span class="token punctuation">,</span> type<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeQueryPath</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">queryCount</span><span class="token punctuation">(</span><span class="token class-name">BaseEntity</span> firstNode<span class="token punctuation">,</span> <span class="token class-name">BaseEntity</span> secondNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> firstNodeType <span class="token operator">=</span> firstNode<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> secondNodeType <span class="token operator">=</span> secondNode<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                <span class="token string">&quot;MATCH (m:{}) -[r]- (n:{})\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;WHERE m.bid = $firstBid AND n.bid = $secondBid\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;RETURN count(r) AS c&quot;</span><span class="token punctuation">,</span> firstNodeType<span class="token punctuation">,</span> secondNodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;firstBid&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>secondNode<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;secondBid&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> optional<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">BaseEntity</span> firstNode<span class="token punctuation">,</span> <span class="token class-name">BaseEntity</span> secondNode<span class="token punctuation">,</span> <span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> firstNodeType <span class="token operator">=</span> firstNode<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> secondNodeType <span class="token operator">=</span> secondNode<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                <span class="token string">&quot;MATCH (m:{} {bid : $firstBid})\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;WITH m\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;MATCH (n:{} {bid : $secondBid})\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;WITH m,n\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;CREATE\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot; (m) -[r:IN_LINE {cost:$cost, number:$number, type:$type, name:$name, distance:$distance, time:$time, extra:$extra, startOrganId:$startOrganId, endOrganId:$endOrganId,created:$created, updated:$updated}]-&gt; (n),\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot; (m) &lt;-[:OUT_LINE {cost:$cost, number:$number, type:$type, name:$name, distance:$distance, time:$time, extra:$extra, startOrganId:$endOrganId, endOrganId:$startOrganId, created:$created, updated:$updated}]- (n)\\n&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;RETURN count(r) AS c&quot;</span><span class="token punctuation">,</span> firstNodeType<span class="token punctuation">,</span> secondNodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bindAll</span><span class="token punctuation">(</span><span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">beanToMap</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;firstBid&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>secondNode<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;secondBid&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> optional<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token string">&quot;MATCH () -[r]-&gt; ()\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;WHERE id(r) = $id\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;SET r.cost = $cost , r.number = $number, r.name = $name ,r.distance = $distance ,r.time = $time, r.startOrganId = $startOrganId, r.endOrganId = $endOrganId, r.updated = $updated , r.extra = $extra \\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;RETURN count(r) AS c&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bindAll</span><span class="token punctuation">(</span><span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">beanToMap</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> optional<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span> lineId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token string">&quot;MATCH () -[r]-&gt; ()\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;WHERE id(r) = $lineId\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;DETACH DELETE r\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;RETURN count(r) AS c&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>lineId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;lineId&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> optional<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">PageResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryPageList</span><span class="token punctuation">(</span><span class="token class-name">TransportLineSearchDTO</span> transportLineSearchDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> page <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>transportLineSearchDTO<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> transportLineSearchDTO<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> skip <span class="token operator">=</span> <span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> searchParam <span class="token operator">=</span> <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">beanToMap</span><span class="token punctuation">(</span>transportLineSearchDTO<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MapUtil</span><span class="token punctuation">.</span><span class="token function">removeAny</span><span class="token punctuation">(</span>searchParam<span class="token punctuation">,</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pageSize&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//构建查询语句，第一个是查询数据，第二个是查询数量</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cyphers <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildPageQueryCypher</span><span class="token punctuation">(</span>searchParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> cyphers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">//数据</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>skip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;skip&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;limit&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bindAll</span><span class="token punctuation">(</span>searchParam<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">//封装数据</span>
                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toTransportLine</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 数据总数</span>
        <span class="token class-name">String</span> countCypher <span class="token operator">=</span> cyphers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> total <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>countCypher<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bindAll</span><span class="token punctuation">(</span>searchParam<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">PageResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> pageResponse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pageResponse<span class="token punctuation">.</span><span class="token function">setPage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pageResponse<span class="token punctuation">.</span><span class="token function">setPageSize</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pageResponse<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pageResponse<span class="token punctuation">.</span><span class="token function">setCounts</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> pages <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span><span class="token class-name">PageUtil</span><span class="token punctuation">.</span><span class="token function">totalPage</span><span class="token punctuation">(</span><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pageResponse<span class="token punctuation">.</span><span class="token function">setPages</span><span class="token punctuation">(</span>pages<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> pageResponse<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">buildPageQueryCypher</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> searchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> queryCypher<span class="token punctuation">;</span>
        <span class="token class-name">String</span> countCypher<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>searchParam<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//无参数</span>
            queryCypher <span class="token operator">=</span> <span class="token string">&quot;MATCH (m) -[r]-&gt; (n) RETURN m,r,n ORDER BY id(r) DESC SKIP $skip LIMIT $limit&quot;</span><span class="token punctuation">;</span>
            countCypher <span class="token operator">=</span> <span class="token string">&quot;MATCH () -[r]-&gt; () RETURN count(r) AS c&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//有参数</span>
            <span class="token class-name">String</span> cypherPrefix <span class="token operator">=</span> <span class="token string">&quot;MATCH (m) -[r]-&gt; (n)&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>cypherPrefix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; WHERE 1=1 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> searchParam<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Object</span> value <span class="token operator">=</span> searchParam<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;AND r.{} CONTAINS \${} \\n&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;AND r.{} = \${} \\n&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> cypher <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            queryCypher <span class="token operator">=</span> cypher <span class="token operator">+</span> <span class="token string">&quot;RETURN m,r,n ORDER BY id(r) DESC SKIP $skip LIMIT $limit&quot;</span><span class="token punctuation">;</span>
            countCypher <span class="token operator">=</span> cypher <span class="token operator">+</span> <span class="token string">&quot;RETURN count(r) AS c&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>queryCypher<span class="token punctuation">,</span> countCypher<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cypherQuery <span class="token operator">=</span> <span class="token string">&quot;MATCH (m) -[r]-&gt; (n)\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;WHERE id(r) in $ids\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;RETURN m,r,n&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>cypherQuery<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token string">&quot;ids&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fetchAs</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mappedBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>typeSystem<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">//封装数据</span>
                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toTransportLine</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">TransportLine</span> <span class="token function">toTransportLine</span><span class="token punctuation">(</span><span class="token class-name">Record</span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span>Node</span> startNode <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span>Node</span> endNode <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Relationship</span> relationship <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asRelationship</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> relationship<span class="token punctuation">.</span><span class="token function">asMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TransportLine</span> transportLine <span class="token operator">=</span> <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">toBeanIgnoreError</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> <span class="token class-name">TransportLine</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setStartOrganName</span><span class="token punctuation">(</span>startNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setStartOrganId</span><span class="token punctuation">(</span>startNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;bid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setEndOrganName</span><span class="token punctuation">(</span>endNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setEndOrganId</span><span class="token punctuation">(</span>endNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;bid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>relationship<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> transportLine<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLine</span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> transportLines <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">queryByIds</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>transportLines<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> transportLines<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-3、路线service" tabindex="-1"><a class="header-anchor" href="#_7-3、路线service" aria-hidden="true">#</a> 7.3、路线Service</h2><h3 id="_7-3-1、接口定义" tabindex="-1"><a class="header-anchor" href="#_7-3-1、接口定义" aria-hidden="true">#</a> 7.3.1、接口定义</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PageResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">TransportLineNodeDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">TransportLineSearchDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>line<span class="token punctuation">.</span></span><span class="token class-name">TransportLine</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 计算路线相关业务
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TransportLineService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 新增路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">transportLine</span> 路线数据
     * <span class="token keyword">@return</span> 是否成功
     */</span>
    <span class="token class-name">Boolean</span> <span class="token function">createLine</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 更新路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">transportLine</span> 路线数据
     * <span class="token keyword">@return</span> 是否成功
     */</span>
    <span class="token class-name">Boolean</span> <span class="token function">updateLine</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 删除路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">id</span> 路线id
     * <span class="token keyword">@return</span> 是否成功
     */</span>
    <span class="token class-name">Boolean</span> <span class="token function">deleteLine</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 分页查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">transportLineSearchDTO</span> 搜索参数
     * <span class="token keyword">@return</span> 路线列表
     */</span>
    <span class="token class-name">PageResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryPageList</span><span class="token punctuation">(</span><span class="token class-name">TransportLineSearchDTO</span> transportLineSearchDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询两个网点之间最短的路线，最大查询深度为：10
     *
     * <span class="token keyword">@param</span> <span class="token parameter">startId</span> 开始网点id
     * <span class="token keyword">@param</span> <span class="token parameter">endId</span>   结束网点id
     * <span class="token keyword">@return</span> 路线
     */</span>
    <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">queryShortestPath</span><span class="token punctuation">(</span><span class="token class-name">Long</span> startId<span class="token punctuation">,</span> <span class="token class-name">Long</span> endId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询两个网点之间成本最低的路线，最大查询深度为：10
     *
     * <span class="token keyword">@param</span> <span class="token parameter">startId</span> 开始网点id
     * <span class="token keyword">@param</span> <span class="token parameter">endId</span>   结束网点id
     * <span class="token keyword">@return</span> 路线集合
     */</span>
    <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">findLowestPath</span><span class="token punctuation">(</span><span class="token class-name">Long</span> startId<span class="token punctuation">,</span> <span class="token class-name">Long</span> endId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据调度策略查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">startId</span> 开始网点id
     * <span class="token keyword">@param</span> <span class="token parameter">endId</span>   结束网点id
     * <span class="token keyword">@return</span> 路线
     */</span>
    <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">queryPathByDispatchMethod</span><span class="token punctuation">(</span><span class="token class-name">Long</span> startId<span class="token punctuation">,</span> <span class="token class-name">Long</span> endId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据ids批量查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">ids</span> id列表
     * <span class="token keyword">@return</span> 路线列表
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据id查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">id</span> 路线id
     * <span class="token keyword">@return</span> 路线数据
     */</span>
    <span class="token class-name">TransportLine</span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-2、接口实现" tabindex="-1"><a class="header-anchor" href="#_7-3-2、接口实现" aria-hidden="true">#</a> 7.3.2、接口实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">BeanUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>copier<span class="token punctuation">.</span></span><span class="token class-name">CopyOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>convert<span class="token punctuation">.</span></span><span class="token class-name">Convert</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">MapUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">NumberUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>em<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span></span><span class="token class-name">EagleMapTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>em<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">ProviderEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>em<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">Coordinate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">SLException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PageResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>line<span class="token punctuation">.</span></span><span class="token class-name">TransportLine</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">AgencyEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">OLTEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>node<span class="token punctuation">.</span></span><span class="token class-name">TLTEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">DispatchMethodEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">ExceptionEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">TransportLineEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">TransportLineRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CostConfigurationService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">DispatchConfigurationService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">OrganService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">TransportLineService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 路线相关业务
 *
 * <span class="token keyword">@author</span> zzj
 * <span class="token keyword">@version</span> 1.0
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransportLineServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TransportLineService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">TransportLineRepository</span> transportLineRepository<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">EagleMapTemplate</span> eagleMapTemplate<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">OrganService</span> organService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">DispatchConfigurationService</span> dispatchConfigurationService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CostConfigurationService</span> costConfigurationService<span class="token punctuation">;</span>

    <span class="token comment">// 新增路线业务规则：干线：起点终点无顺序，支线：起点必须是二级转运中心，接驳路线：起点必须是网点</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">createLine</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TransportLineEnum</span> transportLineEnum <span class="token operator">=</span> <span class="token class-name">TransportLineEnum</span><span class="token punctuation">.</span><span class="token function">codeOf</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> transportLineEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">TRANSPORT_LINE_TYPE_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getStartOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> transportLine<span class="token punctuation">.</span><span class="token function">getEndOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//起点终点不能相同</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">TRANSPORT_LINE_ORGAN_CANNOT_SAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">BaseEntity</span> firstNode<span class="token punctuation">;</span>
        <span class="token class-name">BaseEntity</span> secondNode<span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>transportLineEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">TRUNK_LINE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// 干线</span>
                firstNode <span class="token operator">=</span> <span class="token class-name">OLTEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getStartOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                secondNode <span class="token operator">=</span> <span class="token class-name">OLTEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getEndOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token constant">BRANCH_LINE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// 支线，起点必须是 二级转运中心</span>
                firstNode <span class="token operator">=</span> <span class="token class-name">TLTEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getStartOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                secondNode <span class="token operator">=</span> <span class="token class-name">OLTEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getEndOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token constant">CONNECT_LINE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// 接驳路线，起点必须是 网点</span>
                firstNode <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getStartOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                secondNode <span class="token operator">=</span> <span class="token class-name">TLTEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getEndOrganId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">TRANSPORT_LINE_TYPE_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">hasEmpty</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">,</span> secondNode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">START_END_ORGAN_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//判断路线是否已经存在</span>
        <span class="token class-name">Long</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">queryCount</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">,</span> secondNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">TRANSPORT_LINE_ALREADY_EXISTS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        transportLine<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setCreated</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setUpdated</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getCreated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//补充信息</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">infoFromMap</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">,</span> secondNode<span class="token punctuation">,</span> transportLine<span class="token punctuation">)</span><span class="token punctuation">;</span>

        count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">,</span> secondNode<span class="token punctuation">,</span> transportLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 通过地图查询距离、时间，计算成本
     *
     * <span class="token keyword">@param</span> <span class="token parameter">firstNode</span>     开始节点
     * <span class="token keyword">@param</span> <span class="token parameter">secondNode</span>    结束节点
     * <span class="token keyword">@param</span> <span class="token parameter">transportLine</span> 路线对象
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">infoFromMap</span><span class="token punctuation">(</span><span class="token class-name">BaseEntity</span> firstNode<span class="token punctuation">,</span> <span class="token class-name">BaseEntity</span> secondNode<span class="token punctuation">,</span> <span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//查询节点数据</span>
        <span class="token class-name">OrganDTO</span> startOrgan <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organService<span class="token punctuation">.</span><span class="token function">findByBid</span><span class="token punctuation">(</span>firstNode<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">hasEmpty</span><span class="token punctuation">(</span>startOrgan<span class="token punctuation">,</span> startOrgan<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> startOrgan<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token string">&quot;请先完善机构信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">OrganDTO</span> endOrgan <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>organService<span class="token punctuation">.</span><span class="token function">findByBid</span><span class="token punctuation">(</span>secondNode<span class="token punctuation">.</span><span class="token function">getBid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">hasEmpty</span><span class="token punctuation">(</span>endOrgan<span class="token punctuation">,</span> endOrgan<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> endOrgan<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token string">&quot;请先完善机构信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//查询地图服务商</span>
        <span class="token class-name">Coordinate</span> origin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Coordinate</span><span class="token punctuation">(</span>startOrgan<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> startOrgan<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Coordinate</span> destination <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Coordinate</span><span class="token punctuation">(</span>endOrgan<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> endOrgan<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置高德地图参数，默认是不返回预计耗时的，需要额外设置参数</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> param <span class="token operator">=</span> <span class="token class-name">MapUtil</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;show_fields&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cost&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> driving <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eagleMapTemplate<span class="token punctuation">.</span><span class="token function">opsForDirection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">driving</span><span class="token punctuation">(</span><span class="token class-name">ProviderEnum</span><span class="token punctuation">.</span><span class="token constant">AMAP</span><span class="token punctuation">,</span> origin<span class="token punctuation">,</span> destination<span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>driving<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parseObj</span><span class="token punctuation">(</span>driving<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//时间，单位：秒</span>
        <span class="token class-name">Long</span> duration <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;route.paths[0].cost.duration&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//距离，单位：米</span>
        <span class="token class-name">Double</span> distance <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;route.paths[0].distance&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setDistance</span><span class="token punctuation">(</span><span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>distance<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 总成本 = 每公里平均成本 * 距离（单位：米） / 1000</span>
        <span class="token class-name">Double</span> cost <span class="token operator">=</span> costConfigurationService<span class="token punctuation">.</span><span class="token function">findCostByType</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transportLine<span class="token punctuation">.</span><span class="token function">setCost</span><span class="token punctuation">(</span><span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>cost <span class="token operator">*</span> distance <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">updateLine</span><span class="token punctuation">(</span><span class="token class-name">TransportLine</span> transportLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 先查后改</span>
        <span class="token class-name">TransportLine</span> transportLineData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">queryById</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> transportLineData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">TRANSPORT_LINE_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//拷贝数据，忽略null值以及不能修改的字段</span>
        <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>transportLine<span class="token punctuation">,</span> transportLineData<span class="token punctuation">,</span> <span class="token class-name">CopyOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIgnoreNullValue</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setIgnoreProperties</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;startOrganId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;startOrganName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;endOrganId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;endOrganName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        transportLineData<span class="token punctuation">.</span><span class="token function">setUpdated</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>transportLineData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">deleteLine</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">PageResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryPageList</span><span class="token punctuation">(</span><span class="token class-name">TransportLineSearchDTO</span> transportLineSearchDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">queryPageList</span><span class="token punctuation">(</span>transportLineSearchDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">queryShortestPath</span><span class="token punctuation">(</span><span class="token class-name">Long</span> startId<span class="token punctuation">,</span> <span class="token class-name">Long</span> endId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AgencyEntity</span> start <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>startId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AgencyEntity</span> end <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>endId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">hasEmpty</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">START_END_ORGAN_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">findShortestPath</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">findLowestPath</span><span class="token punctuation">(</span><span class="token class-name">Long</span> startId<span class="token punctuation">,</span> <span class="token class-name">Long</span> endId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AgencyEntity</span> start <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>startId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AgencyEntity</span> end <span class="token operator">=</span> <span class="token class-name">AgencyEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bid</span><span class="token punctuation">(</span>endId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">hasEmpty</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">START_END_ORGAN_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLineNodeDTO</span><span class="token punctuation">&gt;</span></span> pathList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">findPathList</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>pathList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> pathList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 根据调度策略查询路线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">startId</span> 开始网点id
     * <span class="token keyword">@param</span> <span class="token parameter">endId</span>   结束网点id
     * <span class="token keyword">@return</span> 路线
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLineNodeDTO</span> <span class="token function">queryPathByDispatchMethod</span><span class="token punctuation">(</span><span class="token class-name">Long</span> startId<span class="token punctuation">,</span> <span class="token class-name">Long</span> endId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//调度方式配置</span>
        <span class="token class-name">DispatchConfigurationDTO</span> configuration <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dispatchConfigurationService<span class="token punctuation">.</span><span class="token function">findConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> method <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getDispatchMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//调度方式，1转运次数最少，2成本最低</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token class-name">DispatchMethodEnum</span><span class="token punctuation">.</span><span class="token constant">SHORTEST_PATH</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">queryShortestPath</span><span class="token punctuation">(</span>startId<span class="token punctuation">,</span> endId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findLowestPath</span><span class="token punctuation">(</span>startId<span class="token punctuation">,</span> endId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TransportLine</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">queryByIds</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">TransportLine</span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transportLineRepository<span class="token punctuation">.</span><span class="token function">queryById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-4、路线成本" tabindex="-1"><a class="header-anchor" href="#_7-4、路线成本" aria-hidden="true">#</a> 7.4、路线成本</h2><h3 id="_7-4-1、需求" tabindex="-1"><a class="header-anchor" href="#_7-4-1、需求" aria-hidden="true">#</a> 7.4.1、需求</h3><p>在后台系统中，可以针对路线成本进行设置：<br><img src="`+V+`" alt="" loading="lazy"><br> 计算路线成本：距离 * 每公里平均成本</p><h3 id="_7-4-2、controller" tabindex="-1"><a class="header-anchor" href="#_7-4-2、controller" aria-hidden="true">#</a> 7.4.2、Controller</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">CostConfigurationDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CostConfigurationService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Validated</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 成本配置相关业务对外提供接口服务
 */</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;成本配置&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;cost-configuration&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Validated</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CostConfigurationController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CostConfigurationService</span> costConfigurationService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;查询成本配置&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> costConfigurationService<span class="token punctuation">.</span><span class="token function">findConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;保存成本配置&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@PostMapping</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveConfiguration</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">&gt;</span></span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        costConfigurationService<span class="token punctuation">.</span><span class="token function">saveConfiguration</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4-3、service" tabindex="-1"><a class="header-anchor" href="#_7-4-3、service" aria-hidden="true">#</a> 7.4.3、Service</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">CostConfigurationDTO</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 成本配置相关业务
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CostConfigurationService</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 查询成本配置
     *
     * <span class="token keyword">@return</span> 成本配置
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 保存成本配置
     * <span class="token keyword">@param</span> <span class="token parameter">dto</span> 成本配置
     */</span>
    <span class="token keyword">void</span> <span class="token function">saveConfiguration</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">&gt;</span></span> dto<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询成本根据类型
     * <span class="token keyword">@param</span> <span class="token parameter">type</span> 类型
     * <span class="token keyword">@return</span> 成本
     */</span>
    <span class="token class-name">Double</span> <span class="token function">findCostByType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4-4、serviceimpl" tabindex="-1"><a class="header-anchor" href="#_7-4-4、serviceimpl" aria-hidden="true">#</a> 7.4.4、ServiceImpl</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>convert<span class="token punctuation">.</span></span><span class="token class-name">Convert</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">SLException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">CostConfigurationDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">ExceptionEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">TransportLineEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CostConfigurationService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">StringRedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 成本配置相关业务
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CostConfigurationServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">CostConfigurationService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 成本配置 redis key
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SL_TRANSPORT_COST_REDIS_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;SL_TRANSPORT_COST_CONFIGURATION&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 默认成本配置
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token constant">DEFAULT_COST</span> <span class="token operator">=</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
            <span class="token class-name">TransportLineEnum</span><span class="token punctuation">.</span><span class="token constant">TRUNK_LINE</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
            <span class="token class-name">TransportLineEnum</span><span class="token punctuation">.</span><span class="token constant">BRANCH_LINE</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.2</span><span class="token punctuation">,</span>
            <span class="token class-name">TransportLineEnum</span><span class="token punctuation">.</span><span class="token constant">CONNECT_LINE</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询成本配置
     *
     * <span class="token keyword">@return</span> 成本配置
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> entries <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token constant">SL_TRANSPORT_COST_REDIS_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 使用默认值</span>
            entries <span class="token operator">=</span> <span class="token constant">DEFAULT_COST</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 返回</span>
        <span class="token keyword">return</span> entries<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">(</span><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 保存成本配置
     *
     * <span class="token keyword">@param</span> <span class="token parameter">dto</span> 成本配置
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveConfiguration</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CostConfigurationDTO</span><span class="token punctuation">&gt;</span></span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> v<span class="token punctuation">.</span><span class="token function">getTransportLineType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v <span class="token operator">-&gt;</span> v<span class="token punctuation">.</span><span class="token function">getCost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token constant">SL_TRANSPORT_COST_REDIS_KEY</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 查询成本根据类型
     *
     * <span class="token keyword">@param</span> <span class="token parameter">type</span> 类型
     * <span class="token keyword">@return</span> 成本
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">findCostByType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">TRANSPORT_LINE_TYPE_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 查询redis</span>
        <span class="token class-name">Object</span> o <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">SL_TRANSPORT_COST_REDIS_KEY</span><span class="token punctuation">,</span> type<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 返回默认值</span>
        <span class="token keyword">return</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_COST</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><h2 id="_7-5、测试" tabindex="-1"><a class="header-anchor" href="#_7-5、测试" aria-hidden="true">#</a> 7.5、测试</h2><p>新增路线：<br><img src="`+J+'" alt="" loading="lazy"><br> 新增成功：<br><img src="'+G+'" alt="" loading="lazy"><br> 同理可以测试其他类型路线。<br> 查询路线列表：<br><img src="'+Y+'" alt="" loading="lazy"><br> 查询到数据：<br><img src="'+K+'" alt="" loading="lazy"></p><h1 id="_8、综合测试" tabindex="-1"><a class="header-anchor" href="#_8、综合测试" aria-hidden="true">#</a> 8、综合测试</h1><h2 id="_8-1、功能测试" tabindex="-1"><a class="header-anchor" href="#_8-1、功能测试" aria-hidden="true">#</a> 8.1、功能测试</h2><p>下面我们可以整合到后台管理系统中进行测试。<br> 查询路线：<br><img src="'+X+'" alt="" loading="lazy"><br> 新增路线：<br><img src="'+Z+'" alt="" loading="lazy"></p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>新增路线时路线的距离和成本系统会自动进行计算，距离是通过高德地图服务查询的实际距离，成本按照所设置的成本进行计算（同一标准在计算路线时是可行的，但是不能作为真实的成本进行利润计算），在编辑路线时可以修改距离和成本。</p></div><p><img src="'+nn+'" alt="" loading="lazy"><br> 完善下数据：<br><img src="'+sn+'" alt="" loading="lazy"><br><img src="'+an+'" alt="" loading="lazy"></p><h2 id="_8-2、jenkins构建任务" tabindex="-1"><a class="header-anchor" href="#_8-2、jenkins构建任务" aria-hidden="true">#</a> 8.2、Jenkins构建任务</h2>',33),Yn=n("br",null,null,-1),Kn=n("img",{src:tn,alt:"",loading:"lazy"},null,-1),Xn=n("br",null,null,-1),Zn=n("br",null,null,-1),ns=n("img",{src:pn,alt:"",loading:"lazy"},null,-1),ss=n("br",null,null,-1),as=n("br",null,null,-1),ts=n("img",{src:en,alt:"",loading:"lazy"},null,-1),ps=n("br",null,null,-1),es=n("br",null,null,-1),os=n("img",{src:on,alt:"",loading:"lazy"},null,-1),cs=n("br",null,null,-1),ls=n("br",null,null,-1),is=n("img",{src:cn,alt:"",loading:"lazy"},null,-1),us=n("br",null,null,-1),ks=n("br",null,null,-1),rs=n("img",{src:ln,alt:"",loading:"lazy"},null,-1),ds=n("br",null,null,-1),ms=n("br",null,null,-1),vs=n("img",{src:un,alt:"",loading:"lazy"},null,-1),bs=n("br",null,null,-1),gs=n("br",null,null,-1),ys=n("img",{src:kn,alt:"",loading:"lazy"},null,-1),fs=n("br",null,null,-1),hs=n("br",null,null,-1),ws=n("img",{src:rn,alt:"",loading:"lazy"},null,-1),qs=n("br",null,null,-1),_s=n("br",null,null,-1),Ts=n("img",{src:dn,alt:"",loading:"lazy"},null,-1),Ls=n("br",null,null,-1),Os={href:"http://192.168.150.101:18083/doc.html",target:"_blank",rel:"noopener noreferrer"},Ss=n("br",null,null,-1),Es=n("br",null,null,-1),js=n("img",{src:mn,alt:"",loading:"lazy"},null,-1),xs=p(`<h2 id="_8-3、导入数据" tabindex="-1"><a class="header-anchor" href="#_8-3、导入数据" aria-hidden="true">#</a> 8.3、导入数据</h2><p>前面都是基于测试数据进行测试的，实际上我们已经构造了一些初始数据，可以直接导入使用，具体命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#停止neo4j微服务</span>
<span class="token function">docker</span> stop neo4j

<span class="token comment">#将数据文件neo4j.dump上传到挂载目录下：/var/lib/docker/volumes/neo4j/_data</span>

<span class="token comment">#执行如下命令进行导入</span>
<span class="token comment">#参数：--from：指定dump文件路径，--force：强制替换现有库</span>
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> neo4j:/data neo4j:4.4.5 neo4j-admin load <span class="token parameter variable">--from</span><span class="token operator">=</span>/data/neo4j.dump <span class="token parameter variable">--force</span>

<span class="token comment">#启动neo4j微服务</span>
<span class="token function">docker</span> start neo4j

<span class="token comment">#在管理工具中查询：match (n) return n</span>

<span class="token comment">#如果需要备份数据，可以用dump命令进行导出数据（导出也是需要先停止服务），示例如下：</span>
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> neo4j:/data neo4j:4.4.5 neo4j-admin dump <span class="token parameter variable">--to</span><span class="token operator">=</span>/data/neo4j2.dump <span class="token parameter variable">--database</span><span class="token operator">=</span>neo4j
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导入的数据如下：<br><img src="`+vn+'" alt="" loading="lazy"></p><blockquote><p>由于导入数据会覆盖之前插入的测试数据，会导致数据只存在权限系统中，出现脏数据，需要手动删除权限系统中对应的测试数据。</p></blockquote><h1 id="_9、练习" tabindex="-1"><a class="header-anchor" href="#_9、练习" aria-hidden="true">#</a> 9、练习</h1><h2 id="_9-1、练习1" tabindex="-1"><a class="header-anchor" href="#_9-1、练习1" aria-hidden="true">#</a> 9.1、练习1</h2><p>今日代码量较大，动手编写代码实现相关的业务功能。</p><h2 id="_9-2、练习2" tabindex="-1"><a class="header-anchor" href="#_9-2、练习2" aria-hidden="true">#</a> 9.2、练习2</h2><p>自己构造数据，进一步的完善数据和熟悉业务流程。</p><h1 id="_10、面试连环问" tabindex="-1"><a class="header-anchor" href="#_10、面试连环问" aria-hidden="true">#</a> 10、面试连环问</h1><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>面试官问：</p><ul><li>你们物流项目中的路线规划是怎么做的？</li><li>如何确定路线的成本和距离？成本计算规则是什么？该成本会计算到公司利润核算中吗？</li><li>对于路线的往返你们是怎么设计的？为什么成对创建的？</li><li>路线支持修改起点或终点机构吗？请说明理由。</li></ul></div>',12);function Cs(Ns,Rs){const a=o("ExternalLinkIcon");return c(),l("div",null,[gn,n("table",null,[yn,n("tbody",null,[n("tr",null,[fn,n("td",null,[n("a",hn,[s("http://git.sl-express.com/sl/sl-express-ms-transport-api"),t(a)])])]),n("tr",null,[wn,n("td",null,[n("a",qn,[s("http://git.sl-express.com/sl/sl-express-ms-transport-domain.git"),t(a)])])]),n("tr",null,[_n,n("td",null,[n("a",Tn,[s("http://git.sl-express.com/sl/sl-express-ms-transport-service.git"),t(a)])])])])]),Ln,n("p",null,[s("在项目中，为了统一使用RabbitMQ，所以将MQ的使用进行了封装，使用方法参考文档《"),n("a",On,[s("sl-express-mq使用手册"),t(a)]),s("》")]),Sn,n("p",null,[s("基于swagger接口进行测试："),n("a",En,[s("http://127.0.0.1:18083/doc.html"),t(a)])]),jn,n("p",null,[s("在后台系统中，对于机构数据的展现需要通过树形结构展现，如下："),xn,Cn,Nn,s(" 所以在"),Rn,s("中"),An,s("方法中封装了树形结构。"),Bn,s(" 具体的封装逻辑采用hutool工具包中的TreeUtil，参考文档："),n("a",In,[s("点击查看"),t(a)]),Dn,s(" 代码实现如下：")]),Mn,n("div",Un,[Pn,n("p",null,[s("在这里强烈建议将高德地图的ak改成自己的，不要使用默认的，因为使用人多了可能会被封号，将不能正常使用。更改了ak后，要记得重启EagleMap服务"),zn,Qn,$n,Hn,Fn,n("a",Wn,[s("https://lbs.amap.com/dev/key"),t(a)]),Vn,Jn])]),Gn,n("p",null,[s("如果在路线下没有service的构建任务，就需要创建一个构建任务："),Yn,Kn,Xn,s(" 点击新建任务："),Zn,ns,ss,s(" 输入任务名称，名称与工程名一致："),as,ts,ps,s(" 选择复制一个已有的任务："),es,os,cs,s(" 设置描述："),ls,is,us,s(" 端口设置为：18083："),ks,rs,ds,s(" 设置名称："),ms,vs,bs,s(" 设置git地址："),gs,ys,fs,s(" 点击保存："),hs,ws,qs,s(" 测试构建："),_s,Ts,Ls,s(" 测试："),n("a",Os,[s("http://192.168.150.101:18083/doc.html"),t(a)]),Ss,s(" 可以正常查询到数据："),Es,js]),xs])}const Is=e(bn,[["render",Cs],["__file","day06-路线规划之微服务.html.vue"]]);export{Is as default};
