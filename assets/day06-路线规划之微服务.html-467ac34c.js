const e=JSON.parse('{"key":"v-e00513d2","path":"/project/slwl/notes/day06-%E8%B7%AF%E7%BA%BF%E8%A7%84%E5%88%92%E4%B9%8B%E5%BE%AE%E6%9C%8D%E5%8A%A1.html","title":"day06-路线规划之微服务","lang":"zh-CN","frontmatter":{"title":"day06-路线规划之微服务","date":"2023-07-15T15:58:23.000Z","order":6,"category":["项目","神领物流"],"tag":["项目","神领物流"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"课程安排 路线规划需求分析 熟悉路线规划项目工程 实现机构数据同步 实现路线管理 综合功能测试 1、背景说明 通过前面的Neo4j的学习，你已经基本掌握了Neo4j的使用，接下来就需要应用Neo4j来实现路线规划微服务了。 目前路线规划微服务中的代码框架基本上已经写好了，但是具体的实现并没有编写，所以就需要你来填充这些关键核心的代码。 2、需求分析 对于运输路线规划，总的需求有两个，一个是机构管理，一个是路线管理。 其中，机构的管理是需要与【权限管家】系统中的【组织管理】中的数据进行同步，该同步是需要通过MQ完成的。 路线管理，主要提供路线的维护，最核心的服务是提供路线规划查询服务。","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/project/slwl/notes/day06-%E8%B7%AF%E7%BA%BF%E8%A7%84%E5%88%92%E4%B9%8B%E5%BE%AE%E6%9C%8D%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"day06-路线规划之微服务"}],["meta",{"property":"og:description","content":"课程安排 路线规划需求分析 熟悉路线规划项目工程 实现机构数据同步 实现路线管理 综合功能测试 1、背景说明 通过前面的Neo4j的学习，你已经基本掌握了Neo4j的使用，接下来就需要应用Neo4j来实现路线规划微服务了。 目前路线规划微服务中的代码框架基本上已经写好了，但是具体的实现并没有编写，所以就需要你来填充这些关键核心的代码。 2、需求分析 对于运输路线规划，总的需求有两个，一个是机构管理，一个是路线管理。 其中，机构的管理是需要与【权限管家】系统中的【组织管理】中的数据进行同步，该同步是需要通过MQ完成的。 路线管理，主要提供路线的维护，最核心的服务是提供路线规划查询服务。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"day06-路线规划之微服务"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"项目"}],["meta",{"property":"article:tag","content":"神领物流"}],["meta",{"property":"article:published_time","content":"2023-07-15T15:58:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day06-路线规划之微服务\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-07-15T15:58:23.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"3.1、拉取代码","slug":"_3-1、拉取代码","link":"#_3-1、拉取代码","children":[]},{"level":2,"title":"3.2、配置文件","slug":"_3-2、配置文件","link":"#_3-2、配置文件","children":[{"level":3,"title":"3.2.1、shared-spring-rabbitmq.yml","slug":"_3-2-1、shared-spring-rabbitmq-yml","link":"#_3-2-1、shared-spring-rabbitmq-yml","children":[]},{"level":3,"title":"3.2.2、shared-spring-eaglemap.yml","slug":"_3-2-2、shared-spring-eaglemap-yml","link":"#_3-2-2、shared-spring-eaglemap-yml","children":[]},{"level":3,"title":"3.2.3、shared-spring-neo4j.yml","slug":"_3-2-3、shared-spring-neo4j-yml","link":"#_3-2-3、shared-spring-neo4j-yml","children":[]}]},{"level":2,"title":"3.3、代码结构","slug":"_3-3、代码结构","link":"#_3-3、代码结构","children":[]},{"level":2,"title":"3.4、sl-express-mq","slug":"_3-4、sl-express-mq","link":"#_3-4、sl-express-mq","children":[{"level":3,"title":"3.4.1、发送消息","slug":"_3-4-1、发送消息","link":"#_3-4-1、发送消息","children":[]},{"level":3,"title":"3.4.2、消费消息","slug":"_3-4-2、消费消息","link":"#_3-4-2、消费消息","children":[]},{"level":3,"title":"3.4.3、统一封装","slug":"_3-4-3、统一封装","link":"#_3-4-3、统一封装","children":[]}]},{"level":2,"title":"4.1、业务流程","slug":"_4-1、业务流程","link":"#_4-1、业务流程","children":[]},{"level":2,"title":"4.3、业务规范","slug":"_4-3、业务规范","link":"#_4-3、业务规范","children":[]},{"level":2,"title":"4.4、具体实现","slug":"_4-4、具体实现","link":"#_4-4、具体实现","children":[]},{"level":2,"title":"5.1、IService","slug":"_5-1、iservice","link":"#_5-1、iservice","children":[]},{"level":2,"title":"5.2、ServiceImpl","slug":"_5-2、serviceimpl","link":"#_5-2、serviceimpl","children":[]},{"level":2,"title":"5.3、AgencyServiceImpl","slug":"_5-3、agencyserviceimpl","link":"#_5-3、agencyserviceimpl","children":[]},{"level":2,"title":"5.4、OLTServiceImpl","slug":"_5-4、oltserviceimpl","link":"#_5-4、oltserviceimpl","children":[]},{"level":2,"title":"5.5、TLTServiceImpl","slug":"_5-5、tltserviceimpl","link":"#_5-5、tltserviceimpl","children":[]},{"level":2,"title":"5.6、单元测试","slug":"_5-6、单元测试","link":"#_5-6、单元测试","children":[]},{"level":2,"title":"5.7、测试机构同步","slug":"_5-7、测试机构同步","link":"#_5-7、测试机构同步","children":[]},{"level":2,"title":"6.1、接口定义","slug":"_6-1、接口定义","link":"#_6-1、接口定义","children":[]},{"level":2,"title":"6.2、具体实现","slug":"_6-2、具体实现","link":"#_6-2、具体实现","children":[]},{"level":2,"title":"6.3、OrganRepositoryImpl","slug":"_6-3、organrepositoryimpl","link":"#_6-3、organrepositoryimpl","children":[]},{"level":2,"title":"6.4、测试用例","slug":"_6-4、测试用例","link":"#_6-4、测试用例","children":[]},{"level":2,"title":"6.5、整合测试","slug":"_6-5、整合测试","link":"#_6-5、整合测试","children":[]},{"level":2,"title":"6.6、树形结构","slug":"_6-6、树形结构","link":"#_6-6、树形结构","children":[]},{"level":2,"title":"6.7、编辑机构","slug":"_6-7、编辑机构","link":"#_6-7、编辑机构","children":[{"level":3,"title":"6.7.1、EagleMap介绍","slug":"_6-7-1、eaglemap介绍","link":"#_6-7-1、eaglemap介绍","children":[]}]},{"level":2,"title":"7.1、业务流程","slug":"_7-1、业务流程","link":"#_7-1、业务流程","children":[{"level":3,"title":"7.2.1、接口定义","slug":"_7-2-1、接口定义","link":"#_7-2-1、接口定义","children":[]},{"level":3,"title":"7.2.2、接口实现","slug":"_7-2-2、接口实现","link":"#_7-2-2、接口实现","children":[]}]},{"level":2,"title":"7.3、路线Service","slug":"_7-3、路线service","link":"#_7-3、路线service","children":[{"level":3,"title":"7.3.1、接口定义","slug":"_7-3-1、接口定义","link":"#_7-3-1、接口定义","children":[]},{"level":3,"title":"7.3.2、接口实现","slug":"_7-3-2、接口实现","link":"#_7-3-2、接口实现","children":[]}]},{"level":2,"title":"7.4、路线成本","slug":"_7-4、路线成本","link":"#_7-4、路线成本","children":[{"level":3,"title":"7.4.1、需求","slug":"_7-4-1、需求","link":"#_7-4-1、需求","children":[]},{"level":3,"title":"7.4.2、Controller","slug":"_7-4-2、controller","link":"#_7-4-2、controller","children":[]},{"level":3,"title":"7.4.3、Service","slug":"_7-4-3、service","link":"#_7-4-3、service","children":[]},{"level":3,"title":"7.4.4、ServiceImpl","slug":"_7-4-4、serviceimpl","link":"#_7-4-4、serviceimpl","children":[]}]},{"level":2,"title":"","slug":"","link":"#","children":[]},{"level":2,"title":"7.5、测试","slug":"_7-5、测试","link":"#_7-5、测试","children":[]},{"level":2,"title":"8.1、功能测试","slug":"_8-1、功能测试","link":"#_8-1、功能测试","children":[]},{"level":2,"title":"8.2、Jenkins构建任务","slug":"_8-2、jenkins构建任务","link":"#_8-2、jenkins构建任务","children":[]},{"level":2,"title":"8.3、导入数据","slug":"_8-3、导入数据","link":"#_8-3、导入数据","children":[]},{"level":2,"title":"9.1、练习1","slug":"_9-1、练习1","link":"#_9-1、练习1","children":[]},{"level":2,"title":"9.2、练习2","slug":"_9-2、练习2","link":"#_9-2、练习2","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":28.36,"words":8508},"filePathRelative":"project/slwl/notes/day06-路线规划之微服务.md","localizedDate":"2023年7月15日","excerpt":"<h1> 课程安排</h1>\\n<ul>\\n<li>路线规划需求分析</li>\\n<li>熟悉路线规划项目工程</li>\\n<li>实现机构数据同步</li>\\n<li>实现路线管理</li>\\n<li>综合功能测试</li>\\n</ul>\\n<h1> 1、背景说明</h1>\\n<p>通过前面的Neo4j的学习，你已经基本掌握了Neo4j的使用，接下来就需要应用Neo4j来实现路线规划微服务了。<br>\\n目前路线规划微服务中的代码框架基本上已经写好了，但是具体的实现并没有编写，所以就需要你来填充这些关键核心的代码。<br>\\n</p>\\n<h1> 2、需求分析</h1>\\n<p>对于运输路线规划，总的需求有两个，一个是机构管理，一个是路线管理。<br>\\n其中，机构的管理是需要与【权限管家】系统中的【组织管理】中的数据进行同步，该同步是需要通过MQ完成的。<br>\\n<br>\\n路线管理，主要提供路线的维护，最核心的服务是提供路线规划查询服务。<br>\\n<br>\\n</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
