const e=JSON.parse('{"key":"v-5552ebb2","path":"/tools/docker/docker-v2-01.html","title":"二、docker-v2-01-66期","lang":"zh-CN","frontmatter":{"title":"二、docker-v2-01-66期","date":"2023-04-02T18:49:33.000Z","order":2,"category":["开发工具","容器技术","docker"],"tag":["开发工具","容器技术","docker"],"author":{"name":"liu yang fang","link":"https://github.com/lyf110"},"description":"docker（一） 课程目标： 1、什么是虚拟化 2、docker介绍 3、docker版本以及安装 4、docker架构 5、docker镜像操作 6、docker容器操作 1 什么是虚拟化 1.1 概念 在计算机中，虚拟化（英语：Virtualization）是一种资源管理技术，是将计算机的各种实体资源，如服务器、网络、内存及存储等，予以抽象、转换后呈现出来，打破实体结构间的不可切割的障碍，使用户可以比原本的组态更好的方式来应用这些资源。这些资源的新虚拟部份是不受现有资源的架设方式，地域或物理组态所限制。一般所指的虚拟化资源包括计算能力和资料存储。","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/tools/docker/docker-v2-01.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"二、docker-v2-01-66期"}],["meta",{"property":"og:description","content":"docker（一） 课程目标： 1、什么是虚拟化 2、docker介绍 3、docker版本以及安装 4、docker架构 5、docker镜像操作 6、docker容器操作 1 什么是虚拟化 1.1 概念 在计算机中，虚拟化（英语：Virtualization）是一种资源管理技术，是将计算机的各种实体资源，如服务器、网络、内存及存储等，予以抽象、转换后呈现出来，打破实体结构间的不可切割的障碍，使用户可以比原本的组态更好的方式来应用这些资源。这些资源的新虚拟部份是不受现有资源的架设方式，地域或物理组态所限制。一般所指的虚拟化资源包括计算能力和资料存储。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"二、docker-v2-01-66期"}],["meta",{"property":"article:author","content":"liu yang fang"}],["meta",{"property":"article:tag","content":"开发工具"}],["meta",{"property":"article:tag","content":"容器技术"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2023-04-02T18:49:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二、docker-v2-01-66期\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-02T18:49:33.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liu yang fang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"1.1 概念","slug":"_1-1-概念","link":"#_1-1-概念","children":[]},{"level":2,"title":"1.2 虚拟化架构","slug":"_1-2-虚拟化架构","link":"#_1-2-虚拟化架构","children":[{"level":3,"title":"1.2.1 全虚拟化","slug":"_1-2-1-全虚拟化","link":"#_1-2-1-全虚拟化","children":[]},{"level":3,"title":"1.2.2 操作系统虚拟化","slug":"_1-2-2-操作系统虚拟化","link":"#_1-2-2-操作系统虚拟化","children":[]},{"level":3,"title":"1.2.3 平台虚拟化","slug":"_1-2-3-平台虚拟化","link":"#_1-2-3-平台虚拟化","children":[]}]},{"level":2,"title":"1.3 hypervisor","slug":"_1-3-hypervisor","link":"#_1-3-hypervisor","children":[]},{"level":2,"title":"2.1 容器技术","slug":"_2-1-容器技术","link":"#_2-1-容器技术","children":[]},{"level":2,"title":"2.2 docker介绍","slug":"_2-2-docker介绍","link":"#_2-2-docker介绍","children":[]},{"level":2,"title":"2.3 docker好处","slug":"_2-3-docker好处","link":"#_2-3-docker好处","children":[]},{"level":2,"title":"2.4 集装箱思想","slug":"_2-4-集装箱思想","link":"#_2-4-集装箱思想","children":[]},{"level":2,"title":"2.5 container与vm区别","slug":"_2-5-container与vm区别","link":"#_2-5-container与vm区别","children":[]},{"level":2,"title":"2.6 虚拟机已死 容器才是未来","slug":"_2-6-虚拟机已死-容器才是未来","link":"#_2-6-虚拟机已死-容器才是未来","children":[]},{"level":2,"title":"3.1 docker版本介绍","slug":"_3-1-docker版本介绍","link":"#_3-1-docker版本介绍","children":[]},{"level":2,"title":"3.2 docker安装","slug":"_3-2-docker安装","link":"#_3-2-docker安装","children":[{"level":3,"title":"3.2.1 版本要求","slug":"_3-2-1-版本要求","link":"#_3-2-1-版本要求","children":[]},{"level":3,"title":"3.2.2 安装步骤","slug":"_3-2-2-安装步骤","link":"#_3-2-2-安装步骤","children":[]},{"level":3,"title":"3.3.3 docker engine","slug":"_3-3-3-docker-engine","link":"#_3-3-3-docker-engine","children":[]}]},{"level":2,"title":"4.1 docker daemon","slug":"_4-1-docker-daemon","link":"#_4-1-docker-daemon","children":[]},{"level":2,"title":"4.2 docker client","slug":"_4-2-docker-client","link":"#_4-2-docker-client","children":[]},{"level":2,"title":"4.3 docker registry","slug":"_4-3-docker-registry","link":"#_4-3-docker-registry","children":[]},{"level":2,"title":"5.1 列出镜像","slug":"_5-1-列出镜像","link":"#_5-1-列出镜像","children":[]},{"level":2,"title":"5.2 查找镜像","slug":"_5-2-查找镜像","link":"#_5-2-查找镜像","children":[]},{"level":2,"title":"5.3 拉取镜像","slug":"_5-3-拉取镜像","link":"#_5-3-拉取镜像","children":[]},{"level":2,"title":"5.4 删除镜像","slug":"_5-4-删除镜像","link":"#_5-4-删除镜像","children":[]},{"level":2,"title":"5.5 推送镜","slug":"_5-5-推送镜","link":"#_5-5-推送镜","children":[]},{"level":2,"title":"5.5 制作镜像","slug":"_5-5-制作镜像","link":"#_5-5-制作镜像","children":[]},{"level":2,"title":"5.6 设置镜像标签","slug":"_5-6-设置镜像标签","link":"#_5-6-设置镜像标签","children":[]},{"level":2,"title":"6.1 创建容器","slug":"_6-1-创建容器","link":"#_6-1-创建容器","children":[]},{"level":2,"title":"6.2 进入容器","slug":"_6-2-进入容器","link":"#_6-2-进入容器","children":[]},{"level":2,"title":"6.3 查看容器","slug":"_6-3-查看容器","link":"#_6-3-查看容器","children":[]},{"level":2,"title":"6.4 停止/启动容器","slug":"_6-4-停止-启动容器","link":"#_6-4-停止-启动容器","children":[]},{"level":2,"title":"6.5 获取容器/镜像的元数据","slug":"_6-5-获取容器-镜像的元数据","link":"#_6-5-获取容器-镜像的元数据","children":[]},{"level":2,"title":"6.6 删除容器","slug":"_6-6-删除容器","link":"#_6-6-删除容器","children":[]},{"level":2,"title":"6.7 查看容器日志","slug":"_6-7-查看容器日志","link":"#_6-7-查看容器日志","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":19.93,"words":5980},"filePathRelative":"tools/docker/docker-v2-01.md","localizedDate":"2023年4月3日","excerpt":"<h1> docker（一）</h1>\\n<p>课程目标：</p>\\n<p>1、什么是虚拟化</p>\\n<p>2、docker介绍</p>\\n<p>3、docker版本以及安装</p>\\n<p>4、docker架构</p>\\n<p>5、docker镜像操作</p>\\n<p>6、docker容器操作</p>\\n<h1> 1 什么是虚拟化</h1>\\n<h2> 1.1 概念</h2>\\n<p>在计算机中，虚拟化（英语：Virtualization）是一种资源管理技术，是将计算机的各种实体资源，如服务器、网络、内存及存储等，予以抽象、转换后呈现出来，<strong>打破实体结构间的不可切割的障碍，使用户可以比原本的组态更好的方式来应用这些资源</strong>。这些资源的新虚拟部份是不受现有资源的架设方式，地域或物理组态所限制。一般所指的虚拟化资源包括计算能力和资料存储。</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
