const l=JSON.parse('{"key":"v-07bdf760","path":"/project/slwl/notes/day11-%E7%89%A9%E6%B5%81%E4%BF%A1%E6%81%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1.html","title":"day11-物流信息微服务","lang":"zh-CN","frontmatter":{"title":"day11-物流信息微服务","date":"2023-07-15T15:58:23.000Z","order":11,"category":["项目","神领物流"],"tag":["项目","神领物流"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"课程安排 物流信息的需求分析 技术实现分析 基于MongoDB的功能实现 多级缓存的解决方案 Redis缓存存在的问题分析并解决 1、背景说明 快递员将包裹取走之后，直至收件人签收，期间发件人和收件人最为关心的就是“快递到哪了”，如何让收发件人清晰的了解到包裹的“实时”状态，就需要将物流信息给用户展现出来，也就是今天要学习的主要内容【物流信息】。 然而，此功能的并发量是有一定要求的，特别是在电商大促期间，快件数量非常庞大，也就意味着查询人的量也是很大的，所以，此处必须是缓存应用的集中地，我们也将在该业务中讲解Redis缓存应用的常见问题，并且去实施解决，从而形成通用的解决方案。 如果这块搞不好，程序员又要背锅了……","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/project/slwl/notes/day11-%E7%89%A9%E6%B5%81%E4%BF%A1%E6%81%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"day11-物流信息微服务"}],["meta",{"property":"og:description","content":"课程安排 物流信息的需求分析 技术实现分析 基于MongoDB的功能实现 多级缓存的解决方案 Redis缓存存在的问题分析并解决 1、背景说明 快递员将包裹取走之后，直至收件人签收，期间发件人和收件人最为关心的就是“快递到哪了”，如何让收发件人清晰的了解到包裹的“实时”状态，就需要将物流信息给用户展现出来，也就是今天要学习的主要内容【物流信息】。 然而，此功能的并发量是有一定要求的，特别是在电商大促期间，快件数量非常庞大，也就意味着查询人的量也是很大的，所以，此处必须是缓存应用的集中地，我们也将在该业务中讲解Redis缓存应用的常见问题，并且去实施解决，从而形成通用的解决方案。 如果这块搞不好，程序员又要背锅了……"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"day11-物流信息微服务"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"项目"}],["meta",{"property":"article:tag","content":"神领物流"}],["meta",{"property":"article:published_time","content":"2023-07-15T15:58:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day11-物流信息微服务\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-07-15T15:58:23.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"3.1、MySQL实现","slug":"_3-1、mysql实现","link":"#_3-1、mysql实现","children":[]},{"level":2,"title":"3.2、MongoDB实现","slug":"_3-2、mongodb实现","link":"#_3-2、mongodb实现","children":[]},{"level":2,"title":"3.3、分析","slug":"_3-3、分析","link":"#_3-3、分析","children":[]},{"level":2,"title":"4.1、Service实现","slug":"_4-1、service实现","link":"#_4-1、service实现","children":[{"level":3,"title":"4.2.1、saveOrUpdate","slug":"_4-2-1、saveorupdate","link":"#_4-2-1、saveorupdate","children":[]},{"level":3,"title":"4.2.2、查询","slug":"_4-2-2、查询","link":"#_4-2-2、查询","children":[]},{"level":3,"title":"4.2.3、测试","slug":"_4-2-3、测试","link":"#_4-2-3、测试","children":[]}]},{"level":2,"title":"4.2、记录物流信息","slug":"_4-2、记录物流信息","link":"#_4-2、记录物流信息","children":[{"level":3,"title":"4.2.1、分析","slug":"_4-2-1、分析","link":"#_4-2-1、分析","children":[]},{"level":3,"title":"4.2.2、消息结构","slug":"_4-2-2、消息结构","link":"#_4-2-2、消息结构","children":[]},{"level":3,"title":"4.2.3、功能实现","slug":"_4-2-3、功能实现","link":"#_4-2-3、功能实现","children":[]},{"level":3,"title":"4.2.4、测试","slug":"_4-2-4、测试","link":"#_4-2-4、测试","children":[]}]},{"level":2,"title":"5.1、什么是多级缓存","slug":"_5-1、什么是多级缓存","link":"#_5-1、什么是多级缓存","children":[]},{"level":2,"title":"5.2、Caffeine快速入门","slug":"_5-2、caffeine快速入门","link":"#_5-2、caffeine快速入门","children":[{"level":3,"title":"5.2.1、使用","slug":"_5-2-1、使用","link":"#_5-2-1、使用","children":[]},{"level":3,"title":"5.2.2、驱逐策略","slug":"_5-2-2、驱逐策略","link":"#_5-2-2、驱逐策略","children":[]}]},{"level":2,"title":"5.3、一级缓存","slug":"_5-3、一级缓存","link":"#_5-3、一级缓存","children":[{"level":3,"title":"5.3.1、Caffeine配置","slug":"_5-3-1、caffeine配置","link":"#_5-3-1、caffeine配置","children":[]},{"level":3,"title":"5.3.2、实现缓存逻辑","slug":"_5-3-2、实现缓存逻辑","link":"#_5-3-2、实现缓存逻辑","children":[]},{"level":3,"title":"5.3.3、测试","slug":"_5-3-3、测试","link":"#_5-3-3、测试","children":[]}]},{"level":2,"title":"5.4、二级缓存","slug":"_5-4、二级缓存","link":"#_5-4、二级缓存","children":[{"level":3,"title":"5.4.1、Redis配置","slug":"_5-4-1、redis配置","link":"#_5-4-1、redis配置","children":[]},{"level":3,"title":"5.4.2、缓存注解","slug":"_5-4-2、缓存注解","link":"#_5-4-2、缓存注解","children":[]},{"level":3,"title":"5.4.3、测试","slug":"_5-4-3、测试","link":"#_5-4-3、测试","children":[]}]},{"level":2,"title":"5.5、一级缓存更新的问题","slug":"_5-5、一级缓存更新的问题","link":"#_5-5、一级缓存更新的问题","children":[]},{"level":2,"title":"5.6、分布式场景下的问题","slug":"_5-6、分布式场景下的问题","link":"#_5-6、分布式场景下的问题","children":[{"level":3,"title":"5.6.1、问题分析","slug":"_5-6-1、问题分析","link":"#_5-6-1、问题分析","children":[]},{"level":3,"title":"5.6.2、问题解决","slug":"_5-6-2、问题解决","link":"#_5-6-2、问题解决","children":[]},{"level":3,"title":"5.6.3、测试","slug":"_5-6-3、测试","link":"#_5-6-3、测试","children":[]}]},{"level":2,"title":"6.1、缓存击穿","slug":"_6-1、缓存击穿","link":"#_6-1、缓存击穿","children":[{"level":3,"title":"6.1.1、说明","slug":"_6-1-1、说明","link":"#_6-1-1、说明","children":[]},{"level":3,"title":"6.1.2、解决方案","slug":"_6-1-2、解决方案","link":"#_6-1-2、解决方案","children":[]},{"level":3,"title":"6.1.3、实现","slug":"_6-1-3、实现","link":"#_6-1-3、实现","children":[]}]},{"level":2,"title":"6.2、缓存雪崩","slug":"_6-2、缓存雪崩","link":"#_6-2、缓存雪崩","children":[{"level":3,"title":"6.2.1、说明","slug":"_6-2-1、说明","link":"#_6-2-1、说明","children":[]},{"level":3,"title":"6.2.2、解决方案","slug":"_6-2-2、解决方案","link":"#_6-2-2、解决方案","children":[]},{"level":3,"title":"6.2.3、实现","slug":"_6-2-3、实现","link":"#_6-2-3、实现","children":[]},{"level":3,"title":"6.2.4、测试","slug":"_6-2-4、测试","link":"#_6-2-4、测试","children":[]}]},{"level":2,"title":"6.3、缓存穿透","slug":"_6-3、缓存穿透","link":"#_6-3、缓存穿透","children":[{"level":3,"title":"6.3.1、说明","slug":"_6-3-1、说明","link":"#_6-3-1、说明","children":[]},{"level":3,"title":"6.3.2、解决方案","slug":"_6-3-2、解决方案","link":"#_6-3-2、解决方案","children":[]},{"level":3,"title":"6.3.3、布隆过滤器","slug":"_6-3-3、布隆过滤器","link":"#_6-3-3、布隆过滤器","children":[]},{"level":3,"title":"6.3.4、实现","slug":"_6-3-4、实现","link":"#_6-3-4、实现","children":[]}]},{"level":2,"title":"7.1、练习1","slug":"_7-1、练习1","link":"#_7-1、练习1","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":27.38,"words":8213},"filePathRelative":"project/slwl/notes/day11-物流信息微服务.md","localizedDate":"2023年7月15日","excerpt":"<h1> 课程安排</h1>\\n<ul>\\n<li>物流信息的需求分析</li>\\n<li>技术实现分析</li>\\n<li>基于MongoDB的功能实现</li>\\n<li>多级缓存的解决方案</li>\\n<li>Redis缓存存在的问题分析并解决</li>\\n</ul>\\n<h1> 1、背景说明</h1>\\n<p>快递员将包裹取走之后，直至收件人签收，期间发件人和收件人最为关心的就是“快递到哪了”，如何让收发件人清晰的了解到包裹的“实时”状态，就需要将物流信息给用户展现出来，也就是今天要学习的主要内容【物流信息】。<br>\\n然而，此功能的并发量是有一定要求的，特别是在电商大促期间，快件数量非常庞大，也就意味着查询人的量也是很大的，所以，此处必须是缓存应用的集中地，我们也将在该业务中讲解Redis缓存应用的常见问题，并且去实施解决，从而形成通用的解决方案。<br>\\n如果这块搞不好，程序员又要背锅了……<br>\\n</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{l as data};
