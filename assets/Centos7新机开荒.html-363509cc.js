import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as t,c,a as n,b as s,d as i,e as a}from"./app-5f6064b2.js";const d="/assets/image-20230513110257877-92cb5a82.png",o="/assets/image-20230513114848055-ad1eb050.png",p={},u=a(`<h1 id="centos7-新机开荒" tabindex="-1"><a class="header-anchor" href="#centos7-新机开荒" aria-hidden="true">#</a> Centos7 新机开荒</h1><h2 id="_1、网络无法访问时" tabindex="-1"><a class="header-anchor" href="#_1、网络无法访问时" aria-hidden="true">#</a> 1、网络无法访问时</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens33
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-1-将onboot-no改为onboot-yes" tabindex="-1"><a class="header-anchor" href="#_1-1-将onboot-no改为onboot-yes" aria-hidden="true">#</a> 1.1 将<code>ONBOOT=no</code>改为<code>ONBOOT=yes</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=dhcp
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=ens33
UUID=7225cfbc-0390-4e14-b706-36000a0eb060
DEVICE=ens33
ONBOOT=yes

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="image-20230513110257877" tabindex="0" loading="lazy"><figcaption>image-20230513110257877</figcaption></figure><h3 id="_1-2-重启网络" tabindex="-1"><a class="header-anchor" href="#_1-2-重启网络" aria-hidden="true">#</a> 1.2 重启网络</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">service</span> network restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-配置yum-源为阿里的源地址" tabindex="-1"><a class="header-anchor" href="#_2-配置yum-源为阿里的源地址" aria-hidden="true">#</a> 2 配置yum 源为阿里的源地址</h2><h3 id="_2-1-先安装net-tools" tabindex="-1"><a class="header-anchor" href="#_2-1-先安装net-tools" aria-hidden="true">#</a> 2.1 先安装<code>net-tools</code></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> net-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-1-1-验证ifconfig" tabindex="-1"><a class="header-anchor" href="#_2-1-1-验证ifconfig" aria-hidden="true">#</a> 2.1.1 验证ifconfig</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost network-scripts<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>
ens33: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">&gt;</span>  mtu <span class="token number">1500</span>
        inet <span class="token number">192.168</span>.125.129  netmask <span class="token number">255.255</span>.255.0  broadcast <span class="token number">192.168</span>.125.255
        inet6 fe80::da40:2281:d333:3163  prefixlen <span class="token number">64</span>  scopeid 0x2<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>link<span class="token operator">&gt;</span>
        ether 00:0c:29:c7:4c:dd  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>
        RX packets <span class="token number">20696</span>  bytes <span class="token number">30107042</span> <span class="token punctuation">(</span><span class="token number">28.7</span> MiB<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">3708</span>  bytes <span class="token number">253936</span> <span class="token punctuation">(</span><span class="token number">247.9</span> KiB<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>

lo: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">7</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class="token operator">&gt;</span>  mtu <span class="token number">65536</span>
        inet <span class="token number">127.0</span>.0.1  netmask <span class="token number">255.0</span>.0.0
        inet6 ::1  prefixlen <span class="token number">128</span>  scopeid 0x1<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>host<span class="token operator">&gt;</span>
        loop  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Local Loopback<span class="token punctuation">)</span>
        RX packets <span class="token number">68</span>  bytes <span class="token number">5920</span> <span class="token punctuation">(</span><span class="token number">5.7</span> KiB<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">68</span>  bytes <span class="token number">5920</span> <span class="token punctuation">(</span><span class="token number">5.7</span> KiB<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-安装阿里镜像源" tabindex="-1"><a class="header-anchor" href="#_2-2-安装阿里镜像源" aria-hidden="true">#</a> 2.2 安装阿里镜像源</h3>`,17),m={href:"https://opsx.alibaba.com/mirror",target:"_blank",rel:"noopener noreferrer"},v=a(`<h4 id="_2-2-1-安装wget命令" tabindex="-1"><a class="header-anchor" href="#_2-2-1-安装wget命令" aria-hidden="true">#</a> 2.2.1 安装wget命令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先检查系统有没有wget</span>
<span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token function">wget</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># rpm -qa wget</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment">#</span>

<span class="token comment"># 没有的话，那么我们就安装wget</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">wget</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-备份-出错后可恢复。" tabindex="-1"><a class="header-anchor" href="#_2-2-2-备份-出错后可恢复。" aria-hidden="true">#</a> 2.2.2 备份，出错后可恢复。</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-3-下载新的centos-base-repo-到-etc-yum-repos-d" tabindex="-1"><a class="header-anchor" href="#_2-2-3-下载新的centos-base-repo-到-etc-yum-repos-d" aria-hidden="true">#</a> 2.2.3 下载新的CentOS-Base.repo 到/etc/yum.repos.d/</h4><p><strong>CentOS 7：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-4-清空旧的yum缓存" tabindex="-1"><a class="header-anchor" href="#_2-2-4-清空旧的yum缓存" aria-hidden="true">#</a> 2.2.4 清空旧的yum缓存</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum clean all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-5-生成新的yum仓库缓存" tabindex="-1"><a class="header-anchor" href="#_2-2-5-生成新的yum仓库缓存" aria-hidden="true">#</a> 2.2.5 生成新的yum仓库缓存</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum makecache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-6-配置一个第三方的-额外仓库源-epel源" tabindex="-1"><a class="header-anchor" href="#_2-2-6-配置一个第三方的-额外仓库源-epel源" aria-hidden="true">#</a> 2.2.6 配置一个第三方的 额外仓库源 （epel源）</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-3-更新yum软件" tabindex="-1"><a class="header-anchor" href="#_2-3-更新yum软件" aria-hidden="true">#</a> 2.3 更新yum软件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-4-安装vim" tabindex="-1"><a class="header-anchor" href="#_2-4-安装vim" aria-hidden="true">#</a> 2.4 安装vim</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> vim*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-4-1-配置vim" tabindex="-1"><a class="header-anchor" href="#_2-4-1-配置vim" aria-hidden="true">#</a> 2.4.1 配置vim</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 编辑指令</span>
<span class="token function">vim</span> /etc/vimrc

<span class="token comment"># 相关配置说明</span>

<span class="token builtin class-name">set</span> nu          <span class="token comment"># 设置显示行号</span>
<span class="token builtin class-name">set</span> showmode    <span class="token comment"># 设置在命令行界面最下面显示当前模式等</span>
<span class="token builtin class-name">set</span> ruler     	<span class="token comment"># 在右下角显示光标所在的行数等信息</span>
<span class="token builtin class-name">set</span> autoindent	<span class="token comment"># 设置每次单击enter键后，光标移动到下一行与上一行的起始字符对齐</span>
syntax on		<span class="token comment"># 设置语法检测，当编辑C或Shell脚本时，关键字会用特殊颜色显示</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>无中文版</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> nu
<span class="token builtin class-name">set</span> showmode
<span class="token builtin class-name">set</span> ruler
<span class="token builtin class-name">set</span> autoindent
syntax on
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="image-20230513114848055" tabindex="0" loading="lazy"><figcaption>image-20230513114848055</figcaption></figure><h3 id="_2-5-安装docker" tabindex="-1"><a class="header-anchor" href="#_2-5-安装docker" aria-hidden="true">#</a> 2.5 安装docker</h3><h4 id="_2-5-1-卸载docker" tabindex="-1"><a class="header-anchor" href="#_2-5-1-卸载docker" aria-hidden="true">#</a> 2.5.1 卸载docker</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
                  docker-client <span class="token punctuation">\\</span>
                  docker-client-latest <span class="token punctuation">\\</span>
                  docker-common <span class="token punctuation">\\</span>
                  docker-latest <span class="token punctuation">\\</span>
                  docker-latest-logrotate <span class="token punctuation">\\</span>
                  docker-logrotate <span class="token punctuation">\\</span>
                  docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-2-命令一键安装docker" tabindex="-1"><a class="header-anchor" href="#_2-5-2-命令一键安装docker" aria-hidden="true">#</a> 2.5.2 命令一键安装docker</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> <span class="token function">docker</span> <span class="token parameter variable">--mirror</span> Aliyun
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-5-3-配置阿里镜像加速服务" tabindex="-1"><a class="header-anchor" href="#_2-5-3-配置阿里镜像加速服务" aria-hidden="true">#</a> 2.5.3 配置阿里镜像加速服务</h4>`,30),b={href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"},h=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
  &quot;registry-mirrors&quot;: [&quot;https://g0f4bajl.mirror.aliyuncs.com&quot;]
}
EOF</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function k(g,f){const e=r("ExternalLinkIcon");return t(),c("div",null,[u,n("blockquote",null,[n("p",null,[s("ps: "),n("a",m,[s("阿里云的官方镜像源地址"),i(e)])])]),v,n("p",null,[n("a",b,[s("https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors"),i(e)])]),h])}const y=l(p,[["render",k],["__file","Centos7新机开荒.html.vue"]]);export{y as default};
