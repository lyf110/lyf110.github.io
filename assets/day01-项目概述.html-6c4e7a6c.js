import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,a as n,b as s,d as t,e}from"./app-5f6064b2.js";const i="/assets/image-20240407183435139-1-20772853.png",u="/assets/image-20240407183435163-2-73556637.png",r="/assets/image-20240407183435164-3-ffcd0467.png",d="/assets/image-20240407183435164-4-44815b65.png",k="/assets/image-20240407183435164-5-f84f30af.png",m="/assets/image-20240407183435165-6-6cb5fef1.png",v="/assets/image-20240407183435165-7-df456c77.png",h="/assets/image-20240407183435165-8-89c6a400.png",g="/assets/image-20240407183435167-9-1f6b9b20.png",_="/assets/image-20240407183435167-10-cc24cf1d.png",b="/assets/image-20240407183435168-11-26f768b4.png",f="/assets/image-20240407183435168-12-31feadab.png",y="/assets/image-20240407183435168-13-6bd57a7f.png",x="/assets/image-20240407183435168-14-9cbbabbe.png",w="/assets/image-20240407183435168-15-0c9148b1.png",z="/assets/image-20240407183435168-16-dcf2def9.png",T="/assets/image-20240407183435168-17-d4ff54bd.png",F="/assets/image-20240407183435168-18-03952e31.png",S="/assets/image-20240407183435168-19-4b6c0705.png",A="/assets/image-20240407183435168-20-e775fbda.png",j="/assets/image-20240407183435168-21-33851480.png",q="/assets/image-20240407183435168-22-50fda34e.png",C="/assets/image-20240407183435169-23-77c23d96.png",I="/assets/image-20240407183435169-24-87035b71.png",O="/assets/image-20240407183435169-25-dfc41014.png",R="/assets/image-20240407183435169-26-e9322ff4.png",U="/assets/image-20240407183435169-27-a671b461.png",G="/assets/image-20240407183435169-28-d0f70721.png",D="/assets/image-20240407183435169-29-a3a3c5fd.png",E="/assets/image-20240407183435169-30-db555efb.png",M="/assets/image-20240407183435169-31-ba37adb5.png",P="/assets/image-20240407183435170-32-ad85f709.png",N="/assets/image-20240407183435170-33-e09119be.png",B="/assets/image-20240407183435170-34-1ed58263.png",J="/assets/image-20240407183435170-35-9f8d199f.png",L="/assets/image-20240407183435170-36-c87fe8b6.png",H="/assets/image-20240407183435170-37-04548271.png",Q="/assets/image-20240407183435170-38-9fbf545f.png",V="/assets/image-20240407183435170-39-14eef0d6.png",X="/assets/image-20240407183435170-40-ccd47b76.png",K="/assets/image-20240407183435171-41-12f5b00b.png",W="/assets/image-20240407183435171-42-cd4b2baa.png",$="/assets/image-20240407183435171-43-dd53c0b9.png",Z="/assets/image-20240407183435171-44-2e36d9f3.png",Y="/assets/image-20240407183435171-45-af95ebea.png",nn="/assets/image-20240407183435171-46-a1931c31.png",sn="/assets/image-20240407183435171-47-92b9b5ad.png",an="/assets/image-20240407183435171-48-9c2b4680.png",tn="/assets/image-20240407183435171-49-74a95864.png",en="/assets/image-20240407183435172-50-6b3f32c4.png",pn="/assets/image-20240407183435172-51-dfe2e92c.svg",on="/assets/image-20240407183435172-52-65c38d2d.png",ln="/assets/image-20240407183435172-53-92746d0f.png",cn="/assets/image-20240407183435172-54-59ae8b2b.png",un="/assets/image-20240407183435172-55-49c845db.png",rn="/assets/image-20240407183435172-56-4f8e03ec.png",dn="/assets/image-20240407183435172-57-7feb546b.png",kn="/assets/image-20240407183435173-58-8cc2e42e.png",mn="/assets/image-20240407183435173-59-c1298755.png",vn="/assets/image-20240407183435173-60-ce0aa869.png",hn="/assets/image-20240407183435173-61-fde98731.png",gn="/assets/image-20240407183435173-62-004d27ca.png",_n="/assets/image-20240407183435173-63-e085d594.png",bn="/assets/image-20240407183435173-64-bc75af88.png",fn="/assets/image-20240407183435174-65-d3d77671.png",yn="/assets/image-20240407183435174-66-07014380.png",xn="/assets/image-20240407183435174-67-053352f1.png",wn="/assets/image-20240407183435174-68-6718b7c6.png",zn={},Tn=e('<h1 id="课程安排" tabindex="-1"><a class="header-anchor" href="#课程安排" aria-hidden="true">#</a> 课程安排</h1><ul><li>了解神领物流</li><li>了解物流行业</li><li>了解项目的技术架构</li><li>了解项目的业务功能</li><li>项目功能演示</li><li>搭建开发环境</li><li>基于现有代码进行bug修复</li><li>阅读已有的代码</li></ul><h1 id="_1、场景说明" tabindex="-1"><a class="header-anchor" href="#_1、场景说明" aria-hidden="true">#</a> 1、场景说明</h1><p>现在的你，已经学习了目前最主流的系统架构技术《微服务技术栈》，并且呢也拿到了满意的offer，入职了一家物流公司，公司名叫：神领物流公司。</p><p>现在你的心情还是比较复杂的，既开心又担心，开心是这个offer你很满意，担心的是，听朋友说物流行业的项目业务非常复杂，技术涉及的也比较多，而自己从来没有接触过物流项目，就担心自己能不能Hold得住？万一……</p><p>不用过于担心，本套课程就是带着你一点点的了解项目，站到一个新人的角度来看待这个项目，代码从哪里拉取？开发规范是什么？有哪些环境？项目业务是什么样的？ ……</p><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="_2、神领物流是什么" tabindex="-1"><a class="header-anchor" href="#_2、神领物流是什么" aria-hidden="true">#</a> 2、神领物流是什么？</h1><p>神领物流是一个基于微服务架构体系的**【生产级】**物流项目系统，这可能是目前你能学习到的最接近企业真实场景的项目课程，其业务完整度、真实度、复杂度会让你感到惊讶，在这里你会学习到最核心的物流调度系统，也可以学习到在复杂的微服务架构体系下开发以及相关问题的解决。学完后你的收获会很“哇塞”。</p><h2 id="_2-1、公司介绍" tabindex="-1"><a class="header-anchor" href="#_2-1、公司介绍" aria-hidden="true">#</a> 2.1、公司介绍</h2><p>公司从2019年开始业务快速扩张，网点数量从138家扩展至540家，车辆从170台增长到800台。同时，原有的系统非常简单，比如车辆的调度靠人工操作、所有的货物分拣依靠人员，核心订单数据手动录入，人效非常低。</p><p>随着业务不断演进，技术的不断提升，原有运输管理系统已无法满足现有快速扩展下的业务需求，但针对现有系统评估后发现，系统升级成本远高于重新研发。</p><p>因此，公司决定基于现有业务体系进行重新构建，打造一套新的TMS运输系统，直接更替原有系统。业务侧重于展示车辆调研、线路规划等核心业务流程，操作智能化，大幅度提升人效及管控效率。</p><h2 id="_2-2、组织架构" tabindex="-1"><a class="header-anchor" href="#_2-2、组织架构" aria-hidden="true">#</a> 2.2、组织架构</h2><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Java开发人员所在的一级部门为信息中心，主要负责集团新系统的研发、维护、更新迭代。信息中心下设3个2级部门，产品部、运维部以及开发部门，开发部门总计42人，按照以业务线划分为4个组、TMS项目组之外、WMS项目组、OMS项目、CRM组。</p><p>TMS(Transportation Management System 运输管理系统) 项目组目前共8人，其中前端3人，后端5人。后端人员根据以下功能模块拆分进行任务分配，实际业务中也不可能是一人包打天下，分工合作才是常态化操作。</p><h2 id="_2-3、产品说明" tabindex="-1"><a class="header-anchor" href="#_2-3、产品说明" aria-hidden="true">#</a> 2.3、产品说明</h2><p>神领物流系统类似顺丰速运，是向C端用户提供快递服务的系统。竞品有：顺丰、中通、圆通、京东快递等。<br> 项目产品主要有4端产品：</p><ul><li>用户端：基于微信小程序开发，外部客户使用，可以寄件、查询物流信息等。</li><li>快递员端：基于安卓开发的手机APP，公司内部的快递员使用，可以接收取派件任务等。</li><li>司机端：基于安卓开发的手机APP，公司内部的司机使用，可以接收运输任务、上报位置信息等。</li><li>后台系统管理：基于vue开发，PC端使用，公司内部管理员用户使用，可以进行基础数据维护、订单管理、运单管理等。</li></ul><h1 id="_3、物流行业系统" tabindex="-1"><a class="header-anchor" href="#_3、物流行业系统" aria-hidden="true">#</a> 3、物流行业系统</h1><p>从广度上来说，物流系统可以理解为由多个子系统组成，这里我们以一般综合型物流系统举例，在整体框架上可以分为仓储系统WMS、运配系统TMS、单据系统OMS和计费系统BMS。</p><p>这四大系统本质上解决了物流行业的四大核心问题：怎么存放、怎么运送、怎么跟进、怎么结算。</p><p>神领物流系统，是TMS运配系统，本质上解决的是怎样运送的问题。</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="_4、系统架构和技术架构" tabindex="-1"><a class="header-anchor" href="#_4、系统架构和技术架构" aria-hidden="true">#</a> 4、系统架构和技术架构</h1><h2 id="_4-1、系统架构" tabindex="-1"><a class="header-anchor" href="#_4-1、系统架构" aria-hidden="true">#</a> 4.1、系统架构</h2><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-2、技术架构" tabindex="-1"><a class="header-anchor" href="#_4-2、技术架构" aria-hidden="true">#</a> 4.2、技术架构</h2><p>下图展现了神领物流项目使用的主要的技术：</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="_5、功能演示" tabindex="-1"><a class="header-anchor" href="#_5、功能演示" aria-hidden="true">#</a> 5、功能演示</h1><h2 id="_5-1、需求文档" tabindex="-1"><a class="header-anchor" href="#_5-1、需求文档" aria-hidden="true">#</a> 5.1、需求文档</h2><p>下面将演示四端的主要功能，更多的功能具体查看各端的需求文档。</p>',34),Fn=n("th",null,"用户端",-1),Sn={href:"https://share.lanhuapp.com/#/invite?sid=qx01hbI7",target:"_blank",rel:"noopener noreferrer"},An=n("td",null,"快递员端",-1),jn={href:"https://share.lanhuapp.com/#/invite?sid=qxe42Dya",target:"_blank",rel:"noopener noreferrer"},qn=n("td",null,"司机端",-1),Cn={href:"https://share.lanhuapp.com/#/invite?sid=qX0NEmro",target:"_blank",rel:"noopener noreferrer"},In=n("td",null,"管理端",-1),On={href:"https://share.lanhuapp.com/#/invite?sid=qX0axVem",target:"_blank",rel:"noopener noreferrer"},Rn=e('<h2 id="_5-2、功能架构" tabindex="-1"><a class="header-anchor" href="#_5-2、功能架构" aria-hidden="true">#</a> 5.2、功能架构</h2><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_5-3、业务功能流程" tabindex="-1"><a class="header-anchor" href="#_5-3、业务功能流程" aria-hidden="true">#</a> 5.3、业务功能流程</h2><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>流程说明：</p><ul><li>用户在**【用户端】**下单后，生成订单</li><li>系统会根据订单生成**【取件任务】<strong>，快递员上门取件后成功后生成</strong>【运单】**</li><li>用户对订单进行支付，会产生**【交易单】**</li><li>快件开始运输，会经历起始营业部、分拣中心、转运中心、分拣中心、终点营业部之间的转运运输，在此期间会有多个**【运输任务】**</li><li>到达终点网点后，系统会生成**【派件任务】**，快递员进行派件作业</li><li>最后，用户将进行签收或拒收操作</li></ul></div><h2 id="_5-4、用户端" tabindex="-1"><a class="header-anchor" href="#_5-4、用户端" aria-hidden="true">#</a> 5.4、用户端</h2><p>功能演示操作视频列表：</p>',7),Un=n("th",null,"下单操作",-1),Gn={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/0c8fc60a-2cf5-4140-9592-124cb3352fd0.mp4",target:"_blank",rel:"noopener noreferrer"},Dn=n("td",null,"取消订单",-1),En={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/efd2553b-69ab-4ec1-ad71-f0fd27c84165.mp4",target:"_blank",rel:"noopener noreferrer"},Mn=n("td",null,"地址簿",-1),Pn={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/1fcbdd1e-70bc-461c-9b0e-60ec75edbabb.mp4",target:"_blank",rel:"noopener noreferrer"},Nn=e('<p><img src="'+h+'" alt="" loading="lazy"><br><img src="'+g+'" alt="" loading="lazy"><br><img src="'+_+'" alt="" loading="lazy"></p><h2 id="_5-5、快递员端" tabindex="-1"><a class="header-anchor" href="#_5-5、快递员端" aria-hidden="true">#</a> 5.5、快递员端</h2><p>功能演示操作视频列表：</p>',3),Bn=n("th",null,"派件操作流程",-1),Jn={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/7bb3000d-69b8-473f-9d6b-d391b8c28a9f.mp4",target:"_blank",rel:"noopener noreferrer"},Ln=n("td",null,"取件操作流程",-1),Hn={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/7767cda8-8e83-4c5c-a976-634815ec0a10.mp4",target:"_blank",rel:"noopener noreferrer"},Qn=n("td",null,"全部取派操作流程",-1),Vn={href:"https://outin-ffd84744973f11eb806300163e038793.oss-cn-beijing.aliyuncs.com/sv/605f258-1844feb861d/605f258-1844feb861d.mp4",target:"_blank",rel:"noopener noreferrer"},Xn=n("td",null,"搜索操作流程",-1),Kn={href:"https://outin-ffd84744973f11eb806300163e038793.oss-cn-beijing.aliyuncs.com/sv/60a0b1bf-1845000a4d0/60a0b1bf-1845000a4d0.mp4",target:"_blank",rel:"noopener noreferrer"},Wn=n("td",null,"消息操作流程",-1),$n={href:"https://outin-ffd84744973f11eb806300163e038793.oss-cn-beijing.aliyuncs.com/sv/38c12638-18450c563db/38c12638-18450c563db.mp4",target:"_blank",rel:"noopener noreferrer"},Zn=e('<p><img src="'+b+'" alt="" loading="lazy"><br><img src="'+f+'" alt="" loading="lazy"><br><img src="'+y+'" alt="" loading="lazy"><br><img src="'+x+'" alt="" loading="lazy"></p><h2 id="_5-6、司机端" tabindex="-1"><a class="header-anchor" href="#_5-6、司机端" aria-hidden="true">#</a> 5.6、司机端</h2>',2),Yn={href:"https://outin-ffd84744973f11eb806300163e038793.oss-cn-beijing.aliyuncs.com/sv/4ffdd092-184501a12ff/4ffdd092-184501a12ff.mp4",target:"_blank",rel:"noopener noreferrer"},ns=e('<br><img src="'+w+'" alt="" loading="lazy"><br><img src="'+z+'" alt="" loading="lazy"><br><img src="'+T+'" alt="" loading="lazy"><br><img src="'+F+'" alt="" loading="lazy"><br><img src="'+S+'" alt="" loading="lazy">',10),ss=n("h2",{id:"_5-7、后台管理系统",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-7、后台管理系统","aria-hidden":"true"},"#"),s(" 5.7、后台管理系统")],-1),as=n("p",null,"功能演示操作视频列表：",-1),ts=n("th",null,"建立机构",-1),es={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/44443260-b57f-41f8-a1f2-22c44b1c16c1.mp4",target:"_blank",rel:"noopener noreferrer"},ps=n("td",null,"新建员工",-1),os={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/ab24e727-9c1f-458c-a8c3-b2d3cbfce46d.mp4",target:"_blank",rel:"noopener noreferrer"},ls=n("td",null,"绘制作业范围",-1),cs={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/9a1e3679-38eb-4585-b41b-7d9277dc1da0.mp4",target:"_blank",rel:"noopener noreferrer"},is=n("td",null,"新建线路",-1),us={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/cd62d82c-7910-4df0-835b-08854ecb0e79.mp4",target:"_blank",rel:"noopener noreferrer"},rs=n("td",null,"启用车辆",-1),ds={href:"https://yjy-slwl-oss.oss-cn-hangzhou.aliyuncs.com/5d8adc94-201f-43ee-8ef1-7906e5d8f272.mp4",target:"_blank",rel:"noopener noreferrer"},ks=e('<p><img src="'+A+'" alt="" loading="lazy"><br><img src="'+j+'" alt="" loading="lazy"><br><img src="'+q+'" alt="" loading="lazy"><br><img src="'+C+'" alt="" loading="lazy"><br><img src="'+I+'" alt="" loading="lazy"><br><img src="'+O+'" alt="" loading="lazy"><br><img src="'+R+'" alt="" loading="lazy"><br><img src="'+U+'" alt="" loading="lazy"><br><img src="'+G+'" alt="" loading="lazy"></p><h1 id="_6、开发环境" tabindex="-1"><a class="header-anchor" href="#_6、开发环境" aria-hidden="true">#</a> 6、开发环境</h1><h2 id="_6-1、开发模式" tabindex="-1"><a class="header-anchor" href="#_6-1、开发模式" aria-hidden="true">#</a> 6.1、开发模式</h2><p>在神领物流开发团队中，采用了分组协作开发的模式，整个开发团队分为5个小组，每个小组4~5人，不同的分组负责不同的微服务。</p><p>开发环境分为本地开发环境、测试环境、生成环境：</p><ul><li>**本地开发环境：**自己的电脑环境</li><li>**测试环境：**在内网中搭建的一套大家都可以访问使用的环境</li><li>**生成环境：**最终给用户使用的环境</li></ul><h2 id="_6-2、团队分工" tabindex="-1"><a class="header-anchor" href="#_6-2、团队分工" aria-hidden="true">#</a> 6.2、团队分工</h2><p>目前神领物流项目拥有<strong>19</strong>个微服务，<strong>1</strong>个网关，<strong>1</strong>个parent工程，<strong>2</strong>个公共依赖工程，这些工程由上述的<strong>5</strong>个小组共同维护开发。</p><p><strong>新入职的你，加入到了开发一组。</strong></p>',9),ms=n("thead",null,[n("tr",null,[n("th",null,"开发组/负责模块"),n("th",null,"开发一组"),n("th",null,"开发二组"),n("th",null,"开发三组"),n("th",null,"开发四组"),n("th",null,"开发五组"),n("th",null,"说明")])],-1),vs={href:"http://git.sl-express.com/sl/sl-express-parent.git",target:"_blank",rel:"noopener noreferrer"},hs=n("td",null,"●",-1),gs=n("td",null,null,-1),_s=n("td",null,null,-1),bs=n("td",null,null,-1),fs=n("td",null,null,-1),ys=n("td",null,"父工程",-1),xs={href:"http://git.sl-express.com/sl/sl-express-common.git",target:"_blank",rel:"noopener noreferrer"},ws=n("td",null,"●",-1),zs=n("td",null,null,-1),Ts=n("td",null,null,-1),Fs=n("td",null,null,-1),Ss=n("td",null,null,-1),As=n("td",null,"通用工程",-1),js={href:"http://git.sl-express.com/sl/sl-express-mq.git",target:"_blank",rel:"noopener noreferrer"},qs=n("td",null,"●",-1),Cs=n("td",null,null,-1),Is=n("td",null,null,-1),Os=n("td",null,null,-1),Rs=n("td",null,null,-1),Us=n("td",null,"统一消息代码",-1),Gs={href:"http://git.sl-express.com/sl/sl-express-gateway.git",target:"_blank",rel:"noopener noreferrer"},Ds=n("td",null,"●",-1),Es=n("td",null,null,-1),Ms=n("td",null,null,-1),Ps=n("td",null,null,-1),Ns=n("td",null,null,-1),Bs=n("td",null,"网关",-1),Js={href:"http://git.sl-express.com/sl/sl-express-ms-base-service.git",target:"_blank",rel:"noopener noreferrer"},Ls=n("td",null,"●",-1),Hs=n("td",null,null,-1),Qs=n("td",null,null,-1),Vs=n("td",null,null,-1),Xs=n("td",null,null,-1),Ks=n("td",null,"基础微服务",-1),Ws={href:"http://git.sl-express.com/sl/sl-express-ms-carriage-service.git",target:"_blank",rel:"noopener noreferrer"},$s=n("td",null,null,-1),Zs=n("td",null,"●",-1),Ys=n("td",null,null,-1),na=n("td",null,null,-1),sa=n("td",null,null,-1),aa=n("td",null,"运费微服务",-1),ta={href:"http://git.sl-express.com/sl/sl-express-ms-courier-service.git",target:"_blank",rel:"noopener noreferrer"},ea=n("td",null,null,-1),pa=n("td",null,"●",-1),oa=n("td",null,null,-1),la=n("td",null,null,-1),ca=n("td",null,null,-1),ia=n("td",null,"快递员微服务",-1),ua={href:"http://git.sl-express.com/sl/sl-express-ms-dispatch-service.git",target:"_blank",rel:"noopener noreferrer"},ra=n("td",null,null,-1),da=n("td",null,null,-1),ka=n("td",null,"●",-1),ma=n("td",null,null,-1),va=n("td",null,null,-1),ha=n("td",null,"调度微服务",-1),ga={href:"http://git.sl-express.com/sl/sl-express-ms-driver-service.git",target:"_blank",rel:"noopener noreferrer"},_a=n("td",null,null,-1),ba=n("td",null,null,-1),fa=n("td",null,null,-1),ya=n("td",null,"●",-1),xa=n("td",null,null,-1),wa=n("td",null,"司机微服务",-1),za={href:"http://git.sl-express.com/sl/sl-express-ms-oms-service.git",target:"_blank",rel:"noopener noreferrer"},Ta=n("td",null,null,-1),Fa=n("td",null,"●",-1),Sa=n("td",null,null,-1),Aa=n("td",null,null,-1),ja=n("td",null,null,-1),qa=n("td",null,"订单微服务",-1),Ca={href:"http://git.sl-express.com/sl/sl-express-ms-service-scope-service.git",target:"_blank",rel:"noopener noreferrer"},Ia=n("td",null,null,-1),Oa=n("td",null,null,-1),Ra=n("td",null,null,-1),Ua=n("td",null,"●",-1),Ga=n("td",null,null,-1),Da=n("td",null,"服务范围微服务",-1),Ea={href:"http://git.sl-express.com/sl/sl-express-ms-sms-service.git",target:"_blank",rel:"noopener noreferrer"},Ma=n("td",null,null,-1),Pa=n("td",null,null,-1),Na=n("td",null,null,-1),Ba=n("td",null,"●",-1),Ja=n("td",null,null,-1),La=n("td",null,"短信微服务",-1),Ha={href:"http://git.sl-express.com/sl/sl-express-ms-track-service.git",target:"_blank",rel:"noopener noreferrer"},Qa=n("td",null,null,-1),Va=n("td",null,"●",-1),Xa=n("td",null,null,-1),Ka=n("td",null,null,-1),Wa=n("td",null,null,-1),$a=n("td",null,"轨迹微服务",-1),Za={href:"http://git.sl-express.com/sl/sl-express-ms-trade-service.git",target:"_blank",rel:"noopener noreferrer"},Ya=n("td",null,null,-1),nt=n("td",null,null,-1),st=n("td",null,"●",-1),at=n("td",null,null,-1),tt=n("td",null,null,-1),et=n("td",null,"支付微服务",-1),pt={href:"http://git.sl-express.com/sl/sl-express-ms-transport-service.git",target:"_blank",rel:"noopener noreferrer"},ot=n("td",null,null,-1),lt=n("td",null,null,-1),ct=n("td",null,"●",-1),it=n("td",null,null,-1),ut=n("td",null,null,-1),rt=n("td",null,"路线微服务",-1),dt={href:"http://git.sl-express.com/sl/sl-express-ms-transport-info-service.git",target:"_blank",rel:"noopener noreferrer"},kt=n("td",null,null,-1),mt=n("td",null,null,-1),vt=n("td",null,"●",-1),ht=n("td",null,null,-1),gt=n("td",null,null,-1),_t=n("td",null,"物流信息微服务",-1),bt={href:"http://git.sl-express.com/sl/sl-express-ms-user-service.git",target:"_blank",rel:"noopener noreferrer"},ft=n("td",null,null,-1),yt=n("td",null,null,-1),xt=n("td",null,null,-1),wt=n("td",null,null,-1),zt=n("td",null,"●",-1),Tt=n("td",null,"用户微服务",-1),Ft={href:"http://git.sl-express.com/sl/sl-express-ms-web-courier.git",target:"_blank",rel:"noopener noreferrer"},St=n("td",null,null,-1),At=n("td",null,"●",-1),jt=n("td",null,null,-1),qt=n("td",null,null,-1),Ct=n("td",null,null,-1),It=n("td",null,"快递员web服务",-1),Ot={href:"http://git.sl-express.com/sl/sl-express-ms-web-customer.git",target:"_blank",rel:"noopener noreferrer"},Rt=n("td",null,null,-1),Ut=n("td",null,null,-1),Gt=n("td",null,null,-1),Dt=n("td",null,null,-1),Et=n("td",null,"●",-1),Mt=n("td",null,"用户web服务",-1),Pt={href:"http://git.sl-express.com/sl/sl-express-ms-web-driver.git",target:"_blank",rel:"noopener noreferrer"},Nt=n("td",null,null,-1),Bt=n("td",null,null,-1),Jt=n("td",null,null,-1),Lt=n("td",null,"●",-1),Ht=n("td",null,null,-1),Qt=n("td",null,"司机web服务",-1),Vt={href:"http://git.sl-express.com/sl/sl-express-ms-web-manager.git",target:"_blank",rel:"noopener noreferrer"},Xt=n("td",null,null,-1),Kt=n("td",null,null,-1),Wt=n("td",null,null,-1),$t=n("td",null,null,-1),Zt=n("td",null,"●",-1),Yt=n("td",null,"后台web服务",-1),ne={href:"http://git.sl-express.com/sl/sl-express-ms-work-service.git",target:"_blank",rel:"noopener noreferrer"},se=n("td",null,null,-1),ae=n("td",null,null,-1),te=n("td",null,"●",-1),ee=n("td",null,null,-1),pe=n("td",null,null,-1),oe=n("td",null,"运单微服务",-1),le={href:"http://git.sl-express.com/sl/sl-express-ms-search-service.git",target:"_blank",rel:"noopener noreferrer"},ce=n("td",null,null,-1),ie=n("td",null,null,-1),ue=n("td",null,null,-1),re=n("td",null,null,-1),de=n("td",null,"●",-1),ke=n("td",null,"搜索微服务",-1),me=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"相关信息"),n("p",null,"**思考：**是否需要把所有的工程代码都拉取到本地进行编译运行？"),n("p",null,"不需要的。你只需要将自己将要负责的开发任务相关的代码拉取到本地进行开发即可，其他的服务都可以调用测试环境正在运行的服务。"),n("p",null,"另外，你有可能是没有权限拉取到其他开发组的代码的。")],-1),ve=n("p",null,[s("微服务间调用关系如下："),n("br"),n("img",{src:D,alt:"",loading:"lazy"})],-1),he=n("blockquote",null,[n("p",null,"可以看到，四个端的请求都会统一进入网关，再分发到对应的四个web微服务，再由web微服务请求其他微服务完成业务。")],-1),ge={href:"https://sl-express.itheima.net/#/zh-cn/modules/%E7%A5%9E%E9%A2%86%E7%89%A9%E6%B5%81%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB",target:"_blank",rel:"noopener noreferrer"},_e=e('<h2 id="_6-3、软件环境" tabindex="-1"><a class="header-anchor" href="#_6-3、软件环境" aria-hidden="true">#</a> 6.3、软件环境</h2><p>为了模拟企业中的开发环境，所以我们需要通过VMware导入linux虚拟机，该虚拟机中已经安装了课程中所需要的各种环境，包括，git、maven私服、Jenkins、MySQL、RabbitMQ等。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>关于JDK版本的说明：神领物流项目使用的JDK版本为11，需要同学们统一下环境，JDK11的安装包在资料中有提供。<br> 目录：资料\\软件包\\jdk-11.0.15.1_windows-x64_bin.exe</p></div><blockquote><p>🔔关闭本地开发环境的防火墙（很重要！）</p></blockquote><h3 id="_6-3-1、导入虚拟机" tabindex="-1"><a class="header-anchor" href="#_6-3-1、导入虚拟机" aria-hidden="true">#</a> 6.3.1、导入虚拟机</h3>',5),be={href:"https://www.yuque.com/zhangzhijun-91vgw/xze2gr/gav9r8x8kvd2eyxg",target:"_blank",rel:"noopener noreferrer"},fe=e('<div class="hint-container danger"><p class="hint-container-title">警告</p><p>注意：只要按照文档导入虚拟机即可，其他软件无需自己安装，都已经安装了，并且开机自启。</p></div><figure><img src="'+E+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>通过dps命令可以查询上述列表，dps是自定义命令。<br> 自定义命令方法如下：</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.bashrc

<span class="token comment">#增加如下内容</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">dps</span><span class="token operator">=</span><span class="token string">&#39;docker ps --format &quot;table{{.ID}}\\t{{.Names}}\\t{{.Status}}\\t{{.Ports}}&quot;&#39;</span>
<span class="token comment">#保存退出</span>

<span class="token comment">#生效</span>
<span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-2、配置本机hosts" tabindex="-1"><a class="header-anchor" href="#_6-3-2、配置本机hosts" aria-hidden="true">#</a> 6.3.2、配置本机hosts</h3><p>在本机hosts文件中设置如下配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.150.101 git.sl-express.com
<span class="token number">192.168</span>.150.101 maven.sl-express.com
<span class="token number">192.168</span>.150.101 jenkins.sl-express.com
<span class="token number">192.168</span>.150.101 auth.sl-express.com
<span class="token number">192.168</span>.150.101 rabbitmq.sl-express.com
<span class="token number">192.168</span>.150.101 nacos.sl-express.com
<span class="token number">192.168</span>.150.101 neo4j.sl-express.com
<span class="token number">192.168</span>.150.101 xxl-job.sl-express.com
<span class="token number">192.168</span>.150.101 eaglemap.sl-express.com
<span class="token number">192.168</span>.150.101 seata.sl-express.com
<span class="token number">192.168</span>.150.101 skywalking.sl-express.com
<span class="token number">192.168</span>.150.101 api.sl-express.com
<span class="token number">192.168</span>.150.101 admin.sl-express.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),ye={href:"http://git.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},xe=n("br",null,null,-1),we=n("img",{src:M,alt:"",loading:"lazy"},null,-1),ze=n("p",null,"看到这个页面就说明hosts已经生效。（也可以再试试其他的，比如：maven私服、jenkins等）",-1),Te=n("h3",{id:"_6-3-3、服务列表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-3-3、服务列表","aria-hidden":"true"},"#"),s(" 6.3.3、服务列表")],-1),Fe=n("div",{class:"hint-container danger"},[n("p",{class:"hint-container-title"},"警告"),n("p",null,"说明：如果通过域名访问，无需设置端口。")],-1),Se=n("thead",null,[n("tr",null,[n("th",null,"名称"),n("th",null,"地址"),n("th",null,"用户名/密码"),n("th",null,"端口")])],-1),Ae=n("td",null,"git",-1),je={href:"http://git.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},qe=n("td",null,"sl/sl123",-1),Ce=n("td",null,"10880",-1),Ie=n("td",null,"maven",-1),Oe={href:"http://maven.sl-express.com/nexus/",target:"_blank",rel:"noopener noreferrer"},Re=n("td",null,"admin/admin123",-1),Ue=n("td",null,"8081",-1),Ge=n("td",null,"jenkins",-1),De={href:"http://jenkins.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},Ee=n("td",null,"root/123",-1),Me=n("td",null,"8090",-1),Pe=n("td",null,"权限管家",-1),Ne={href:"http://auth.sl-express.com/api/authority/static/index.html",target:"_blank",rel:"noopener noreferrer"},Be=n("td",null,"admin/123456",-1),Je=n("td",null,"8764",-1),Le=n("td",null,"RabbitMQ",-1),He={href:"http://rabbitmq.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},Qe=n("td",null,"sl/sl321",-1),Ve=n("td",null,"15672",-1),Xe=n("tr",null,[n("td",null,"MySQL"),n("td",null,"-"),n("td",null,"root/123"),n("td",null,"3306")],-1),Ke=n("td",null,"nacos",-1),We={href:"http://nacos.sl-express.com/nacos/",target:"_blank",rel:"noopener noreferrer"},$e=n("td",null,"nacos/nacos",-1),Ze=n("td",null,"8848",-1),Ye=n("td",null,"neo4j",-1),np={href:"http://neo4j.sl-express.com/browser/",target:"_blank",rel:"noopener noreferrer"},sp=n("td",null,"neo4j/neo4j123",-1),ap=n("td",null,"7474",-1),tp=n("td",null,"xxl-job",-1),ep={href:"http://xxl-job.sl-express.com/xxl-job-admin",target:"_blank",rel:"noopener noreferrer"},pp=n("td",null,"admin/123456",-1),op=n("td",null,"28080",-1),lp=n("td",null,"EagleMap",-1),cp={href:"http://eaglemap.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},ip=n("td",null,"eagle/eagle",-1),up=n("td",null,"8484",-1),rp=n("td",null,"seata",-1),dp={href:"http://seata.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},kp=n("td",null,"seata/seata",-1),mp=n("td",null,"7091",-1),vp=n("td",null,"Gateway",-1),hp={href:"http://api.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},gp=n("td",null,"-",-1),_p=n("td",null,"9527",-1),bp=n("td",null,"admin",-1),fp={href:"http://admin.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},yp=n("td",null,"-",-1),xp=n("td",null,"80",-1),wp=n("td",null,"skywalking",-1),zp={href:"http://skywalking.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},Tp=n("td",null,"-",-1),Fp=n("td",null,"48080",-1),Sp=n("tr",null,[n("td",null,"Redis"),n("td",null,"-"),n("td",null,"123321"),n("td",null,"6379")],-1),Ap=n("tr",null,[n("td",null,"MongoDB"),n("td",null,"-"),n("td",null,"sl/123321"),n("td",null,"27017")],-1),jp=e(`<h3 id="_6-3-4、配置maven私服" tabindex="-1"><a class="header-anchor" href="#_6-3-4、配置maven私服" aria-hidden="true">#</a> 6.3.4、配置Maven私服</h3><p>在本地的maven（建议版本为3.6.x）配置中配置上述的私服，配置文件参考如下：<br> settings.xml文件：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span>
        <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/SETTINGS/1.0.0<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 本地仓库 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">&gt;</span></span>F:\\maven\\repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 配置私服中deploy的账号 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>sl-releases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">&gt;</span></span>deployment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">&gt;</span></span>deployment123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>sl-snapshots<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">&gt;</span></span>deployment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">&gt;</span></span>deployment123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servers</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 使用阿里云maven镜像，排除私服资源库 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>mirror<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central,jcenter,!sl-releases,!sl-snapshots<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mirror<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>sl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 配置项目deploy的地址 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>altReleaseDeploymentRepository</span><span class="token punctuation">&gt;</span></span>
                    sl-releases::default::http://maven.sl-express.com/nexus/content/repositories/releases/
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>altReleaseDeploymentRepository</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>altSnapshotDeploymentRepository</span><span class="token punctuation">&gt;</span></span>
                    sl-snapshots::default::http://maven.sl-express.com/nexus/content/repositories/snapshots/
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>altSnapshotDeploymentRepository</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 配置项目下载依赖的私服地址 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>sl-releases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.sl-express.com/nexus/content/repositories/releases/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>sl-snapshots<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.sl-express.com/nexus/content/repositories/snapshots/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeProfiles</span><span class="token punctuation">&gt;</span></span>
         <span class="token comment">&lt;!-- 激活配置 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeProfile</span><span class="token punctuation">&gt;</span></span>sl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeProfile</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeProfiles</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-5、服务版本" tabindex="-1"><a class="header-anchor" href="#_6-3-5、服务版本" aria-hidden="true">#</a> 6.3.5、服务版本</h3><table><thead><tr><th><strong>服务名</strong></th><th><strong>版本号</strong></th></tr></thead><tbody><tr><td>sl-express-parent</td><td>1.4</td></tr><tr><td>sl-express-common</td><td>1.2-SNAPSHOT</td></tr><tr><td>其他微服务</td><td>1.1-SNAPSHOT</td></tr></tbody></table><h1 id="_7、开发任务" tabindex="-1"><a class="header-anchor" href="#_7、开发任务" aria-hidden="true">#</a> 7、开发任务</h1><h2 id="_7-1、任务描述" tabindex="-1"><a class="header-anchor" href="#_7-1、任务描述" aria-hidden="true">#</a> 7.1、任务描述</h2><p>接下来是你加入到开发一组后接到的第一个任务，具体内容是：<br> 后台管理系统只允许管理员登录，非管理员（司机或快递员）是没有权限登录的，现在的情况是，任何角色的人都能登录到后台管理系统，应该是当非管理员登录时需要提示没有权限。<br> 这个可以算是一个bug修复的工作。接下来，你需要思考下，该如何解决这个问题。</p><p>解决步骤：</p><ul><li>先确定鉴权工作是在哪里完成的 <ul><li>通过前面的系统架构，可以得知是在网关中完成的</li></ul></li><li>拉取到网关的代码</li><li>阅读鉴权的业务逻辑</li><li>了解权限系统</li><li>动手编码解决问题</li><li>部署，功能测试</li></ul><h3 id="_7-1-1、部署后台管理系统" tabindex="-1"><a class="header-anchor" href="#_7-1-1、部署后台管理系统" aria-hidden="true">#</a> 7.1.1、部署后台管理系统</h3>`,11),qp={href:"https://www.yuque.com/zhangzhijun-91vgw/xze2gr/rhyie35xipdqk9dg",target:"_blank",rel:"noopener noreferrer"},Cp=n("br",null,null,-1),Ip={href:"http://admin.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},Op=n("br",null,null,-1),Rp=n("img",{src:P,alt:"",loading:"lazy"},null,-1),Up=n("br",null,null,-1),Gp=e('<h3 id="_7-1-2、部署后端服务" tabindex="-1"><a class="header-anchor" href="#_7-1-2、部署后端服务" aria-hidden="true">#</a> 7.1.2、部署后端服务</h3><p>后端服务需要启动如下几个服务：<br><img src="'+N+'" alt="" loading="lazy"><br> 目前，只启动了<code>itcast-auth-server</code>，其他均未启动：<br><img src="'+B+'" alt="" loading="lazy"><br> 所以需要在Jenkins中，依次启动这几个服务，类似如下构建（需要找到对应的构建任务进行构建）：<br><img src="'+J+'" alt="" loading="lazy"></p><p>启动完成：<br><img src="'+L+'" alt="" loading="lazy"><br> 在nacos中已经完成了服务的注册：<br><img src="'+H+'" alt="" loading="lazy"></p><h3 id="_7-1-3、测试" tabindex="-1"><a class="header-anchor" href="#_7-1-3、测试" aria-hidden="true">#</a> 7.1.3、测试</h3><p>刷新后台管理系统页面，即可成功看到验证码，说明所需要的服务已经启动完成了。<br><img src="'+Q+'" alt="" loading="lazy"><br> 使用默认账号，shenlingadmin/123456 即可完成登录：<br><img src="'+V+'" alt="" loading="lazy"></p><p>使用非管理员账号进行测试，例如：gzsj/123456 （司机账号） 或 hdkdy001/123456 （快递员账号） 进行测试，发现依然是可以登录的。<br><img src="'+X+'" alt="" loading="lazy"><br> 这样，这个问题就重现了。</p><h2 id="_7-2、拉取代码" tabindex="-1"><a class="header-anchor" href="#_7-2、拉取代码" aria-hidden="true">#</a> 7.2、拉取代码</h2><p>拉取代码步骤：</p>',8),Dp=n("li",null,"在本地创建 sl-express 文件夹，该目录存放项目课程期间所有的代码",-1),Ep=n("li",null,[s("启动idea，打开该目录"),n("br"),n("img",{src:K,alt:"",loading:"lazy"})],-1),Mp={href:"http://git.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},Pp=n("br",null,null,-1),Np=n("img",{src:W,alt:"",loading:"lazy"},null,-1),Bp=n("br",null,null,-1),Jp=n("img",{src:$,alt:"",loading:"lazy"},null,-1),Lp=n("li",null,[s("拉取到代码后，设置jdk版本为11"),n("br"),n("img",{src:Z,alt:"",loading:"lazy"})],-1),Hp=n("li",null,[s("添加modules，将sl-express-gateway加入进来"),n("br"),n("img",{src:Y,alt:"",loading:"lazy"})],-1),Qp=n("li",null,[s("成功拉取代码"),n("br"),n("img",{src:nn,alt:"",loading:"lazy"})],-1),Vp={href:"http://maven.sl-express.com/nexus/",target:"_blank",rel:"noopener noreferrer"},Xp=n("h2",{id:"_7-3、权限管家",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7-3、权限管家","aria-hidden":"true"},"#"),s(" 7.3、权限管家")],-1),Kp=n("p",null,"在神领物流项目中，快递员、司机、管理人员都是在权限管家中进行管理的，所以他们的登录都是需要对接权限管家完成的。",-1),Wp={href:"https://www.yuque.com/zhangzhijun-91vgw/xze2gr/pseyizoo073plvox",target:"_blank",rel:"noopener noreferrer"},$p=e(`<h2 id="_7-4、测试用户登录" tabindex="-1"><a class="header-anchor" href="#_7-4、测试用户登录" aria-hidden="true">#</a> 7.4、测试用户登录</h2><p>前面已经了解了权限管家，接下来我们将基于权限管家在<code>sl-express-gateway</code>中进行测试用户的登录以及对于token的校验。</p><h3 id="_7-4-1、依赖说明" tabindex="-1"><a class="header-anchor" href="#_7-4-1、依赖说明" aria-hidden="true">#</a> 7.4.1、依赖说明</h3><p>对接权限管家需要引入依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.itheima.em.auth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>itcast-auth-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Zp={class:"hint-container info"},Yp=n("p",{class:"hint-container-title"},"相关信息",-1),no=n("p",null,"该依赖已经导入，并且在parent中指定了版本号。",-1),so={href:"https://mvnrepository.com/artifact/com.itheima.em.auth/itcast-auth-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"},ao=e(`<h3 id="_7-4-2、解读配置" tabindex="-1"><a class="header-anchor" href="#_7-4-2、解读配置" aria-hidden="true">#</a> 7.4.2、解读配置</h3><p>在bootstrap-local.yml配置文件中配置了nacos配置中心，一些参数存放到了nacos中，这些参数一般都是不同环境不一样配置的。</p><p>sl-express-gateway.properties如下：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#权限系统的配置</span>
<span class="token key attr-name">authority.host</span> <span class="token punctuation">=</span> <span class="token value attr-value">192.168.150.101</span>
<span class="token key attr-name">authority.port</span> <span class="token punctuation">=</span> <span class="token value attr-value">8764</span>
<span class="token key attr-name">authority.timeout</span> <span class="token punctuation">=</span> <span class="token value attr-value">10000</span>
<span class="token comment">#应用id</span>
<span class="token key attr-name">authority.applicationId</span> <span class="token punctuation">=</span> <span class="token value attr-value">981194468570960001</span>

<span class="token comment">#角色id</span>
<span class="token key attr-name">role.manager</span> <span class="token punctuation">=</span> <span class="token value attr-value">986227712144197857,989278284569131905,996045142395786081,996045927523359809</span>
<span class="token comment">#快递员角色</span>
<span class="token key attr-name">role.courier</span> <span class="token punctuation">=</span> <span class="token value attr-value">989559057641637825</span>
<span class="token comment">#司机角色</span>
<span class="token key attr-name">role.driver</span> <span class="token punctuation">=</span> <span class="token value attr-value">989559028277315009</span>

<span class="token comment">#RSA公钥</span>
<span class="token key attr-name">sl.jwt.public-key</span> <span class="token punctuation">=</span> <span class="token value attr-value">MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDC6of/EqnM2008gRpFAJJd3iGF5o6P6SuJOcKq4iJQ+62EF4WKGIGQunJjPwVNQFqDuT7ko9bRFZNnMba9A5GrFELtAK7tzO9l19JgFcCBQoU3J6ehPCCunRKz52qJuzS0yiJp0dbB2i6cb7mSCftwZavmcpzhsBaOGQd23AnAmQIDAQAB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中applicationId、角色id都是需要在权限系统中找到。</p><figure><img src="`+sn+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>角色id需要在数据库表中查询，表为：itcast_auth.itcast_auth_role<br><img src="'+an+`" alt="" loading="lazy"></p><h3 id="_7-4-3、测试" tabindex="-1"><a class="header-anchor" href="#_7-4-3、测试" aria-hidden="true">#</a> 7.4.3、测试</h3><p>测试用例在AuthTemplateTest中：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//登录</span>
        <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LoginDTO</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>authTemplate<span class="token punctuation">.</span><span class="token function">opsForLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">token</span><span class="token punctuation">(</span><span class="token string">&quot;shenlingadmin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> token <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;token为：&quot;</span> <span class="token operator">+</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">UserDTO</span> user <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;user信息：&quot;</span> <span class="token operator">+</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//查询角色</span>
        <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> resultRole <span class="token operator">=</span> <span class="token class-name">AuthTemplateFactory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">opsForRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">findRoleByUserId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultRole<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>token校验测试：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token string">&quot;xxx.xx.xxx&quot;</span><span class="token punctuation">;</span> <span class="token comment">//上面方法中生成的token</span>
        <span class="token class-name">AuthUserInfoDTO</span> authUserInfo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tokenCheckService<span class="token punctuation">.</span><span class="token function">parserToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>authUserInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">toJsonStr</span><span class="token punctuation">(</span>authUserInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">警告</p><p>**说明：**权限管家生成的token采用的是RSA非对称加密方式，项目中配置的公钥一定要与权限系统中使用的公钥一致，否则会出现无法校验token的情况。</p></div><p><img src="`+tn+'" alt="" loading="lazy"><br> 项目中的公钥文件：<br><img src="'+en+'" alt="" loading="lazy"></p><h2 id="_7-5、阅读鉴权代码" tabindex="-1"><a class="header-anchor" href="#_7-5、阅读鉴权代码" aria-hidden="true">#</a> 7.5、阅读鉴权代码</h2><h3 id="_7-5-1、整体流程" tabindex="-1"><a class="header-anchor" href="#_7-5-1、整体流程" aria-hidden="true">#</a> 7.5.1、整体流程</h3><p>首先需要明确的一点是四个终端都是通过<code>sl-express-gateway</code>进行验证与鉴权的，下面以管理员请求流程为例，其他的流程类似。<br><img src="'+pn+`" alt="" loading="lazy"><br> 不同终端进入Gateway的请求路径是不一样的，并且不同的终端对于token的校验和鉴权逻辑是不一样的，所以需要在网关中对于各个终端创建不同的过滤器来实现。<br> 请求路径如下：</p><ul><li>快递员端：<code>/courier/**</code></li><li>用户端：<code>/customer/**</code></li><li>司机端：<code>/driver/**</code></li><li>管理端：<code>/manager/**</code></li></ul><p>具体的配置文件内容如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9527</span>
  <span class="token key atrule">tomcat</span><span class="token punctuation">:</span>
    <span class="token key atrule">uri-encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>
    <span class="token key atrule">threads</span><span class="token punctuation">:</span>
      <span class="token key atrule">max</span><span class="token punctuation">:</span> <span class="token number">1000</span>
      <span class="token key atrule">min-spare</span><span class="token punctuation">:</span> <span class="token number">30</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">username</span><span class="token punctuation">:</span> nacos
      <span class="token key atrule">password</span><span class="token punctuation">:</span> nacos
      <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.150.101<span class="token punctuation">:</span><span class="token number">8848</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ecae68ba<span class="token punctuation">-</span>7b43<span class="token punctuation">-</span>4473<span class="token punctuation">-</span>a980<span class="token punctuation">-</span>4ddeb6157bdc
        <span class="token key atrule">ip</span><span class="token punctuation">:</span> 192.168.150.1
      <span class="token key atrule">config</span><span class="token punctuation">:</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ecae68ba<span class="token punctuation">-</span>7b43<span class="token punctuation">-</span>4473<span class="token punctuation">-</span>a980<span class="token punctuation">-</span>4ddeb6157bdc
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">globalcors</span><span class="token punctuation">:</span>
        <span class="token key atrule">cors-configurations</span><span class="token punctuation">:</span>
          <span class="token key atrule">&#39;[/**]&#39;</span><span class="token punctuation">:</span>
            <span class="token key atrule">allowed-origin-patterns</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>
            <span class="token key atrule">allowed-headers</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>
            <span class="token key atrule">allow-credentials</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
            <span class="token key atrule">allowed-methods</span><span class="token punctuation">:</span>
              <span class="token punctuation">-</span> GET
              <span class="token punctuation">-</span> POST
              <span class="token punctuation">-</span> DELETE
              <span class="token punctuation">-</span> PUT
              <span class="token punctuation">-</span> OPTION
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">locator</span><span class="token punctuation">:</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>courier
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>courier
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/courier/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
            <span class="token punctuation">-</span> CourierToken
            <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>From<span class="token punctuation">,</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>gateway
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>customer
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>customer
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/customer/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
            <span class="token punctuation">-</span> CustomerToken
            <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>From<span class="token punctuation">,</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>gateway
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>driver
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>driver
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/driver/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
            <span class="token punctuation">-</span> DriverToken
            <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>From<span class="token punctuation">,</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>gateway
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>manager
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>web<span class="token punctuation">-</span>manager
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/manager/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
            <span class="token punctuation">-</span> ManagerToken
            <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>From<span class="token punctuation">,</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>gateway
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>trade
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>ms<span class="token punctuation">-</span>trade
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/trade/notify/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
            <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>From<span class="token punctuation">,</span> sl<span class="token punctuation">-</span>express<span class="token punctuation">-</span>gateway
<span class="token key atrule">itcast</span><span class="token punctuation">:</span>
  <span class="token key atrule">authority</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>authority.host<span class="token punctuation">}</span> <span class="token comment">#authority服务地址,根据实际情况更改</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>authority.port<span class="token punctuation">}</span> <span class="token comment">#authority服务端口</span>
    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>authority.timeout<span class="token punctuation">}</span> <span class="token comment">#http请求的超时时间</span>
    <span class="token key atrule">public-key-file</span><span class="token punctuation">:</span> auth/pub.key
    <span class="token key atrule">applicationId</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>authority.applicationId<span class="token punctuation">}</span>

<span class="token comment">#角色id</span>
<span class="token key atrule">role</span><span class="token punctuation">:</span>
  <span class="token key atrule">manager</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>role.manager<span class="token punctuation">}</span>
  <span class="token key atrule">courier</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>role.courier<span class="token punctuation">}</span>
  <span class="token key atrule">driver</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>role.driver<span class="token punctuation">}</span>

<span class="token key atrule">sl</span><span class="token punctuation">:</span>
  <span class="token key atrule">noAuthPaths</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> /courier/login/account
    <span class="token punctuation">-</span> /courier/swagger<span class="token punctuation">-</span>ui.html
    <span class="token punctuation">-</span> /courier/webjars/
    <span class="token punctuation">-</span> /courier/swagger<span class="token punctuation">-</span>resources
    <span class="token punctuation">-</span> /courier/v2/api<span class="token punctuation">-</span>docs
    <span class="token punctuation">-</span> /courier/doc.html
    <span class="token punctuation">-</span> /customer/user/login
    <span class="token punctuation">-</span> /customer/user/refresh
    <span class="token punctuation">-</span> /customer/swagger<span class="token punctuation">-</span>ui.html
    <span class="token punctuation">-</span> /customer/webjars/
    <span class="token punctuation">-</span> /customer/swagger<span class="token punctuation">-</span>resources
    <span class="token punctuation">-</span> /customer/v2/api<span class="token punctuation">-</span>docs
    <span class="token punctuation">-</span> /customer/doc.html
    <span class="token punctuation">-</span> /driver/login/account
    <span class="token punctuation">-</span> /driver/swagger<span class="token punctuation">-</span>ui.html
    <span class="token punctuation">-</span> /driver/webjars/
    <span class="token punctuation">-</span> /driver/swagger<span class="token punctuation">-</span>resources
    <span class="token punctuation">-</span> /driver/v2/api<span class="token punctuation">-</span>docs
    <span class="token punctuation">-</span> /driver/doc.html
    <span class="token punctuation">-</span> /manager/login
    <span class="token punctuation">-</span> /manager/webjars/
    <span class="token punctuation">-</span> /manager/swagger<span class="token punctuation">-</span>resources
    <span class="token punctuation">-</span> /manager/v2/api<span class="token punctuation">-</span>docs
    <span class="token punctuation">-</span> /manager/doc.html
    <span class="token punctuation">-</span> /manager/captcha
  <span class="token key atrule">jwt</span><span class="token punctuation">:</span>
    <span class="token key atrule">public-key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>sl.jwt.user<span class="token punctuation">-</span>secret<span class="token punctuation">-</span>key<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，在配置文件中配置了注册中心、cors跨域、自定义过滤器、自定义配置、白名单路径等信息。<br> 其中，自定义过滤器配置了4个，与处理类对应关系如下：</p><ul><li>CourierToken <strong>-&gt;</strong> com.sl.gateway.filter.CourierTokenGatewayFilterFactory</li><li>CustomerToken <strong>-&gt;</strong> com.sl.gateway.filter.CustomerTokenGatewayFilterFactory</li><li>DriverToken **-&gt; **com.sl.gateway.filter.DriverTokenGatewayFilterFactory</li><li>ManagerToken **-&gt; **com.sl.gateway.filter.ManagerTokenGatewayFilterFactory</li></ul><p>在GatewayFilterFactory中，继承AbstractGatewayFilterFactory类，实现GatewayFilterFactory接口中的apply()方法，返回GatewayFilter对象，即可在filter()方法中实现具体的业务逻辑。<br><img src="`+on+`" alt="" loading="lazy"><br> 具体的业务逻辑，在自定义<code>TokenGatewayFilter</code>类中完成。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>❓思考：</strong><br> 四个终端都共用<code>TokenGatewayFilter</code>类，而各个终端的校验逻辑是不一样的，该怎么做呢？</p></div><h3 id="_7-5-3、tokengatewayfilter" tabindex="-1"><a class="header-anchor" href="#_7-5-3、tokengatewayfilter" aria-hidden="true">#</a> 7.5.3、TokenGatewayFilter</h3><p><code>TokenGatewayFilter</code>过滤器是整个项目中的校验/ 鉴权流程的具体实现，由于存在不同的终端，导致具体的校验和鉴权逻辑不一样，所以需要通过自定义接口<code>AuthFilter</code>实现，也就是4个端的<code>TokenGatewayFilterFactory</code>同时也需要实现<code>AuthFilter</code>接口。</p><p>在向下游服务转发请求时，会携带2个头信息，分别是userInfo和token，也就是会将用户信息和token传递下去。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StrUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AuthUserInfoDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">MyConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">Constants</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span><span class="token class-name">GatewayFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span><span class="token class-name">GatewayFilterChain</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Ordered</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServerWebExchange</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">Mono</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TokenGatewayFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GatewayFilter</span><span class="token punctuation">,</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">MyConfig</span> myConfig<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">AuthFilter</span> authFilter<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TokenGatewayFilter</span><span class="token punctuation">(</span><span class="token class-name">MyConfig</span> myConfig<span class="token punctuation">,</span> <span class="token class-name">AuthFilter</span> authFilter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>myConfig <span class="token operator">=</span> myConfig<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>authFilter <span class="token operator">=</span> authFilter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取请求路径</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查看请求路径是否在白名单中</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">startWithAny</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> myConfig<span class="token punctuation">.</span><span class="token function">getNoAuthPaths</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//无需校验，直接放行</span>
            <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//获取header的参数</span>
        <span class="token class-name">String</span> token <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>authFilter<span class="token punctuation">.</span><span class="token function">tokenHeaderName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//没有权限</span>
            exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">UNAUTHORIZED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//校验token</span>
        <span class="token class-name">AuthUserInfoDTO</span> authUserInfoDTO <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token comment">//捕获token校验异常</span>
            authUserInfoDTO <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>authFilter<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;令牌校验失败，token = {}, path= {}&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> path<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>authUserInfoDTO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//token失效 或 伪造，响应401</span>
            exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">UNAUTHORIZED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//鉴权</span>
        <span class="token class-name">Boolean</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token comment">//捕获鉴权异常</span>
            result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>authFilter<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> authUserInfoDTO<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;权限校验失败，token = {}, path= {}&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> path<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//没有权限，响应400</span>
            exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//增加参数，向下游微服务传递参数</span>
        exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">GATEWAY</span><span class="token punctuation">.</span><span class="token constant">USERINFO</span><span class="token punctuation">,</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">toJsonStr</span><span class="token punctuation">(</span>authUserInfoDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">GATEWAY</span><span class="token punctuation">.</span><span class="token constant">TOKEN</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//校验通过放行</span>
        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//指定了拦截器的顺序，设置最小值确定第一个被执行</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5-4、authfilter" tabindex="-1"><a class="header-anchor" href="#_7-5-4、authfilter" aria-hidden="true">#</a> 7.5.4、AuthFilter</h3><p>AuthFilter是自定义接口，用于不同客户端（用户端、司机端、快递员端、管理端）校验/鉴权逻辑的实现，该接口定义了3个方法：</p><ul><li><code>check()</code>方法用于校验token</li><li><code>auth()</code>方法用于鉴权</li><li><code>tokenHeaderName()</code>方法是默认实现，默认请求头中token参数的名为：Authorization</li><li>执行流程是先校验token的有效性，再进行鉴权。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AuthUserInfoDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">Constants</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 鉴权业务的回调，具体逻辑由 GatewayFilterFactory 具体完成
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AuthFilter</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 校验token
     *
     * <span class="token keyword">@param</span> <span class="token parameter">token</span> 请求中的token
     * <span class="token keyword">@return</span> token中携带的数据
     */</span>
    <span class="token class-name">AuthUserInfoDTO</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 鉴权
     *
     * <span class="token keyword">@param</span> <span class="token parameter">token</span>        请求中的token
     * <span class="token keyword">@param</span> <span class="token parameter">authUserInfo</span> token中携带的数据
     * <span class="token keyword">@param</span> <span class="token parameter">path</span>         当前请求的路径
     * <span class="token keyword">@return</span> 是否通过
     */</span>
    <span class="token class-name">Boolean</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">,</span> <span class="token class-name">AuthUserInfoDTO</span> authUserInfo<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 请求中携带token的名称
     *
     * <span class="token keyword">@return</span> 头名称
     */</span>
    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">tokenHeaderName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">GATEWAY</span><span class="token punctuation">.</span><span class="token constant">AUTHORIZATION</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5-5、管理员校验实现" tabindex="-1"><a class="header-anchor" href="#_7-5-5、管理员校验实现" aria-hidden="true">#</a> 7.5.5、管理员校验实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AuthUserInfoDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">TokenCheckService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">MyConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span><span class="token class-name">GatewayFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">AbstractGatewayFilterFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 后台管理员token拦截处理
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ManagerTokenGatewayFilterFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractGatewayFilterFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">AuthFilter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">MyConfig</span> myConfig<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">TokenCheckService</span> tokenCheckService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">GatewayFilter</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Object</span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//由于实现了AuthFilter接口，所以可以传递this对象到TokenGatewayFilter中</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TokenGatewayFilter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myConfig<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">AuthUserInfoDTO</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//校验token</span>
        <span class="token keyword">return</span> tokenCheckService<span class="token punctuation">.</span><span class="token function">parserToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">,</span> <span class="token class-name">AuthUserInfoDTO</span> authUserInfoDTO<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>🔔分析：</strong><br> 由于<code>auth()</code>方法直接返回true，导致所有角色都能通过校验，也就是所有角色的用户都能登录到后台管理系统，这里就是bug原因的根本所在。</p></div><h2 id="_7-6、解决bug" tabindex="-1"><a class="header-anchor" href="#_7-6、解决bug" aria-hidden="true">#</a> 7.6、解决bug</h2><h3 id="_7-6-1、实现" tabindex="-1"><a class="header-anchor" href="#_7-6-1、实现" aria-hidden="true">#</a> 7.6.1、实现</h3><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>思路：</strong><br> 想让管理员角色的用户通过，而非管理员角色不能通过，这里就需要对auth()方法进行实现了，现在的实现是都返回true，那当然是所有的都通过了。<br> 所以，需要查询出当前用户的角色，查看是否具备管理员角色，如果有就放行，否则拒绝。</p></div><p>具体代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">AuthTemplateFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span></span><span class="token class-name">AuthTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">AuthUserInfoDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>sdk<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">TokenCheckService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">MyConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span><span class="token class-name">GatewayFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>filter<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">AbstractGatewayFilterFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 后台管理员token拦截处理
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ManagerTokenGatewayFilterFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractGatewayFilterFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">AuthFilter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">MyConfig</span> myConfig<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">TokenCheckService</span> tokenCheckService<span class="token punctuation">;</span>
    <span class="token comment">//获取配置文件中的管理员角色id</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${role.manager}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> managerRoleIds<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">GatewayFilter</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Object</span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//由于实现了AuthFilter接口，所以可以传递this对象到TokenGatewayFilter中</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TokenGatewayFilter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myConfig<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">AuthUserInfoDTO</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//校验token</span>
        <span class="token keyword">return</span> tokenCheckService<span class="token punctuation">.</span><span class="token function">parserToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">,</span> <span class="token class-name">AuthUserInfoDTO</span> authUserInfoDTO<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取AuthTemplate对象</span>
        <span class="token class-name">AuthTemplate</span> authTemplate <span class="token operator">=</span> <span class="token class-name">AuthTemplateFactory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查询该用户的角色</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> roleIds <span class="token operator">=</span> authTemplate<span class="token punctuation">.</span><span class="token function">opsForRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findRoleByUserId</span><span class="token punctuation">(</span>authUserInfoDTO<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//取交集，判断是否有交集即可判断出是否有权限</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> intersection <span class="token operator">=</span> <span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">intersection</span><span class="token punctuation">(</span>roleIds<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>managerRoleIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>intersection<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-6-2、测试" tabindex="-1"><a class="header-anchor" href="#_7-6-2、测试" aria-hidden="true">#</a> 7.6.2、测试</h3><p>测试分两种方法，分别是接口测试和功能测试，我们首先进行功能测试，然后再进行接口测试（swagger接口）。<br> 测试无误后，可以将代码提交到git中。</p><h4 id="_7-6-2-1、功能测试" tabindex="-1"><a class="header-anchor" href="#_7-6-2-1、功能测试" aria-hidden="true">#</a> 7.6.2.1、功能测试</h4>`,43),to=n("br",null,null,-1),eo=n("img",{src:ln,alt:"",loading:"lazy"},null,-1),po=n("br",null,null,-1),oo=n("code",null,"docker stop sl-express-gateway",-1),lo=n("br",null,null,-1),co={href:"http://api.sl-express.com",target:"_blank",rel:"noopener noreferrer"},io=n("br",null,null,-1),uo=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/src/nginx/conf
<span class="token function">vim</span> nginx.conf
<span class="token comment">#由于目前nginx正在运行中，nginx.conf是只读的，所以需要通过 wq! 命令强制保存</span>

<span class="token comment">#配置生效</span>
nginx <span class="token parameter variable">-s</span> reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改内容如下：<br><img src="`+cn+'" alt="" loading="lazy"><br> 使用司机账号进行测试：<br><img src="'+un+'" alt="" loading="lazy"><br> 可以看到，司机账号无法登录。<br><img src="'+rn+'" alt="" loading="lazy"></p><h4 id="_7-6-2-2、接口测试" tabindex="-1"><a class="header-anchor" href="#_7-6-2-2、接口测试" aria-hidden="true">#</a> 7.6.2.2、接口测试</h4><p>测试步骤：</p><ul><li>首先，测试管理员的登录，获取到token</li><li>接着测试管理员请求接口资源（期望结果：正常获取到数据）</li><li>更换成司机用户进行登录，并且测试请求接口资源（期望结果：响应400，没有权限）</li></ul>',5),ro={href:"http://127.0.0.1:9527/manager/doc.html",target:"_blank",rel:"noopener noreferrer"},ko=n("br",null,null,-1),mo=n("img",{src:dn,alt:"",loading:"lazy"},null,-1),vo=n("br",null,null,-1),ho=n("br",null,null,-1),go=n("img",{src:kn,alt:"",loading:"lazy"},null,-1),_o=n("br",null,null,-1),bo=n("br",null,null,-1),fo=n("img",{src:mn,alt:"",loading:"lazy"},null,-1),yo=n("br",null,null,-1),xo=n("br",null,null,-1),wo=n("img",{src:vn,alt:"",loading:"lazy"},null,-1),zo=n("br",null,null,-1),To=n("br",null,null,-1),Fo=n("img",{src:hn,alt:"",loading:"lazy"},null,-1),So=n("br",null,null,-1),Ao=n("br",null,null,-1),jo=n("img",{src:gn,alt:"",loading:"lazy"},null,-1),qo=n("br",null,null,-1),Co=n("br",null,null,-1),Io=n("img",{src:_n,alt:"",loading:"lazy"},null,-1),Oo=n("br",null,null,-1),Ro=n("br",null,null,-1),Uo=n("img",{src:bn,alt:"",loading:"lazy"},null,-1),Go=n("br",null,null,-1),Do=n("h3",{id:"_7-6-3、部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7-6-3、部署","aria-hidden":"true"},"#"),s(" 7.6.3、部署")],-1),Eo=n("br",null,null,-1),Mo={href:"http://jenkins.sl-express.com/",target:"_blank",rel:"noopener noreferrer"},Po=n("br",null,null,-1),No=n("br",null,null,-1),Bo=n("img",{src:fn,alt:"",loading:"lazy"},null,-1),Jo=n("br",null,null,-1),Lo=n("br",null,null,-1),Ho=n("img",{src:yn,alt:"",loading:"lazy"},null,-1),Qo=n("br",null,null,-1),Vo=n("br",null,null,-1),Xo=n("img",{src:xn,alt:"",loading:"lazy"},null,-1),Ko=n("br",null,null,-1),Wo=n("br",null,null,-1),$o=n("img",{src:wn,alt:"",loading:"lazy"},null,-1),Zo=n("br",null,null,-1),Yo=n("h1",{id:"_8、课后练习",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8、课后练习","aria-hidden":"true"},"#"),s(" 8、课后练习")],-1),nl=n("h2",{id:"_8-1、练习一-快递员的鉴权",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8-1、练习一-快递员的鉴权","aria-hidden":"true"},"#"),s(" 8.1、练习一：快递员的鉴权")],-1),sl=n("p",null,"难度系数：★☆☆☆☆",-1),al={href:"https://www.yuque.com/zhangzhijun-91vgw/xze2gr/rhyie35xipdqk9dg",target:"_blank",rel:"noopener noreferrer"},tl=n("h2",{id:"_8-2、练习二-司机端的鉴权",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8-2、练习二-司机端的鉴权","aria-hidden":"true"},"#"),s(" 8.2、练习二：司机端的鉴权")],-1),el=n("p",null,"难度系数：★☆☆☆☆",-1),pl={href:"https://www.yuque.com/zhangzhijun-91vgw/xze2gr/rhyie35xipdqk9dg",target:"_blank",rel:"noopener noreferrer"},ol=e('<h1 id="_9、面试连环问" tabindex="-1"><a class="header-anchor" href="#_9、面试连环问" aria-hidden="true">#</a> 9、面试连环问</h1><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>面试官问：</p><ul><li>简单介绍下你做的物流项目。</li><li>微服务项目团队如何协作？你们多少个小组开发？</li><li>项目中是如何进行持续集成的？提交git后如何自动进行构建？</li><li>说说统一网关中是如何进行认证与鉴权工作的？在网关中如何自定义过滤器？</li><li>项目中的用户权限是如何管理的？如何与权限管家对接？</li></ul></div>',2);function ll(cl,il){const a=o("ExternalLinkIcon");return l(),c("div",null,[Tn,n("table",null,[n("thead",null,[n("tr",null,[Fn,n("th",null,[n("a",Sn,[s("https://share.lanhuapp.com/#/invite?sid=qx01hbI7"),t(a)]),s(" 密码: UxGE")])])]),n("tbody",null,[n("tr",null,[An,n("td",null,[n("a",jn,[s("https://share.lanhuapp.com/#/invite?sid=qxe42Dya"),t(a)]),s(" 密码: Nomz")])]),n("tr",null,[qn,n("td",null,[n("a",Cn,[s("https://share.lanhuapp.com/#/invite?sid=qX0NEmro"),t(a)]),s(" 密码: yrzZ")])]),n("tr",null,[In,n("td",null,[n("a",On,[s("https://share.lanhuapp.com/#/invite?sid=qX0axVem"),t(a)]),s(" 密码: fh3i")])])])]),Rn,n("table",null,[n("thead",null,[n("tr",null,[Un,n("th",null,[n("a",Gn,[s("点击查看"),t(a)])])])]),n("tbody",null,[n("tr",null,[Dn,n("td",null,[n("a",En,[s("点击查看"),t(a)])])]),n("tr",null,[Mn,n("td",null,[n("a",Pn,[s("点击查看"),t(a)])])])])]),Nn,n("table",null,[n("thead",null,[n("tr",null,[Bn,n("th",null,[n("a",Jn,[s("点击查看"),t(a)])])])]),n("tbody",null,[n("tr",null,[Ln,n("td",null,[n("a",Hn,[s("点击查看"),t(a)])])]),n("tr",null,[Qn,n("td",null,[n("a",Vn,[s("点击查看"),t(a)])])]),n("tr",null,[Xn,n("td",null,[n("a",Kn,[s("点击查看"),t(a)])])]),n("tr",null,[Wn,n("td",null,[n("a",$n,[s("点击查看"),t(a)])])])])]),Zn,n("p",null,[n("a",Yn,[s("点击查看演示视频"),t(a)]),ns]),ss,as,n("table",null,[n("thead",null,[n("tr",null,[ts,n("th",null,[n("a",es,[s("点击查看"),t(a)])])])]),n("tbody",null,[n("tr",null,[ps,n("td",null,[n("a",os,[s("点击查看"),t(a)])])]),n("tr",null,[ls,n("td",null,[n("a",cs,[s("点击查看"),t(a)])])]),n("tr",null,[is,n("td",null,[n("a",us,[s("点击查看"),t(a)])])]),n("tr",null,[rs,n("td",null,[n("a",ds,[s("点击查看"),t(a)])])])])]),ks,n("table",null,[ms,n("tbody",null,[n("tr",null,[n("td",null,[n("a",vs,[s("sl-express-parent"),t(a)])]),hs,gs,_s,bs,fs,ys]),n("tr",null,[n("td",null,[n("a",xs,[s("sl-express-common"),t(a)])]),ws,zs,Ts,Fs,Ss,As]),n("tr",null,[n("td",null,[n("a",js,[s("sl-express-mq"),t(a)])]),qs,Cs,Is,Os,Rs,Us]),n("tr",null,[n("td",null,[n("a",Gs,[s("sl-express-gateway"),t(a)])]),Ds,Es,Ms,Ps,Ns,Bs]),n("tr",null,[n("td",null,[n("a",Js,[s("sl-express-ms-base"),t(a)])]),Ls,Hs,Qs,Vs,Xs,Ks]),n("tr",null,[n("td",null,[n("a",Ws,[s("sl-express-ms-carriage"),t(a)])]),$s,Zs,Ys,na,sa,aa]),n("tr",null,[n("td",null,[n("a",ta,[s("sl-express-ms-courier"),t(a)])]),ea,pa,oa,la,ca,ia]),n("tr",null,[n("td",null,[n("a",ua,[s("sl-express-ms-dispatch"),t(a)])]),ra,da,ka,ma,va,ha]),n("tr",null,[n("td",null,[n("a",ga,[s("sl-express-ms-driver"),t(a)])]),_a,ba,fa,ya,xa,wa]),n("tr",null,[n("td",null,[n("a",za,[s("sl-express-ms-oms"),t(a)])]),Ta,Fa,Sa,Aa,ja,qa]),n("tr",null,[n("td",null,[n("a",Ca,[s("sl-express-ms-service-scope"),t(a)])]),Ia,Oa,Ra,Ua,Ga,Da]),n("tr",null,[n("td",null,[n("a",Ea,[s("sl-express-ms-sms"),t(a)])]),Ma,Pa,Na,Ba,Ja,La]),n("tr",null,[n("td",null,[n("a",Ha,[s("sl-express-ms-track"),t(a)])]),Qa,Va,Xa,Ka,Wa,$a]),n("tr",null,[n("td",null,[n("a",Za,[s("sl-express-ms-trade"),t(a)])]),Ya,nt,st,at,tt,et]),n("tr",null,[n("td",null,[n("a",pt,[s("sl-express-ms-transport"),t(a)])]),ot,lt,ct,it,ut,rt]),n("tr",null,[n("td",null,[n("a",dt,[s("sl-express-ms-transport-info"),t(a)])]),kt,mt,vt,ht,gt,_t]),n("tr",null,[n("td",null,[n("a",bt,[s("sl-express-ms-user"),t(a)])]),ft,yt,xt,wt,zt,Tt]),n("tr",null,[n("td",null,[n("a",Ft,[s("sl-express-ms-web-courier"),t(a)])]),St,At,jt,qt,Ct,It]),n("tr",null,[n("td",null,[n("a",Ot,[s("sl-express-ms-web-customer"),t(a)])]),Rt,Ut,Gt,Dt,Et,Mt]),n("tr",null,[n("td",null,[n("a",Pt,[s("sl-express-ms-web-driver"),t(a)])]),Nt,Bt,Jt,Lt,Ht,Qt]),n("tr",null,[n("td",null,[n("a",Vt,[s("sl-express-ms-web-manager"),t(a)])]),Xt,Kt,Wt,$t,Zt,Yt]),n("tr",null,[n("td",null,[n("a",ne,[s("sl-express-ms-work"),t(a)])]),se,ae,te,ee,pe,oe]),n("tr",null,[n("td",null,[n("a",le,[s("sl-express-ms-search"),t(a)])]),ce,ie,ue,re,de,ke])])]),me,ve,he,n("p",null,[n("a",ge,[s("查看微服务间的依赖关系"),t(a)])]),_e,n("p",null,[s("具体参考文档："),n("a",be,[s("虚拟机导入手册"),t(a)])]),fe,n("p",null,[s("打开浏览器测试："),n("a",ye,[s("http://git.sl-express.com/"),t(a)]),xe,we]),ze,Te,Fe,n("table",null,[Se,n("tbody",null,[n("tr",null,[Ae,n("td",null,[n("a",je,[s("http://git.sl-express.com/"),t(a)])]),qe,Ce]),n("tr",null,[Ie,n("td",null,[n("a",Oe,[s("http://maven.sl-express.com/nexus/"),t(a)])]),Re,Ue]),n("tr",null,[Ge,n("td",null,[n("a",De,[s("http://jenkins.sl-express.com/"),t(a)])]),Ee,Me]),n("tr",null,[Pe,n("td",null,[n("a",Ne,[s("http://auth.sl-express.com/api/authority/static/index.html"),t(a)])]),Be,Je]),n("tr",null,[Le,n("td",null,[n("a",He,[s("http://rabbitmq.sl-express.com/"),t(a)])]),Qe,Ve]),Xe,n("tr",null,[Ke,n("td",null,[n("a",We,[s("http://nacos.sl-express.com/nacos/"),t(a)])]),$e,Ze]),n("tr",null,[Ye,n("td",null,[n("a",np,[s("http://neo4j.sl-express.com/browser/"),t(a)])]),sp,ap]),n("tr",null,[tp,n("td",null,[n("a",ep,[s("http://xxl-job.sl-express.com/xxl-job-admin"),t(a)])]),pp,op]),n("tr",null,[lp,n("td",null,[n("a",cp,[s("http://eaglemap.sl-express.com/"),t(a)])]),ip,up]),n("tr",null,[rp,n("td",null,[n("a",dp,[s("http://seata.sl-express.com/"),t(a)])]),kp,mp]),n("tr",null,[vp,n("td",null,[n("a",hp,[s("http://api.sl-express.com/"),t(a)])]),gp,_p]),n("tr",null,[bp,n("td",null,[n("a",fp,[s("http://admin.sl-express.com/"),t(a)])]),yp,xp]),n("tr",null,[wp,n("td",null,[n("a",zp,[s("http://skywalking.sl-express.com/"),t(a)])]),Tp,Fp]),Sp,Ap])]),jp,n("p",null,[s("后台管理系统的部署是使用101机器的Jenkins部署的，具体参考"),n("a",qp,[s("前端部署文档"),t(a)]),s("。部署完成后，就可以看到登录页面。"),Cp,s(" 地址："),n("a",Ip,[s("http://admin.sl-express.com/"),t(a)]),Op,Rp,Up,s(" 可以看到这个页面是可以正常访问，只是没有获取到验证码，是因为验证码的获取是需要后端服务支撑的，目前并没有启动后端服务。")]),Gp,n("ul",null,[Dp,Ep,n("li",null,[s("登录 "),n("a",Mp,[s("git"),t(a)]),s(" 服务，找到 sl-express-gateway 工程，拷贝地址，在idea中拉取代码（注意存储路径）"),Pp,Np,Bp,Jp]),Lp,Hp,Qp,n("li",null,[s("说明：该工程会依赖 sl-express-parent，此maven依赖是通过"),n("a",Vp,[s("私服"),t(a)]),s("拉取到的。")])]),Xp,Kp,n("p",null,[s("具体权限管家的介绍说明参见："),n("a",Wp,[s("权限管家使用说明"),t(a)])]),$p,n("div",Zp,[Yp,no,n("p",null,[s("该依赖已经上传到maven中央仓库，可以直接下载，地址："),n("a",so,[s("https://mvnrepository.com/artifact/com.itheima.em.auth/itcast-auth-spring-boot-starter"),t(a)])])]),ao,n("p",null,[s("由于本地启动服务后，会在nacos中注册了2个服务："),to,eo,po,s(" 所以需要将101服务器上的网关停止掉再进行测试。"),oo,lo,s(" 另外，需要修改101服务器上的nginx配置，让 "),n("a",co,[s("api.sl-express.com"),t(a)]),s(" 对应的服务指向到本地的9527端口服务（测试完成后再改回来）。"),io,s(" 修改nginx配置：")]),uo,n("p",null,[s("将本地Gateway服务启动起来，访问 "),n("a",ro,[s("http://127.0.0.1:9527/manager/doc.html"),t(a)]),s(" 即可看到【管理后台微服务接口文档】"),ko,mo,vo,s(" 随便测试个接口，会发现响应401："),ho,go,_o,s(" 测试登录接口，需要先获取验证码再进行登录："),bo,fo,yo,s(" 登录成功："),xo,wo,zo,s(" 获取到token："),To,Fo,So,s(" 设置请求头：Authorization"),Ao,jo,qo,s(" 进行功能测试："),Co,Io,Oo,s(" 更换成司机账户测试："),Ro,Uo,Go,s(" 会发现，更换成司机账户后会响应400，符合我们的预期。")]),Do,n("p",null,[s("项目的发布，我们采用Jenkins持续集成的方式，在提供的虚拟机中已经部署好了Jenkins，我们只需要进行简单的操作即可完成部署。"),Eo,s(" 第一步，浏览器打开："),n("a",Mo,[s("http://jenkins.sl-express.com/"),t(a)]),s("  （账号：root/123）"),Po,s(" 第二步，按照如下数字标识进行操作"),No,Bo,Jo,s(" 选择默认参数："),Lo,Ho,Qo,s(" 第三步，查看部署控制台，点击【sl-express-gateway】进入任务详情，左侧下方查看构建历史，点击最近的一个构建图标："),Vo,Xo,Ko,s(" 看到如下内容，说明以及部署成功。"),Wo,$o,Zo,s(" 部署成功后，可以进行正常功能测试。")]),Yo,nl,sl,n("p",null,[s("提示：快递员端的鉴权与管理端的鉴权类似，只是角色id不同。如果想要通过App进行登录测试，请参考"),n("a",al,[s("前端部署文档"),t(a)]),s("。")]),tl,el,n("p",null,[s("提示：司机端的鉴权与管理端的鉴权类似，只是角色id不同。如果想要通过App进行登录测试，请参考"),n("a",pl,[s("前端部署文档"),t(a)]),s("。")]),ol])}const dl=p(zn,[["render",ll],["__file","day01-项目概述.html.vue"]]);export{dl as default};
