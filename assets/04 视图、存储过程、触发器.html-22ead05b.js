const n=JSON.parse(`{"key":"v-0e08fd6f","path":"/database/mysql/heima2022/plus/04%20%E8%A7%86%E5%9B%BE%E3%80%81%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E3%80%81%E8%A7%A6%E5%8F%91%E5%99%A8.html","title":"四、MySQL-视图-存储过程-触发器","lang":"zh-CN","frontmatter":{"title":"四、MySQL-视图-存储过程-触发器","date":"2023-04-02T10:38:46.000Z","order":4,"category":["数据库","视图","存储过程","触发器","MySQL"],"tag":["数据库","视图","存储过程","触发器","MySQL"],"author":{"name":"liu yang fang","link":"https://github.com/lyf110"},"description":"4. 视图/存储过程/触发器 4.1 视图 4.1.1 介绍 视图（View）是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的。 通俗的讲，视图只保存了查询的SQL逻辑，不保存查询结果。所以我们在创建视图的时候，主要的工作 就落在创建这条SQL查询语句上。 4.1.2 语法 提前准备SQL drop table if exists student; create table student( id int auto_increment comment '主键ID' primary key, name varchar(10) null comment '姓名', no varchar(10) null comment '学号' )comment '学生表'; INSERT INTO student (name, no) VALUES ('黛绮丝', '2000100101'); INSERT INTO student (name, no) VALUES ('谢逊', '2000100102'); INSERT INTO student (name, no) VALUES ('殷天正', '2000100103'); INSERT INTO student (name, no) VALUES ('韦一笑', '2000100104'); drop table if exists course; create table course( id int auto_increment comment '主键ID' primary key, name varchar(10) null comment '课程名称' )comment '课程表'; INSERT INTO course (name) VALUES ('Java'); INSERT INTO course (name) VALUES ('PHP'); INSERT INTO course (name) VALUES ('MySQL'); INSERT INTO course (name) VALUES ('Hadoop'); drop table if exists student_course; create table student_course( id int auto_increment comment '主键' primary key, studentid int not null comment '学生ID', courseid int not null comment '课程ID', constraint fk_courseid foreign key (courseid) references course (id), constraint fk_studentid foreign key (studentid) references student (id) )comment '学生课程中间表'; INSERT INTO student_course (studentid, courseid) VALUES (1, 1); INSERT INTO student_course (studentid, courseid) VALUES (1, 2); INSERT INTO student_course (studentid, courseid) VALUES (1, 3); INSERT INTO student_course (studentid, courseid) VALUES (2, 2); INSERT INTO student_course (studentid, courseid) VALUES (2, 3); INSERT INTO student_course (studentid, courseid) VALUES (3, 4);","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/database/mysql/heima2022/plus/04%20%E8%A7%86%E5%9B%BE%E3%80%81%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E3%80%81%E8%A7%A6%E5%8F%91%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"四、MySQL-视图-存储过程-触发器"}],["meta",{"property":"og:description","content":"4. 视图/存储过程/触发器 4.1 视图 4.1.1 介绍 视图（View）是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的。 通俗的讲，视图只保存了查询的SQL逻辑，不保存查询结果。所以我们在创建视图的时候，主要的工作 就落在创建这条SQL查询语句上。 4.1.2 语法 提前准备SQL drop table if exists student; create table student( id int auto_increment comment '主键ID' primary key, name varchar(10) null comment '姓名', no varchar(10) null comment '学号' )comment '学生表'; INSERT INTO student (name, no) VALUES ('黛绮丝', '2000100101'); INSERT INTO student (name, no) VALUES ('谢逊', '2000100102'); INSERT INTO student (name, no) VALUES ('殷天正', '2000100103'); INSERT INTO student (name, no) VALUES ('韦一笑', '2000100104'); drop table if exists course; create table course( id int auto_increment comment '主键ID' primary key, name varchar(10) null comment '课程名称' )comment '课程表'; INSERT INTO course (name) VALUES ('Java'); INSERT INTO course (name) VALUES ('PHP'); INSERT INTO course (name) VALUES ('MySQL'); INSERT INTO course (name) VALUES ('Hadoop'); drop table if exists student_course; create table student_course( id int auto_increment comment '主键' primary key, studentid int not null comment '学生ID', courseid int not null comment '课程ID', constraint fk_courseid foreign key (courseid) references course (id), constraint fk_studentid foreign key (studentid) references student (id) )comment '学生课程中间表'; INSERT INTO student_course (studentid, courseid) VALUES (1, 1); INSERT INTO student_course (studentid, courseid) VALUES (1, 2); INSERT INTO student_course (studentid, courseid) VALUES (1, 3); INSERT INTO student_course (studentid, courseid) VALUES (2, 2); INSERT INTO student_course (studentid, courseid) VALUES (2, 3); INSERT INTO student_course (studentid, courseid) VALUES (3, 4);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"四、MySQL-视图-存储过程-触发器"}],["meta",{"property":"article:author","content":"liu yang fang"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"视图"}],["meta",{"property":"article:tag","content":"存储过程"}],["meta",{"property":"article:tag","content":"触发器"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-04-02T10:38:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"四、MySQL-视图-存储过程-触发器\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-02T10:38:46.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liu yang fang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"4.1 视图","slug":"_4-1-视图","link":"#_4-1-视图","children":[{"level":3,"title":"4.1.1 介绍","slug":"_4-1-1-介绍","link":"#_4-1-1-介绍","children":[]},{"level":3,"title":"4.1.2 语法","slug":"_4-1-2-语法","link":"#_4-1-2-语法","children":[]},{"level":3,"title":"4.1.3 检查选项","slug":"_4-1-3-检查选项","link":"#_4-1-3-检查选项","children":[]},{"level":3,"title":"4.1.4 视图的更新","slug":"_4-1-4-视图的更新","link":"#_4-1-4-视图的更新","children":[]},{"level":3,"title":"4.1.5 视图作用","slug":"_4-1-5-视图作用","link":"#_4-1-5-视图作用","children":[]},{"level":3,"title":"4.1.6 案例","slug":"_4-1-6-案例","link":"#_4-1-6-案例","children":[]}]},{"level":2,"title":"4.2 存储过程","slug":"_4-2-存储过程","link":"#_4-2-存储过程","children":[{"level":3,"title":"4.2.1 介绍","slug":"_4-2-1-介绍","link":"#_4-2-1-介绍","children":[]},{"level":3,"title":"4.2.2 基本语法","slug":"_4-2-2-基本语法","link":"#_4-2-2-基本语法","children":[]},{"level":3,"title":"4.2.3 变量","slug":"_4-2-3-变量","link":"#_4-2-3-变量","children":[]},{"level":3,"title":"4.2.4 if","slug":"_4-2-4-if","link":"#_4-2-4-if","children":[]},{"level":3,"title":"4.2.5 参数","slug":"_4-2-5-参数","link":"#_4-2-5-参数","children":[]},{"level":3,"title":"4.2.6 case","slug":"_4-2-6-case","link":"#_4-2-6-case","children":[]},{"level":3,"title":"4.2.7 while","slug":"_4-2-7-while","link":"#_4-2-7-while","children":[]},{"level":3,"title":"4.2.8 repeat","slug":"_4-2-8-repeat","link":"#_4-2-8-repeat","children":[]},{"level":3,"title":"4.2.9 loop","slug":"_4-2-9-loop","link":"#_4-2-9-loop","children":[]},{"level":3,"title":"4.2.10 游标","slug":"_4-2-10-游标","link":"#_4-2-10-游标","children":[]},{"level":3,"title":"4.2.11 条件处理程序","slug":"_4-2-11-条件处理程序","link":"#_4-2-11-条件处理程序","children":[]}]},{"level":2,"title":"4.3 存储函数","slug":"_4-3-存储函数","link":"#_4-3-存储函数","children":[]},{"level":2,"title":"4.4 触发器","slug":"_4-4-触发器","link":"#_4-4-触发器","children":[{"level":3,"title":"4.4.1 介绍","slug":"_4-4-1-介绍","link":"#_4-4-1-介绍","children":[]},{"level":3,"title":"4.4.2 语法","slug":"_4-4-2-语法","link":"#_4-4-2-语法","children":[]},{"level":3,"title":"4.4.3 案例","slug":"_4-4-3-案例","link":"#_4-4-3-案例","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":22.21,"words":6663},"filePathRelative":"database/mysql/heima2022/plus/04 视图、存储过程、触发器.md","localizedDate":"2023年4月2日","excerpt":"<h1> 4. 视图/存储过程/触发器</h1>\\n<h2> 4.1 视图</h2>\\n<h3> 4.1.1 介绍</h3>\\n<p>视图（View）是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的。</p>\\n<p>通俗的讲，视图只保存了查询的SQL逻辑，不保存查询结果。所以我们在创建视图的时候，主要的工作 就落在创建这条SQL查询语句上。</p>\\n<h3> 4.1.2 语法</h3>\\n<p>提前准备SQL</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">drop</span> <span class=\\"token keyword\\">table</span> <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">exists</span> student<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">create</span> <span class=\\"token keyword\\">table</span> student<span class=\\"token punctuation\\">(</span>\\n    id   <span class=\\"token keyword\\">int</span> <span class=\\"token keyword\\">auto_increment</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'主键ID'</span> <span class=\\"token keyword\\">primary</span> <span class=\\"token keyword\\">key</span><span class=\\"token punctuation\\">,</span>\\n    name <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'姓名'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token keyword\\">no</span>   <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'学号'</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'学生表'</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">no</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'黛绮丝'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'2000100101'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">no</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'谢逊'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'2000100102'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">no</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'殷天正'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'2000100103'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">no</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'韦一笑'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'2000100104'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">drop</span> <span class=\\"token keyword\\">table</span> <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">exists</span> course<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">create</span> <span class=\\"token keyword\\">table</span> course<span class=\\"token punctuation\\">(</span>\\n    id <span class=\\"token keyword\\">int</span> <span class=\\"token keyword\\">auto_increment</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'主键ID'</span> <span class=\\"token keyword\\">primary</span> <span class=\\"token keyword\\">key</span><span class=\\"token punctuation\\">,</span>\\n    name <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'课程名称'</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'课程表'</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> course <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Java'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> course <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'PHP'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> course <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'MySQL'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> course <span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Hadoop'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">drop</span> <span class=\\"token keyword\\">table</span> <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">exists</span> student_course<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">create</span> <span class=\\"token keyword\\">table</span> student_course<span class=\\"token punctuation\\">(</span>\\n    id <span class=\\"token keyword\\">int</span> <span class=\\"token keyword\\">auto_increment</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'主键'</span> <span class=\\"token keyword\\">primary</span> <span class=\\"token keyword\\">key</span><span class=\\"token punctuation\\">,</span>\\n    studentid <span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'学生ID'</span><span class=\\"token punctuation\\">,</span>\\n    courseid  <span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'课程ID'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token keyword\\">constraint</span> fk_courseid <span class=\\"token keyword\\">foreign</span> <span class=\\"token keyword\\">key</span> <span class=\\"token punctuation\\">(</span>courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">references</span> course <span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token keyword\\">constraint</span> fk_studentid <span class=\\"token keyword\\">foreign</span> <span class=\\"token keyword\\">key</span> <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">references</span> student <span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">comment</span> <span class=\\"token string\\">'学生课程中间表'</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student_course <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">,</span> courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student_course <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">,</span> courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student_course <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">,</span> courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student_course <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">,</span> courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student_course <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">,</span> courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> student_course <span class=\\"token punctuation\\">(</span>studentid<span class=\\"token punctuation\\">,</span> courseid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}`);export{n as data};
