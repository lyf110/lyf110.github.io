import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as p}from"./app-5f6064b2.js";const t="/assets/1689429895301-56-b38fb762.png",e="/assets/1689429895257-1-33bb666e.png",o="/assets/1689429895258-2-1d8f1591.png",c="/assets/1689429895258-3-882cf2e7.png",l="/assets/image-20230715220547058-fae061c5.png",i="/assets/1689429895258-4-6192b9e0.png",u="/assets/1689429895259-5-097585ab.png",k="/assets/1689429895259-6-d43cfd95.png",r="/assets/image-20230715220709730-eb480dc4.png",d="/assets/1689429895259-7-c7ada22e.png",m="/assets/1689429895259-8-b104a42d.png",g="/assets/1689429895260-9-73d771d7.png",v="/assets/1689429895260-10-fc877573.png",b="/assets/1689429895260-11-d2e84387.png",y="/assets/1689429895260-12-1e0f6b1b.png",f="/assets/1689429895260-13-bae06e63.png",h="/assets/1689429895261-14-45f2fac5.png",w="/assets/1689429895261-15-6f88b8f0.png",_="/assets/1689429895261-16-cdd53267.png",T="/assets/1689429895261-17-10ef9a8b.png",x="/assets/1689429895261-18-699810df.png",E="/assets/1689429895262-19-ecf54203.png",C="/assets/1689429895262-20-700fc022.png",L="/assets/1689429895262-21-b4af72bd.png",I="/assets/1689429895262-22-5628ec71.png",N="/assets/1689429895262-23-c10abcf9.png",S="/assets/1689429895262-24-39d57912.png",O="/assets/1689429895263-25-18446fb5.png",M="/assets/1689429895263-26-7dd7c45e.png",j="/assets/1689429895259-7-c7ada22e.png",U="/assets/image-20230715220815909-e0f5588c.png",A="/assets/1689429895263-28-849f94d7.png",q="/assets/1689429895263-29-08f924d8.png",B="/assets/1689429895264-30-fc6d4e22.png",R="/assets/1689429895264-31-61097fb2.png",F="/assets/image-20230715220933196-8f64f191.png",P="/assets/1689429895264-32-4229b542.png",D="/assets/1689429895264-33-402be8fc.png",z="/assets/1689429895264-34-17177843.png",K="/assets/1689429895264-35-83e512c6.png",H="/assets/1689429895265-36-e6a0d25b.png",V="/assets/1689429895265-37-7047c107.png",G="/assets/1689429895265-38-293fea6f.png",Y="/assets/image-20230715221005696-3f74e92d.png",Q="/assets/1689429895265-39-ffce63c0.png",X="/assets/1689429895265-40-62e558f9.png",W="/assets/1689429895265-41-e50f30f7.png",J="/assets/1689429895265-42-dc4216e9.png",Z="/assets/1689429895265-43-eb86a5a6.png",$="/assets/1689429895265-44-d686c9b9.png",nn="/assets/1689429895266-45-5405e494.png",sn="/assets/1689429895266-46-7fd881e2.png",an="/assets/1689429895266-47-562e813f.png",pn="/assets/1689429895266-48-77af0499.png",tn="/assets/1689429895266-49-ed07eafe.png",en="/assets/1689429895266-50-2c4b8073.png",on="/assets/1689429895266-50-2c4b8073.png",cn="/assets/1689429895266-52-f9311a4c.png",ln="/assets/1689429895266-53-3a78d8de.png",un="/assets/image-20230715221122440-54ebfcb4.png",kn="/assets/1689429895259-5-097585ab.png",rn="/assets/1689429895260-11-d2e84387.png",dn={},mn=p('<p>同学们，之前几天我们实现的都是学习辅助功能。学习辅助的目的是提升用户的学习体验，维护好老用户。而一个网站要想长久发展，除了要服务好老用户，还必须能吸引新用户，也就是拉新。而拉新最常见的手段就是优惠促销，比如优惠券。</p><p>从今天开始，我们就一起来实现一个优惠券管理的服务。优惠券功能比较复杂，包含的业务亮点也非常多，例如：</p><ul><li>优惠券的优惠策略设计</li><li>优惠券的兑换码算法</li><li>优惠券领取的并发安全问题及解决方案</li><li>优惠券叠加方案的智能推荐</li><li>多商品、多券叠加时的优惠金额计算</li><li>多商品订单退款的拆单和退券问题</li></ul><p>等等。。</p><p>这些方案不仅仅是在咱们项目，在所有电商类型的项目中都是热点、难点问题，在接下来几天的学习中我们会逐一分析和解决。</p><h1 id="_1-需求分析" tabindex="-1"><a class="header-anchor" href="#_1-需求分析" aria-hidden="true">#</a> 1.需求分析</h1><p>需求分析的流程与以往类似，还是基于产品原型，三步走：</p><ul><li>分析业务流程</li><li>统计业务接口</li><li>设计数据库表</li></ul><h2 id="_1-1-业务流程梳理" tabindex="-1"><a class="header-anchor" href="#_1-1-业务流程梳理" aria-hidden="true">#</a> 1.1.业务流程梳理</h2><p>优惠券包括两大部分功能：</p><ul><li>优惠券管理和发放（管理端）</li><li>优惠券的领取和使用（用户端）</li></ul><p>我们今天先实现管理端的功能。在后台管理营销中心的优惠券管理页面，可以看到一个优惠券列表页：</p><figure><img src="'+t+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>我们可以在这里实现优惠券的基础的<strong>增删改查</strong>功能。</p><p>不过，新增的优惠券并不会立刻出现在用户端页面，管理员还需要对优惠券信息做**审核，**审核通过后则可以通过发放按钮来发布优惠券。</p><p>而优惠券的发布也有两种不同的方式：</p><figure><img src="'+e+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>一个是立刻发放，一个是定时发放。</p><p>顾明思议，立刻发放就是优惠券立刻生效，会直接出现在用户端页面供用户领取。定时发放则需要指定一个发放开始时间，时间到期后才会进入出现在用户端页面。</p><p>而且无论是哪种发放方式，都需要指定一个过期时间，当优惠券过期后就会进入已结束状态，用户端页面无法领取。</p><p>当然，除了过期导致的结束发放以外，管理员也可以手动点击暂停发放：</p><figure><img src="'+o+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>也可以在需要的时候重新发放优惠券。</p><p>特别需要注意的是，优惠券的领取方式有两种，来看一下优惠券的新增表单：</p><figure><img src="'+c+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>领取方式有两种：</p><ul><li><strong>手动领取</strong>：就是展示在用户端页面，由用户自己手动点击领取</li><li><strong>指定方法</strong>：就是兑换码模式，后台给优惠券生成N张兑换码，由管理员发放给指定用户。</li></ul><p>这就要求我们在发放优惠券的时候做判断，如果发现是指定发放模式，则需要提前生成兑换码。</p><p>综上，优惠券管理的业务流程和优惠券的状态转换如图：</p><figure><img src="'+l+'" alt="image-20230715220547058" tabindex="0" loading="lazy"><figcaption>image-20230715220547058</figcaption></figure><h2 id="_1-2-接口统计" tabindex="-1"><a class="header-anchor" href="#_1-2-接口统计" aria-hidden="true">#</a> 1.2.接口统计</h2><p>首先，在优惠券的列表页：</p><figure><img src="'+i+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>页面规范如下：</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>1、搜索条件</p><ul><li>优惠类型：天机学堂支持的类型有 1：满减，2：每满减，3：折扣，4：无门槛</li><li>优惠券状态：包括 1：待发放，2：未开始 3：进行中，4：已结束，5：暂停</li></ul><p>2、列表显示</p><ul><li>默认显示10条</li><li>默认按照创建时间倒序排序</li><li>使用/领取/发放：优惠券数量统计，已使用的数量/已领取的数量/总发放数量</li><li>领用期限：就是券领取的开始和结束时间</li></ul></div><p>可见这个列表就是一个典型的带过滤条件的分页查询。其它增删改查接口都比较简单，不再赘述。</p><p>所有接口在页面都一目了然：</p><ul><li>优惠券的基本管理接口： <ul><li>分页查询优惠券列表</li><li>新增优惠券</li><li>编辑优惠券</li><li>查看优惠券（根据id查询优惠券）</li><li>删除优惠券</li></ul></li><li>优惠券的方法接口： <ul><li>发放优惠券</li><li>暂停发放优惠券</li></ul></li></ul><p>另外有几个比较隐蔽的接口。一个是方法优惠券时，如果选择的是定时方法，则需要指定发放时间，到期后才发放。这就需要一个定时任务，检索优惠券表，找到发放时间到期的券，完成发放功能。</p><p>另一个也是发放券问题，券除了有发放时间，还有过期时间，因此需要一个定时任务，检查券的过期时间，发现到期后需要更新券状态。</p><p>以上两个都是定时任务接口：</p><ul><li>定时发放优惠券</li><li>定时结束优惠券发放</li></ul><p>还有一个是跟兑换码有关。就是在发放优惠券的时候，如果发现优惠券的领取方式是指定发放，则需要生成兑换码。因此页面有一个查询兑换码功能：</p><figure><img src="'+u+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>当我们点击查看兑换码时，就会进入一个兑换码展示页面：</p><figure><img src="'+k+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>可以看出来，这是一个有过滤条件的分页查询功能。</p><p>综上，优惠券相关接口包括：</p><figure><img src="'+r+'" alt="image-20230715220709730" tabindex="0" loading="lazy"><figcaption>image-20230715220709730</figcaption></figure><h2 id="_1-3-表结构设计" tabindex="-1"><a class="header-anchor" href="#_1-3-表结构设计" aria-hidden="true">#</a> 1.3.表结构设计</h2><p>通过前面的接口分析，发现接口主要跟两个实体有关：</p><ul><li>优惠券</li><li>兑换码</li></ul><p>所以，接下来要设计的表就是以上两张表。</p><h3 id="_1-3-1-优惠券" tabindex="-1"><a class="header-anchor" href="#_1-3-1-优惠券" aria-hidden="true">#</a> 1.3.1.优惠券</h3><p>首先从优惠券的新增表单来分析，表单页面如下：</p><figure><img src="'+d+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>其中的字段包含：</p><ul><li>优惠券名称：一个普通字符串</li><li>使用范围：这里有两种选择：全部课程、指定课程分类，也就是不限定课程、限定课程，可以用布尔类型来表示。不过一旦选定了课程分类，就需要指定真正限定的分类。 <ul><li><figure><img src="'+m+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure></li><li><p>此处是允许多选的，也就是说一个优惠券可以限定多个课程分类。而一个分类也可能被不同的券作为限定范围。因此优惠券与限定的分类是多对多关系。需要一张中间表来保存关系。这个以后再说。</p></li></ul></li><li>优惠券类型：包含满减、每满减、满折扣、无门槛四种，例如： <ul><li>满100减15</li><li>每满100减10</li><li>满200打8折，不超过50</li><li>直减20</li></ul></li></ul><p>可以看出来，虽然规则不同，但都可以用以下几部分来表示：</p><ul><li>优惠的门槛：比如满100的100</li><li>优惠值：比如减15的15、打8折的8</li><li>优惠上限：比如不超过50</li></ul><p>因此，我们完全要表示完整优惠策略就需要四个字段：优惠类型、优惠门槛、优惠值、优惠上限</p><ul><li>推广方式：手动领取和指定发放</li><li>发放数量</li><li>每人限领数量</li></ul><p>OK，表单中的字段就这么多。然后再看看分页页码：</p><figure><img src="'+g+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>与新增页面重复的就不再赘述了，这里多出的一些字段有：</p><ul><li>已领取数量</li><li>已使用数量</li><li>领用期限：也就是优惠券开始发放、结束发放的时间</li><li>使用期限：用户领取券后的使用期限，有两种方式： <ul><li><figure><img src="'+v+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure></li><li><p>固定时间段：需要指定开始时间、结束时间</p></li><li><p>固体天数：指定天数，从用户领取之日起计算</p></li></ul></li><li>优惠券状态</li></ul><p>综上，优惠券表结构如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 导出  表 tj_promotion.coupon 结构</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>coupon<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券名称，可以和活动名称保持一致&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>type<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券类型，1：普通券。目前就一种，保留字段&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>discount_type<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;折扣类型，1：满减，2：每满减，3：折扣，4：无门槛&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>specific<span class="token punctuation">`</span></span> <span class="token keyword">bit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> b<span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;是否限定作用范围，false：不限定，true：限定。默认false&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>discount_value<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;折扣值，如果是满减则存满减金额，如果是折扣，则存折扣率，8折就是存80&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>threshold_amount<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;使用门槛，0：表示无门槛，其他值：最低消费金额&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>max_discount_amount<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;最高优惠金额，满减最大，0：表示没有限制，不为0，则表示该券有金额的限制&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>obtain_way<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;获取方式：1：手动领取，2：兑换码&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>issue_begin_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;开始发放时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>issue_end_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;结束发放时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>term_days<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券有效期天数，0：表示有效期是指定有效期的&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>term_begin_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券有效期开始时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>term_end_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券有效期结束时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券配置状态，1：待发放，2：未开始   3：进行中，4：已结束，5：暂停&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>total_num<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;总数量，不超过5000&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>issue_num<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;已发行数量，用于判断是否超发&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>used_num<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;已使用数量&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>user_limit<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;每个人限领的数量，默认1&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>ext_param<span class="token punctuation">`</span></span> json <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;拓展参数字段，保留字段&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>creater<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建人&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>updater<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新人&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1630563495906942979</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_0900_ai_ci <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;优惠券的规则信息&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，用来表示优惠券使用范围时，需要一个优惠券与课程分类的中间关系表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>coupon_scope<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>type<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;范围限定类型：1-分类，2-课程，等等&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>coupon_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>biz_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;优惠券作用范围的业务id，例如分类id、课程id&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_coupon<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>coupon_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">19</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_0900_ai_ci <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;优惠券作用范围信息&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-2-兑换码" tabindex="-1"><a class="header-anchor" href="#_1-3-2-兑换码" aria-hidden="true">#</a> 1.3.2.兑换码</h3><p>兑换码的作用是让用户拿着这个码来兑换一张优惠券。因此一定与两个实体有关：</p><ul><li>优惠券</li><li>用户</li></ul><p>也就是说，我们需要知道将来是<strong>谁</strong>来兑换的券，可以兑换**哪张券。**当然，兑换码的码肯定也要保持到数据库，长这样：</p><figure><img src="'+b+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>除此以外，为了避免码被重复兑换，我们还需要记录码的状态：</p><ul><li>码状态：已兑换、未兑换</li></ul><p>最后，兑换码同样是有过期时间的，这个时间应该跟优惠券的过期时间一致。</p><p>综上，兑换码的最终表结构：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>exchange_code<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换码id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>code<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换码&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换码状态， 1：待兑换，2：已兑换，3：兑换活动已结束&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换人&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>type<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换类型，1：优惠券，以后再添加其它类型&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>exchange_target_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换码目标id，例如兑换优惠券，该id则是优惠券的配置id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>expired_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;兑换码过期时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">,</span>\n  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>index_status<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">,</span>\n  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>index_config_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>exchange_target_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_0900_ai_ci <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;兑换码&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有的SQL文件都在课前资料中提供了：</p><figure><img src="'+y+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_1-4-代码生成" tabindex="-1"><a class="header-anchor" href="#_1-4-代码生成" aria-hidden="true">#</a> 1.4.代码生成</h2><p>首先，在DEV分支的基础上创建一个新的功能分支：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> feature-promotions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4-1-创建新的模块" tabindex="-1"><a class="header-anchor" href="#_1-4-1-创建新的模块" aria-hidden="true">#</a> 1.4.1.创建新的模块</h3><p>优惠券功能属于优惠促销的一部分，在项目中肯定属于独立的功能模块。我们需要创建一个新的module：</p><figure><img src="`+f+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>选择Maven工程：</p><figure><img src="'+h+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后填写项目信息：</p><figure><img src="'+w+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>点击Finish，完成模块创建：</p><figure><img src="'+_+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_1-4-2-基础配置" tabindex="-1"><a class="header-anchor" href="#_1-4-2-基础配置" aria-hidden="true">#</a> 1.4.2.基础配置</h3><p>项目创建完毕后，需要引入依赖，POM文件内容如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tjxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.tianji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tj-promotion<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--auth-sdk--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.tianji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tj-auth-resource-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--api--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.tianji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tj-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--web--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--mybatis--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--Redis--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--redisson--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.redisson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>redisson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--discovery--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--config--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--caffeine本地缓存--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.ben-manes.caffeine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>caffeine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--xxl-job--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.xuxueli<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>xxl-job-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--loadbalancer--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>\${project.artifactId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>build-info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>com.tianji.promotion.PromotionApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是配置文件:</p><figure><img src="`+T+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>首先是bootstrap.yaml：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8092</span>  <span class="token comment">#端口</span>
  <span class="token key atrule">tomcat</span><span class="token punctuation">:</span>
    <span class="token key atrule">uri-encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>   <span class="token comment">#服务编码</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> promotion<span class="token punctuation">-</span>service
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">config</span><span class="token punctuation">:</span>
        <span class="token key atrule">file-extension</span><span class="token punctuation">:</span> yaml
        <span class="token key atrule">shared-configs</span><span class="token punctuation">:</span> <span class="token comment"># 共享配置</span>
          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>spring.yaml <span class="token comment"># 共享spring配置</span>
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>redis.yaml <span class="token comment"># 共享redis配置</span>
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>mybatis.yaml <span class="token comment"># 共享mybatis配置</span>
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>logs.yaml <span class="token comment"># 共享日志配置</span>
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>feign.yaml <span class="token comment"># 共享feign配置</span>
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>xxljob.yaml <span class="token comment"># 共享mq配置</span>
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token key atrule">tj</span><span class="token punctuation">:</span>
  <span class="token key atrule">swagger</span><span class="token punctuation">:</span>
    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">enableResponseWrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">package-path</span><span class="token punctuation">:</span> com.tianji.promotion.controller
    <span class="token key atrule">title</span><span class="token punctuation">:</span> 天机课堂 <span class="token punctuation">-</span> 促销中心接口文档
    <span class="token key atrule">description</span><span class="token punctuation">:</span> 该服务包含优惠促销有关的功能
    <span class="token key atrule">contact-name</span><span class="token punctuation">:</span> 传智教育·研究院
    <span class="token key atrule">contact-url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//www.itcast.cn/
    <span class="token key atrule">contact-email</span><span class="token punctuation">:</span> zhanghuyi@itcast.cn
    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1.0
  <span class="token key atrule">jdbc</span><span class="token punctuation">:</span>
    <span class="token key atrule">database</span><span class="token punctuation">:</span> tj_promotion
  <span class="token key atrule">auth</span><span class="token punctuation">:</span>
    <span class="token key atrule">resource</span><span class="token punctuation">:</span>
      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 开启登录拦截的功能</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是bootstrap-dev.yml：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.150.101<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment"># nacos注册中心</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> f923fb34<span class="token punctuation">-</span>cb0a<span class="token punctuation">-</span>4c06<span class="token punctuation">-</span>8fca<span class="token punctuation">-</span>ad61ea61a3f0
        <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
        <span class="token key atrule">ip</span><span class="token punctuation">:</span> 192.168.150.101
<span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token key atrule">com.tianji</span><span class="token punctuation">:</span> debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是bootstrap-local.yml：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.150.101<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment"># nacos注册中心</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> f923fb34<span class="token punctuation">-</span>cb0a<span class="token punctuation">-</span>4c06<span class="token punctuation">-</span>8fca<span class="token punctuation">-</span>ad61ea61a3f0
        <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
        <span class="token key atrule">ip</span><span class="token punctuation">:</span> 192.168.150.1
<span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token key atrule">com.tianji</span><span class="token punctuation">:</span> debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动类：</p><figure><img src="`+x+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion</span><span class="token punctuation">;</span>


<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">MapperScan</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">SpringApplicationBuilder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">Environment</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">UnknownHostException</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.tianji.promotion.mapper&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PromotionApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpringApplicationBuilder</span><span class="token punctuation">(</span><span class="token class-name">PromotionApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Environment</span> env <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> protocol <span class="token operator">=</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;server.ssl.key-store&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            protocol <span class="token operator">=</span> <span class="token string">&quot;https&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;--/\\n---------------------------------------------------------------------------------------\\n\\t&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;Application &#39;{}&#39; is running! Access URLs:\\n\\t&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;Local: \\t\\t{}://localhost:{}\\n\\t&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;External: \\t{}://{}:{}\\n\\t&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;Profile(s): \\t{}&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;\\n---------------------------------------------------------------------------------------&quot;</span><span class="token punctuation">,</span>
                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;spring.application.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                protocol<span class="token punctuation">,</span>
                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;server.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                protocol<span class="token punctuation">,</span>
                <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;server.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                env<span class="token punctuation">.</span><span class="token function">getActiveProfiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置启动项，关键是设置运行环境为local：</p><figure><img src="`+E+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_1-4-3-生成代码" tabindex="-1"><a class="header-anchor" href="#_1-4-3-生成代码" aria-hidden="true">#</a> 1.4.3.生成代码</h3><p>然后利用MybatisPlus生成基础代码，这里不再赘述，最终结果：</p><figure><img src="'+C+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_1-4-4-枚举" tabindex="-1"><a class="header-anchor" href="#_1-4-4-枚举" aria-hidden="true">#</a> 1.4.4.枚举</h3><p>在优惠券实体中，有很多的类型或状态枚举：</p><ul><li>折扣类型</li><li>优惠券状态</li><li>领取方式</li></ul><p>兑换码中也有一个状态字段。</p><p>这些都需要定义为枚举，在课前资料中已经给大家准备好了 ：</p><figure><img src="'+L+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>拷贝到项目中：</p><figure><img src="'+I+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>最后，别忘了修改PO中对应的字段，首先是<code>Coupon</code>中：</p><figure><img src="'+N+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="'+S+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="'+O+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后是兑换码实体，<code>ExchangeCode</code>：</p><figure><img src="'+M+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="_2-优惠券管理" tabindex="-1"><a class="header-anchor" href="#_2-优惠券管理" aria-hidden="true">#</a> 2.优惠券管理</h1><p>优惠券的管理接口有</p><ul><li>分页查询优惠券列表</li><li>新增优惠券</li><li>编辑优惠券</li><li>查看优惠券（根据id查询优惠券）</li><li>删除优惠券</li></ul><p>大部分都是基本的CRUD，这里我们讲解其中的两个接口：</p><ul><li>新增优惠券</li><li>分页查询优惠券</li></ul><h2 id="_2-1-新增优惠券" tabindex="-1"><a class="header-anchor" href="#_2-1-新增优惠券" aria-hidden="true">#</a> 2.1.新增优惠券</h2><p>新增表单原型如图：</p><figure><img src="'+j+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_2-1-1-接口分析" tabindex="-1"><a class="header-anchor" href="#_2-1-1-接口分析" aria-hidden="true">#</a> 2.1.1.接口分析</h3><p>一个基本的新增接口，按照Restful风格设计即可，关键是请求参数。之前表分析时已经详细介绍过这个页面及其中的字段，这里不再赘述。</p><p>需要特别注意的是，如果优惠券限定了使用范围，则需要保存限定的课程分类。而这些信息不再coupon表，而是一张中间关系表：coupon_scope</p><p>综上，新增优惠券的接口设计如下：</p><figure><img src="'+U+'" alt="image-20230715220815909" tabindex="0" loading="lazy"><figcaption>image-20230715220815909</figcaption></figure><h3 id="_2-1-2-实体" tabindex="-1"><a class="header-anchor" href="#_2-1-2-实体" aria-hidden="true">#</a> 2.1.2.实体</h3><p>请求参数比较复杂，需要定义一个对应的Form表单实体。在课前资料已经提供好了：</p><figure><img src="'+A+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>将其复制到<code>com.tianji.promotion.domain.dto</code>包下：</p><figure><img src="'+q+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>需要特别注意的是，Coupon这个PO实体中有一个字段叫<code>specific</code>，这个字段与数据库关键字冲突，需要做特殊处理：</p><figure><img src="'+B+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_2-1-3-接口实现" tabindex="-1"><a class="header-anchor" href="#_2-1-3-接口实现" aria-hidden="true">#</a> 2.1.3.接口实现</h3><p>首先，在tj-promotion模块下的<code>com.tianji.promotion.controller.CouponController</code>中定义controller接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CouponFormDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ICouponService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiParam</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Valid</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/coupons&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;优惠券相关接口&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CouponController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ICouponService</span> couponService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;新增优惠券接口&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@PostMapping</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveCoupon</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Valid</span> <span class="token class-name">CouponFormDTO</span> dto<span class="token punctuation">)</span><span class="token punctuation">{</span>
        couponService<span class="token punctuation">.</span><span class="token function">saveCoupon</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，在<code>com.tianji.promotion.service.ICouponService</code>中定义service方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CouponFormDTO</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ICouponService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Coupon</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">saveCoupon</span><span class="token punctuation">(</span><span class="token class-name">CouponFormDTO</span> dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，在<code>com.tianji.promotion.service.impl.CouponServiceImpl</code>中实现service方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LambdaQueryWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">CouponMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ICouponScopeService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ICouponService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Transactional</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CouponServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CouponMapper</span><span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">ICouponService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ICouponScopeService</span> scopeService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveCoupon</span><span class="token punctuation">(</span><span class="token class-name">CouponFormDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.保存优惠券</span>
        <span class="token comment">// 1.1.转PO</span>
        <span class="token class-name">Coupon</span> coupon <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>dto<span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.2.保存</span>
        <span class="token function">save</span><span class="token punctuation">(</span>coupon<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dto<span class="token punctuation">.</span><span class="token function">getSpecific</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 没有范围限定</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Long</span> couponId <span class="token operator">=</span> coupon<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.保存限定范围</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> scopes <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>scopes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadRequestException</span><span class="token punctuation">(</span><span class="token string">&quot;限定范围不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.1.转换PO</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CouponScope</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> scopes<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>bizId <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">CouponScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBizId</span><span class="token punctuation">(</span>bizId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCouponId</span><span class="token punctuation">(</span>couponId<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.2.保存</span>
        scopeService<span class="token punctuation">.</span><span class="token function">saveBatch</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-分页查询优惠券" tabindex="-1"><a class="header-anchor" href="#_2-2-分页查询优惠券" aria-hidden="true">#</a> 2.2.分页查询优惠券</h2><p>页面原型如图：</p><figure><img src="`+R+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_2-2-1-接口分析" tabindex="-1"><a class="header-anchor" href="#_2-2-1-接口分析" aria-hidden="true">#</a> 2.2.1.接口分析</h3><p>一个典型的带过滤条件的分页查询，非常简单。按照Restful风格设计即可，我们关注的点有两个：</p><ul><li>请求参数</li><li>返回值格式</li></ul><p>请求参数包含两部分，一个是分页参数，另一个是过滤条件，包含：</p><ul><li>优惠券的折扣类型</li><li>优惠券状态</li><li>优惠券名称关键字</li></ul><p>而返回值则如列表中字段所属，需要特别注意的有两点：</p><ul><li>优惠券规则：这里是对优惠规则的描述，而数据库中保存的是具体的优惠金额；这里我们不组装描述返回，仅仅返回优惠金额信息，由前端自己组织返回即可。</li><li>使用范围：这里无需展示真正的限定范围，只要告诉前端有没有限定范围即可</li></ul><p>其它字段没什么特殊的，此处不再赘述了。</p><p>综上，新增优惠券的接口设计如下：</p><figure><img src="'+F+'" alt="image-20230715220933196" tabindex="0" loading="lazy"><figcaption>image-20230715220933196</figcaption></figure><h3 id="_2-1-2-实体-1" tabindex="-1"><a class="header-anchor" href="#_2-1-2-实体-1" aria-hidden="true">#</a> 2.1.2.实体</h3><p>这里需要两个实体，一个是请求参数QUERY是，一个是返回值VO实体。在课前资料都已经提供给大家了。</p><p>QUERY实体：</p><figure><img src="'+P+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>VO实体：</p><figure><img src="'+D+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>将其复制到<code>com.tianji.promotion.domain</code>包下的query和vo包下：</p><figure><img src="'+z+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_2-1-3-接口实现-1" tabindex="-1"><a class="header-anchor" href="#_2-1-3-接口实现-1" aria-hidden="true">#</a> 2.1.3.接口实现</h3><p>首先，在tj-promotion模块下的<code>com.tianji.promotion.controller.CouponController</code>中定义controller接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;分页查询优惠券接口&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/page&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">PageDTO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CouponPageVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCouponByPage</span><span class="token punctuation">(</span><span class="token class-name">CouponQuery</span> query<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> couponService<span class="token punctuation">.</span><span class="token function">queryCouponByPage</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，在<code>com.tianji.promotion.service.ICouponService</code>中定义service方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">PageDTO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CouponPageVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCouponByPage</span><span class="token punctuation">(</span><span class="token class-name">CouponQuery</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，在<code>com.tianji.promotion.service.impl.CouponServiceImpl</code>中实现service方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">PageDTO</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CouponPageVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCouponByPage</span><span class="token punctuation">(</span><span class="token class-name">CouponQuery</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Integer</span> status <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> type <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1.分页查询</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Coupon</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token operator">::</span><span class="token function">getDiscountType</span><span class="token punctuation">,</span> type<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>status <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">toMpPageDefaultSortByCreateTimeDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2.处理VO</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Coupon</span><span class="token punctuation">&gt;</span></span> records <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>records<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">PageDTO</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CouponPageVO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyList</span><span class="token punctuation">(</span>records<span class="token punctuation">,</span> <span class="token class-name">CouponPageVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3.返回</span>
    <span class="token keyword">return</span> <span class="token class-name">PageDTO</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-优惠券发放" tabindex="-1"><a class="header-anchor" href="#_3-优惠券发放" aria-hidden="true">#</a> 3.优惠券发放</h1><p>优惠券新增之后并不会直接展示在用户端，而是处于一个待发放状态，等待管理员核对信息后，点击方法才行。而发放的方式也分为立刻发放、定时发放两种。</p><p>对于定时发放的优惠券，还需要通过定时任务来定期完成发放功能。</p><p>另外，由于优惠券的领取方式不同，基于兑换码的优惠券还需要在发放时生成兑换码。</p><h2 id="_3-1-发放优惠券" tabindex="-1"><a class="header-anchor" href="#_3-1-发放优惠券" aria-hidden="true">#</a> 3.1.发放优惠券</h2><p>处于<strong>暂停</strong>状态，或者<strong>待发放</strong>状态的优惠券，在优惠券列表中才会出现发放按钮，可以被发放：</p><figure><img src="`+K+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_3-1-1-接口分析" tabindex="-1"><a class="header-anchor" href="#_3-1-1-接口分析" aria-hidden="true">#</a> 3.1.1.接口分析</h3><p>当我们点击发放按钮时，会弹出一个表单：</p><figure><img src="'+H+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>需要我们选择<strong>发放方式</strong>，<strong>使用期限</strong>。</p><p>发放方式分为两种：<strong>立刻发放</strong>和<strong>定时发放</strong>；使用期限也分两种：<strong>固定天数</strong>、<strong>固定时间段</strong>。如图：</p><p><img src="'+V+'" alt="img" loading="lazy"><img src="'+G+'" alt="img" loading="lazy"></p><p>因此，在提交这个表单时，参数包括：</p><ul><li>发放（领用）开始时间：如果为空说明是立刻方法，开始时间就是当前时间</li><li>发放（领域）结束时间</li><li>有效期天数：如果为空说明是固定有效期</li><li>使用期限开始时间：如果为空说明是固定天数有效期</li><li>使用期限结束时间：如果为空说明是固定天数有效期</li></ul><p>最后，肯定要带上<strong>优惠券id</strong>，我们才知道发放的是哪张券，当然这个可以通过路径占位符传参。</p><p>综上，新增优惠券的接口设计如下：</p><figure><img src="'+Y+'" alt="image-20230715221005696" tabindex="0" loading="lazy"><figcaption>image-20230715221005696</figcaption></figure><h3 id="_3-1-2-实体" tabindex="-1"><a class="header-anchor" href="#_3-1-2-实体" aria-hidden="true">#</a> 3.1.2.实体</h3><p>这里需要一个请求参数的DTO实体，在课前资料中已经提供了：</p><figure><img src="'+Q+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>将其复制到<code>com.tianji.promotion.domain.dto</code>包即可。</p><h3 id="_3-1-3-接口实现" tabindex="-1"><a class="header-anchor" href="#_3-1-3-接口实现" aria-hidden="true">#</a> 3.1.3.接口实现</h3><p>首先，在tj-promotion模块下的<code>com.tianji.promotion.controller.CouponController</code>中定义controller接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;发放优惠券接口&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{id}/issue&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beginIssue</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Valid</span> <span class="token class-name">CouponIssueFormDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    couponService<span class="token punctuation">.</span><span class="token function">beginIssue</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，在<code>com.tianji.promotion.service.ICouponService</code>中定义service方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">beginIssue</span><span class="token punctuation">(</span><span class="token class-name">CouponIssueFormDTO</span> dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，在<code>com.tianji.promotion.service.impl.CouponServiceImpl</code>中实现service方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Transactional</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beginIssue</span><span class="token punctuation">(</span><span class="token class-name">CouponIssueFormDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.查询优惠券</span>
    <span class="token class-name">Coupon</span> coupon <span class="token operator">=</span> <span class="token function">getById</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>coupon <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadRequestException</span><span class="token punctuation">(</span><span class="token string">&quot;优惠券不存在！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2.判断优惠券状态，是否是暂停或待发放</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">CouponStatus</span><span class="token punctuation">.</span><span class="token constant">DRAFT</span> <span class="token operator">&amp;&amp;</span> coupon<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">PAUSE</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BizIllegalException</span><span class="token punctuation">(</span><span class="token string">&quot;优惠券状态错误！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 3.判断是否是立刻发放</span>
    <span class="token class-name">LocalDateTime</span> issueBeginTime <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getIssueBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isBegin <span class="token operator">=</span> issueBeginTime <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>issueBeginTime<span class="token punctuation">.</span><span class="token function">isAfter</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 4.更新优惠券</span>
    <span class="token comment">// 4.1.拷贝属性到PO</span>
    <span class="token class-name">Coupon</span> c <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>dto<span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 4.2.更新状态</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isBegin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token constant">ISSUING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">setIssueBeginTime</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token constant">UN_ISSUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 4.3.写入数据库</span>
    <span class="token function">updateById</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// TODO 兑换码生成</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-2-兑换码生成算法" tabindex="-1"><a class="header-anchor" href="#_3-2-兑换码生成算法" aria-hidden="true">#</a> 3.2.兑换码生成算法</h2><p>优惠券的领取有两种方式：手动领取和指定发放：</p><figure><img src="`+X+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>指定发放模式是指使用兑换码来兑换优惠券。因此必须在优惠券发放的同时，生成兑换码。兑换码的格式如图：</p><figure><img src="'+W+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>但是兑换码该如何生成呢？</p><p>是不是一个简单的字符串就行？</p><p>这就本节要讨论的内容了。</p><h3 id="_3-2-1-兑换码的需求" tabindex="-1"><a class="header-anchor" href="#_3-2-1-兑换码的需求" aria-hidden="true">#</a> 3.2.1.兑换码的需求</h3><p>兑换码并不是简单的一个字符串，它其实有很多的需求：</p><figure><img src="'+J+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>要求如下：</p><ul><li><strong>可读性好</strong>：兑换码是要给用户使用的，用户需要输入兑换码，因此可读性必须好。我们的要求： <ul><li>长度不超过10个字符</li><li>只能是24个大写字母和8个数字：ABCDEFGHJKLMNPQRSTUVWXYZ23456789</li></ul></li><li><strong>数据量大</strong>：优惠活动比较频繁，必须有充足的兑换码，最好有10亿以上的量</li><li><strong>唯一性</strong>：10亿兑换码都必须唯一，不能重复，否则会出现兑换混乱的情况</li><li><strong>不可重兑</strong>：兑换码必须便于校验兑换状态，避免重复兑换</li><li><strong>防止爆刷</strong>：兑换码的规律性不能很明显，不能轻易被人猜测到其它兑换码</li><li><strong>高效</strong>：兑换码生成、验证的算法必须保证效率，避免对数据库带来较大的压力</li></ul><h3 id="_3-2-2-算法分析" tabindex="-1"><a class="header-anchor" href="#_3-2-2-算法分析" aria-hidden="true">#</a> 3.2.2.算法分析</h3><p>要满足唯一性，很多同学会想到以下技术：</p><ul><li>UUID</li><li>Snowflake</li><li>自增id</li></ul><p>我们的兑换码要求是24个大写字母和8个数字。而以上算法最终生成的结果都是数值类型，并不符合我们的需求！</p><p>有没有什么办法，可以把数字转为我们要求的格式呢？</p><h4 id="_3-2-2-1-base32转码" tabindex="-1"><a class="header-anchor" href="#_3-2-2-1-base32转码" aria-hidden="true">#</a> 3.2.2.1.Base32转码</h4><p>当然可以了，大家思考一下，假如我们将24个字母和8个数字放到数组中，如下：</p><table><thead><tr><th><strong>角标</strong></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr><td><strong>字符</strong></td><td>A</td><td>B</td><td>C</td><td>D</td><td>E</td><td>F</td><td>G</td><td>H</td><td>J</td><td>K</td><td>L</td><td>M</td><td>N</td><td>P</td><td>Q</td><td>R</td></tr><tr><td><strong>角标</strong></td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td></tr><tr><td><strong>字符</strong></td><td>S</td><td>T</td><td>U</td><td>V</td><td>W</td><td>X</td><td>Y</td><td>Z</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr></tbody></table><p>这样，0<sub>31的角标刚好对应了我们的32个字符！而2的5次幂刚好就是32，因此5个二级制位的结果就是0</sub>31</p><p>那因此，只要我们让数字转为二进制的形式，然后每5个二进制位为一组，转10进制的结果是不是刚好对应一个角标，就能找到一个对应的字符呢？</p><p>这样是不是就把一个数字转为我们想要的字符个数了。这种把二进制数经过加密得到字符的算法就是Base32法，类似的还有Base64法。</p><p>举例：假如我们经过自增id计算出一个复杂数字，转为二进制，并每5位一组，结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>01001 00010 01100 <span class="token number">10010</span> 01101 <span class="token number">11000</span> 01101 00010 <span class="token number">11110</span> <span class="token number">11010</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，我们看看每一组的结果：</p><ul><li>01001转10进制是9，查数组得字符为：<strong>K</strong></li><li>00010转10进制是2，查数组得字符为：<strong>C</strong></li><li>01100转10进制是12，查数组得字符为：<strong>N</strong></li><li>10010转10进制是18，查数组得字符为：<strong>B</strong></li><li>01101转10进制是13，查数组得字符为：<strong>P</strong></li><li>11000转10进制是24，查数组得字符为：<strong>2</strong></li><li>...</li></ul><p>依此类推，最终那一串二进制数得到的结果就是KCNBP2PC84，刚好符合我们的需求。</p><p>但是大家思考一下，我们最终要求字符不能超过10位，而每个字符对应5个bit位，因此二进制数不能超过50个bit位。</p><p>UUID和Snowflake算法得到的结果，一个是128位，一个是64位，都远远超出了我们的要求。</p><p>那自增id算法符合我们的需求呢？</p><p>自增id从1增加到Integer的最大值，可以达到40亿以上个数字，而占用的字节仅仅4个字节，也就是32个bit位，距离50个bit位的限制还有很大的剩余，符合要求！</p><p>综上，我们可以利用自增id作为兑换码，但是要利用Base32加密，转为我们要求的格式。此时就符合了我们的几个要求了：</p><ul><li><strong>可读性好</strong>：可以转为要求的字母和数字的格式，长度还不超过10个字符</li><li><strong>数据量大</strong>：可以应对40亿以上的数据规模</li><li><strong>唯一性</strong>：自增id，绝对唯一</li></ul><h4 id="_3-2-2-2-重兑校验算法" tabindex="-1"><a class="header-anchor" href="#_3-2-2-2-重兑校验算法" aria-hidden="true">#</a> 3.2.2.2.重兑校验算法</h4><p>那重兑问题该如何判断呢？此处有两种方案：</p><ul><li>基于数据库：我们在设计数据库时有一个字段就是标示兑换码状态，每次兑换时可以到数据库查询状态，避免重兑。 <ul><li>优点：简单</li><li>缺点：对数据库压力大</li></ul></li><li>基于BitMap：兑换或没兑换就是两个状态，对应0和1，而兑换码使用的是自增id.我们如果每一个自增id对应一个bit位，用每一个bit位的状态表示兑换状态，是不是完美解决问题。而这种算法恰好就是BitMap的底层实现，而且Redis中的BitMap刚好能支持2^32个bit位。 <ul><li>优点：简答、高效、性能好</li><li>缺点：依赖于Redis</li></ul></li></ul><p>OK，<strong>重兑、高效</strong>的两个特性都满足了！</p><p>现在，就剩下防止爆刷了。我们的兑换码规律性不能太明显，否则很容易被人猜测到其它兑换码。但是，如果我们使用了自增id，那规律简直太明显了，岂不是很容易被人踩到其它兑换码？！</p><p>所以，我们采用自增id的同时，还需要利用某种校验算法对id做加密验证，避免他人找出规律，猜测到其它兑换码，甚至伪造、篡改兑换码。</p><p>那该采用哪种校验算法呢？</p><h4 id="_3-2-2-3-防刷校验算法" tabindex="-1"><a class="header-anchor" href="#_3-2-2-3-防刷校验算法" aria-hidden="true">#</a> 3.2.2.3.防刷校验算法</h4><p>非常可惜，没有一种现成的算法能满足我们的需求，我们必须自己<strong>设计一种算法</strong>来实现这个功能。</p><p>不过大家不用害怕，我们可以模拟其它验签的常用算法。比如大家熟悉的JWT技术。我们知道JWT分为三部分组成：</p><ul><li>Header：记录算法</li><li>Payload：记录用户信息</li><li>Verify Signature：验签，用于验证整个token</li></ul><p>JWT中的的Header和Payload采用的是Base64算法，与我们Base32类似，几乎算是明文传输，难道不怕其他人伪造、篡改token吗？</p><p>为了解决这个问题，JWT中才有了第三部分，<strong>验证签名</strong>。这个签名是有一个秘钥，结合Header、Payload，利用MD5或者RSA算法生成的。因此：</p><ul><li>只要秘钥不泄露，其他人就无法伪造签名，也就无法伪造token。</li><li>有人篡改了token，验签时会根据header和payload再次计算签名。数据被篡改，计算的到的签名肯定不一致，就是无效token</li></ul><p>因此，我们也可以模拟这种思路：</p><ul><li>首先准备一个秘钥</li><li>然后利用秘钥对自增id做加密，生成签名</li><li>将签名、自增id利用Base32转码后生成兑换码</li></ul><p>只要秘钥不泄露，就没有人能伪造兑换码。只要兑换码被篡改，就会导致验签不通过。</p><p>当然，这里我们不能采用MD5和RSA算法来生成签名，因为这些算法得到的签名都太长了，一般都是128位以上，超出了长度限制。</p><p>因此，这里我们必须采用一种特殊的签名算法。由于我们的兑换码核心是自增id，也就是数字，因此这里我们打算采用按位加权的签名算法：</p><ul><li>将自增id（32位）每4位分为一组，共8组，都转为10进制</li><li>每一组给不同权重</li><li>把每一组数加权求和，得到的结果就是签名</li></ul><p>举例：</p><figure><img src="`+Z+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>最终的加权和就是：4<em>2 + 2</em>5 + 9<em>1 + 10</em>3 + 8<em>4 + 2</em>7 + 1<em>8 + 6</em>9 = 165</p><p>这里的权重数组就可以理解为加密的<strong>秘钥</strong>。</p><p>当然，为了避免秘钥被人猜测出规律，我们可以准备16组秘钥。在兑换码自增id前拼接一个4位的<strong>新鲜值</strong>，可以是随机的。这个值是多少，就取第几组秘钥。</p><figure><img src="'+$+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>这样就进一步增加了兑换码的复杂度。</p><p>最后，把加权和，也就是签名也转二进制，拼接到最前面，最终的兑换码就是这样：</p><figure><img src="'+nn+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_3-2-3-算法实现" tabindex="-1"><a class="header-anchor" href="#_3-2-3-算法实现" aria-hidden="true">#</a> 3.2.3.算法实现</h3><p>最终的算法实现在课前资料中已经提供了：</p><figure><img src="'+sn+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>其中：</p><ul><li>Base32.java：是Base32工具类</li><li>CodeUtil.java：是签名工具</li></ul><p>我们重点关注CodeUtil的实现，代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>constants<span class="token punctuation">.</span></span><span class="token class-name">RegexConstants</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span><span class="token class-name">BadRequestException</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">font-weight</span><span class="token punctuation">:</span>500</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>1.兑换码算法说明：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>兑换码分为明文和密文，明文是50位二进制数，密文是长度为10的Base32编码的字符串 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">font-weight</span><span class="token punctuation">:</span>500</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>2.兑换码的明文结构：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 0 15px</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>14(校验码) + 4 (新鲜值) + 32(序列号) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 0 15px</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>
 *       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>序列号：一个单调递增的数字，可以通过Redis来生成<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>新鲜值：可以是优惠券id的最后4位，同一张优惠券的兑换码就会有一个相同标记<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>载荷：将新鲜值（4位）拼接序列号（32位）得到载荷<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>校验码：将载荷4位一组，每组乘以加权数，最后累加求和，然后对2^14求余得到<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
 *  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">font-weight</span><span class="token punctuation">:</span>500</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>3.兑换码的加密过程：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
 *     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>a<span class="token punctuation">&#39;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 0 15px</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>首先利用优惠券id计算新鲜值 f<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>将f和序列号s拼接，得到载荷payload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>然后以f为角标，从提前准备好的16组加权码表中选一组<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>对payload做加权计算，得到校验码 c  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>利用c的后4位做角标，从提前准备好的异或密钥表中选择一个密钥：key<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>将payload与key做异或，作为新payload2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>然后拼接兑换码明文：f (4位) + payload2（36位）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>利用Base32对密文转码，生成兑换码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">font-weight</span><span class="token punctuation">:</span>500</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>4.兑换码的解密过程：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>a<span class="token punctuation">&#39;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 0 15px</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>
 *      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>首先利用Base32解码兑换码，得到明文数值num<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>取num的高14位得到c1，取num低36位得payload <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>利用c1的后4位做角标，从提前准备好的异或密钥表中选择一个密钥：key<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>将payload与key做异或，作为新payload2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 *      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>利用加密时的算法，用payload2和s1计算出新校验码c2，把c1和c2比较，一致则通过 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeUtil</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 异或密钥表，用于最后的数据混淆
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">XOR_TABLE</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token number">45139281907L</span><span class="token punctuation">,</span> <span class="token number">61261925523L</span><span class="token punctuation">,</span> <span class="token number">58169127203L</span><span class="token punctuation">,</span> <span class="token number">27031786219L</span><span class="token punctuation">,</span>
            <span class="token number">64169927199L</span><span class="token punctuation">,</span> <span class="token number">46169126943L</span><span class="token punctuation">,</span> <span class="token number">32731286209L</span><span class="token punctuation">,</span> <span class="token number">52082227349L</span><span class="token punctuation">,</span>
            <span class="token number">59169127063L</span><span class="token punctuation">,</span> <span class="token number">36169126987L</span><span class="token punctuation">,</span> <span class="token number">52082200939L</span><span class="token punctuation">,</span> <span class="token number">61261925739L</span><span class="token punctuation">,</span>
            <span class="token number">32731286563L</span><span class="token punctuation">,</span> <span class="token number">27031786427L</span><span class="token punctuation">,</span> <span class="token number">56169127077L</span><span class="token punctuation">,</span> <span class="token number">34111865001L</span><span class="token punctuation">,</span>
            <span class="token number">52082216763L</span><span class="token punctuation">,</span> <span class="token number">61261925663L</span><span class="token punctuation">,</span> <span class="token number">56169127113L</span><span class="token punctuation">,</span> <span class="token number">45139282119L</span><span class="token punctuation">,</span>
            <span class="token number">32731286479L</span><span class="token punctuation">,</span> <span class="token number">64169927233L</span><span class="token punctuation">,</span> <span class="token number">41390251661L</span><span class="token punctuation">,</span> <span class="token number">59169127121L</span><span class="token punctuation">,</span>
            <span class="token number">64169927321L</span><span class="token punctuation">,</span> <span class="token number">55139282179L</span><span class="token punctuation">,</span> <span class="token number">34111864881L</span><span class="token punctuation">,</span> <span class="token number">46169127031L</span><span class="token punctuation">,</span>
            <span class="token number">58169127221L</span><span class="token punctuation">,</span> <span class="token number">61261925523L</span><span class="token punctuation">,</span> <span class="token number">36169126943L</span><span class="token punctuation">,</span> <span class="token number">64169927363L</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * fresh值的偏移位数
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">FRESH_BIT_OFFSET</span> <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 校验码的偏移位数
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">CHECK_CODE_BIT_OFFSET</span> <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * fresh值的掩码，4位
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">FRESH_MASK</span> <span class="token operator">=</span> <span class="token number">0xF</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 验证码的掩码，14位
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">CHECK_CODE_MASK</span> <span class="token operator">=</span> <span class="token number">0b11111111111111</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 载荷的掩码，36位
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token constant">PAYLOAD_MASK</span> <span class="token operator">=</span> <span class="token number">0</span>xFFFFFFFFFL<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 序列号掩码，32位
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token constant">SERIAL_NUM_MASK</span> <span class="token operator">=</span> <span class="token number">0</span>xFFFFFFFFL<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 序列号加权运算的秘钥表
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">PRIME_TABLE</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token punctuation">{</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">607</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">977</span><span class="token punctuation">,</span> <span class="token number">1217</span><span class="token punctuation">,</span> <span class="token number">1289</span><span class="token punctuation">,</span> <span class="token number">1601</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">439</span><span class="token punctuation">,</span> <span class="token number">313</span><span class="token punctuation">,</span> <span class="token number">619</span><span class="token punctuation">,</span> <span class="token number">911</span><span class="token punctuation">,</span> <span class="token number">1049</span><span class="token punctuation">,</span> <span class="token number">1237</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">499</span><span class="token punctuation">,</span> <span class="token number">673</span><span class="token punctuation">,</span> <span class="token number">823</span><span class="token punctuation">,</span> <span class="token number">941</span><span class="token punctuation">,</span> <span class="token number">1039</span><span class="token punctuation">,</span> <span class="token number">1213</span><span class="token punctuation">,</span> <span class="token number">1429</span><span class="token punctuation">,</span> <span class="token number">1259</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">293</span><span class="token punctuation">,</span> <span class="token number">311</span><span class="token punctuation">,</span> <span class="token number">349</span><span class="token punctuation">,</span> <span class="token number">431</span><span class="token punctuation">,</span> <span class="token number">577</span><span class="token punctuation">,</span> <span class="token number">757</span><span class="token punctuation">,</span> <span class="token number">883</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">,</span> <span class="token number">1657</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">353</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">367</span><span class="token punctuation">,</span> <span class="token number">499</span><span class="token punctuation">,</span> <span class="token number">599</span><span class="token punctuation">,</span> <span class="token number">661</span><span class="token punctuation">,</span> <span class="token number">719</span><span class="token punctuation">,</span> <span class="token number">929</span><span class="token punctuation">,</span> <span class="token number">1301</span><span class="token punctuation">,</span> <span class="token number">1511</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">353</span><span class="token punctuation">,</span> <span class="token number">467</span><span class="token punctuation">,</span> <span class="token number">577</span><span class="token punctuation">,</span> <span class="token number">691</span><span class="token punctuation">,</span> <span class="token number">811</span><span class="token punctuation">,</span> <span class="token number">947</span><span class="token punctuation">,</span> <span class="token number">1153</span><span class="token punctuation">,</span> <span class="token number">1453</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">213</span><span class="token punctuation">,</span> <span class="token number">439</span><span class="token punctuation">,</span> <span class="token number">257</span><span class="token punctuation">,</span> <span class="token number">313</span><span class="token punctuation">,</span> <span class="token number">571</span><span class="token punctuation">,</span> <span class="token number">619</span><span class="token punctuation">,</span> <span class="token number">743</span><span class="token punctuation">,</span> <span class="token number">829</span><span class="token punctuation">,</span> <span class="token number">983</span><span class="token punctuation">,</span> <span class="token number">1103</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">349</span><span class="token punctuation">,</span> <span class="token number">607</span><span class="token punctuation">,</span> <span class="token number">677</span><span class="token punctuation">,</span> <span class="token number">769</span><span class="token punctuation">,</span> <span class="token number">823</span><span class="token punctuation">,</span> <span class="token number">967</span><span class="token punctuation">,</span> <span class="token number">1049</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">521</span><span class="token punctuation">,</span> <span class="token number">701</span><span class="token punctuation">,</span> <span class="token number">827</span><span class="token punctuation">,</span> <span class="token number">1123</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">479</span><span class="token punctuation">,</span> <span class="token number">647</span><span class="token punctuation">,</span> <span class="token number">739</span><span class="token punctuation">,</span> <span class="token number">811</span><span class="token punctuation">,</span> <span class="token number">947</span><span class="token punctuation">,</span> <span class="token number">1019</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">311</span><span class="token punctuation">,</span> <span class="token number">467</span><span class="token punctuation">,</span> <span class="token number">613</span><span class="token punctuation">,</span> <span class="token number">743</span><span class="token punctuation">,</span> <span class="token number">821</span><span class="token punctuation">,</span> <span class="token number">881</span><span class="token punctuation">,</span> <span class="token number">1031</span><span class="token punctuation">,</span> <span class="token number">1171</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">367</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token number">569</span><span class="token punctuation">,</span> <span class="token number">683</span><span class="token punctuation">,</span> <span class="token number">761</span><span class="token punctuation">,</span> <span class="token number">883</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">,</span> <span class="token number">1181</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">283</span><span class="token punctuation">,</span> <span class="token number">467</span><span class="token punctuation">,</span> <span class="token number">577</span><span class="token punctuation">,</span> <span class="token number">661</span><span class="token punctuation">,</span> <span class="token number">773</span><span class="token punctuation">,</span> <span class="token number">881</span><span class="token punctuation">,</span> <span class="token number">967</span><span class="token punctuation">,</span> <span class="token number">1097</span><span class="token punctuation">,</span> <span class="token number">1289</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">257</span><span class="token punctuation">,</span> <span class="token number">347</span><span class="token punctuation">,</span> <span class="token number">439</span><span class="token punctuation">,</span> <span class="token number">547</span><span class="token punctuation">,</span> <span class="token number">641</span><span class="token punctuation">,</span> <span class="token number">839</span><span class="token punctuation">,</span> <span class="token number">977</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">313</span><span class="token punctuation">,</span> <span class="token number">421</span><span class="token punctuation">,</span> <span class="token number">613</span><span class="token punctuation">,</span> <span class="token number">739</span><span class="token punctuation">,</span> <span class="token number">827</span><span class="token punctuation">,</span> <span class="token number">941</span><span class="token punctuation">,</span> <span class="token number">1087</span><span class="token punctuation">,</span> <span class="token number">1307</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">353</span><span class="token punctuation">,</span> <span class="token number">499</span><span class="token punctuation">,</span> <span class="token number">607</span><span class="token punctuation">,</span> <span class="token number">811</span><span class="token punctuation">,</span> <span class="token number">919</span><span class="token punctuation">,</span> <span class="token number">1031</span><span class="token punctuation">,</span> <span class="token number">1301</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 生成兑换码
     *
     * <span class="token keyword">@param</span> <span class="token parameter">serialNum</span> 递增序列号
     * <span class="token keyword">@return</span> 兑换码
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generateCode</span><span class="token punctuation">(</span><span class="token keyword">long</span> serialNum<span class="token punctuation">,</span> <span class="token keyword">long</span> fresh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.计算新鲜值</span>
        fresh <span class="token operator">=</span> fresh <span class="token operator">&amp;</span> <span class="token constant">FRESH_MASK</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.拼接payload，fresh（4位） + serialNum（32位）</span>
        <span class="token keyword">long</span> payload <span class="token operator">=</span> fresh <span class="token operator">&lt;&lt;</span> <span class="token constant">FRESH_BIT_OFFSET</span> <span class="token operator">|</span> serialNum<span class="token punctuation">;</span>
        <span class="token comment">// 3.计算验证码</span>
        <span class="token keyword">long</span> checkCode <span class="token operator">=</span> <span class="token function">calcCheckCode</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> fresh<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.payload做大质数异或运算，混淆数据</span>
        payload <span class="token operator">^=</span> <span class="token constant">XOR_TABLE</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>checkCode <span class="token operator">&amp;</span> <span class="token number">0b11111</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// 5.拼接兑换码明文: 校验码（14位） + payload（36位）</span>
        <span class="token keyword">long</span> code <span class="token operator">=</span> checkCode <span class="token operator">&lt;&lt;</span> <span class="token constant">CHECK_CODE_BIT_OFFSET</span> <span class="token operator">|</span> payload<span class="token punctuation">;</span>
        <span class="token comment">// 6.转码</span>
        <span class="token keyword">return</span> <span class="token class-name">Base32</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">calcCheckCode</span><span class="token punctuation">(</span><span class="token keyword">long</span> payload<span class="token punctuation">,</span> <span class="token keyword">int</span> fresh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.获取码表</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> table <span class="token operator">=</span> <span class="token constant">PRIME_TABLE</span><span class="token punctuation">[</span>fresh<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.生成校验码，payload每4位乘加权数，求和，取最后13位结果</span>
        <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>payload <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum <span class="token operator">+=</span> <span class="token punctuation">(</span>payload <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">)</span> <span class="token operator">*</span> table<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            payload <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">4</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sum <span class="token operator">&amp;</span> <span class="token constant">CHECK_CODE_MASK</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">parseCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>code<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token class-name">RegexConstants</span><span class="token punctuation">.</span><span class="token constant">COUPON_CODE_PATTERN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 兑换码格式错误</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadRequestException</span><span class="token punctuation">(</span><span class="token string">&quot;无效兑换码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.Base32解码</span>
        <span class="token keyword">long</span> num <span class="token operator">=</span> <span class="token class-name">Base32</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.获取低36位，payload</span>
        <span class="token keyword">long</span> payload <span class="token operator">=</span> num <span class="token operator">&amp;</span> <span class="token constant">PAYLOAD_MASK</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.获取高14位，校验码</span>
        <span class="token keyword">int</span> checkCode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;&gt;&gt;</span> <span class="token constant">CHECK_CODE_BIT_OFFSET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.载荷异或大质数，解析出原来的payload</span>
        payload <span class="token operator">^=</span> <span class="token constant">XOR_TABLE</span><span class="token punctuation">[</span><span class="token punctuation">(</span>checkCode <span class="token operator">&amp;</span> <span class="token number">0b11111</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// 5.获取高4位，fresh</span>
        <span class="token keyword">int</span> fresh <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>payload <span class="token operator">&gt;&gt;&gt;</span> <span class="token constant">FRESH_BIT_OFFSET</span> <span class="token operator">&amp;</span> <span class="token constant">FRESH_MASK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6.验证格式：</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">calcCheckCode</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> fresh<span class="token punctuation">)</span> <span class="token operator">!=</span> checkCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadRequestException</span><span class="token punctuation">(</span><span class="token string">&quot;无效兑换码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> payload <span class="token operator">&amp;</span> <span class="token constant">SERIAL_NUM_MASK</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>核心的两个方法：</p><ul><li><code>generateCode(long serialNum, long fresh)</code>：根据自增id生成兑换码。两个参数 <ul><li>serialNum：兑换码序列号，也就是自增id</li><li>fresh：新鲜值，这里建议使用兑换码对应的优惠券id做新鲜值</li></ul></li><li><code>parseCode(String code)</code>：验证并解析兑换码，返回的是兑换码的序列号，也就是自增id</li></ul><h2 id="_3-3-异步生成兑换码" tabindex="-1"><a class="header-anchor" href="#_3-3-异步生成兑换码" aria-hidden="true">#</a> 3.3.异步生成兑换码</h2><h3 id="_3-3-1-思路分析" tabindex="-1"><a class="header-anchor" href="#_3-3-1-思路分析" aria-hidden="true">#</a> 3.3.1.思路分析</h3><p>在发放优惠券的时候，如果发现优惠券的领取方式是兑换码方式，则需要生成兑换码。</p><p>不过，需要注意的是，<strong>优惠券发放以后是可以暂停的，暂停之后还可以再次发放</strong>。</p><p>假如一个优惠券是通过兑换码方式领取。第一次发放时我们生产了兑换码，然后被暂停，然后再次发放，如果我们再次生成兑换码，这就重复了。</p><p>因此，判断是否需要生成兑换码，要同时满足两个要求：</p><ul><li>领取方式必须是兑换码方式</li><li>之前的状态必须是待发放，不能是暂停</li></ul><p>而且，由于生成兑换码的数量较多，可能比较耗时，这里推荐基于线程池异步生成。</p><p>流程如下：</p><figure><img src="`+an+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_3-3-2-代码实现" tabindex="-1"><a class="header-anchor" href="#_3-3-2-代码实现" aria-hidden="true">#</a> 3.3.2.代码实现</h3><p>首先，我们要定义一个线程池，用于异步生成兑换码：</p><figure><img src="'+pn+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>具体代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolTaskExecutor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PromotionConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">generateExchangeCodeExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.核心线程池大小</span>
        executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.最大线程池大小</span>
        executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.队列大小</span>
        executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.线程名称</span>
        executor<span class="token punctuation">.</span><span class="token function">setThreadNamePrefix</span><span class="token punctuation">(</span><span class="token string">&quot;exchange-code-handler-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5.拒绝策略</span>
        executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executor<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> executor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时，在启动类添加<code>@EnableAsync</code>注解，开启异步功能：</p><figure><img src="`+tn+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后，我们要改造<code>com.tianji.promotion.service.impl.CouponServiceImpl</code>中的发放优惠券功能，参见黄色高亮部分：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IExchangeCodeService</span> codeService<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Transactional</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beginIssue</span><span class="token punctuation">(</span><span class="token class-name">CouponIssueFormDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.查询优惠券</span>
    <span class="token class-name">Coupon</span> coupon <span class="token operator">=</span> <span class="token function">getById</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>coupon <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BadRequestException</span><span class="token punctuation">(</span><span class="token string">&quot;优惠券不存在！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2.判断优惠券状态，是否是暂停或待发放</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">CouponStatus</span><span class="token punctuation">.</span><span class="token constant">DRAFT</span> <span class="token operator">&amp;&amp;</span> coupon<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">PAUSE</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BizIllegalException</span><span class="token punctuation">(</span><span class="token string">&quot;优惠券状态错误！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 3.判断是否是立刻发放</span>
    <span class="token class-name">LocalDateTime</span> issueBeginTime <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getIssueBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isBegin <span class="token operator">=</span> issueBeginTime <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>issueBeginTime<span class="token punctuation">.</span><span class="token function">isAfter</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 4.更新优惠券</span>
    <span class="token comment">// 4.1.拷贝属性到PO</span>
    <span class="token class-name">Coupon</span> c <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>dto<span class="token punctuation">,</span> <span class="token class-name">Coupon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 4.2.更新状态</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isBegin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token constant">ISSUING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">setIssueBeginTime</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token constant">UN_ISSUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 4.3.写入数据库</span>
    <span class="token function">updateById</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 5.判断是否需要生成兑换码，优惠券类型必须是兑换码，优惠券状态必须是待发放</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span><span class="token function">getObtainWay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ObtainType</span><span class="token punctuation">.</span><span class="token constant">ISSUE</span> <span class="token operator">&amp;&amp;</span> coupon<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">CouponStatus</span><span class="token punctuation">.</span><span class="token constant">DRAFT</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        coupon<span class="token punctuation">.</span><span class="token function">setIssueEndTime</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getIssueEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        codeService<span class="token punctuation">.</span><span class="token function">asyncGenerateCode</span><span class="token punctuation">(</span>coupon<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，在<code>com.tianji.promotion.service.IExchangeCodeService</code>中添加生成兑换码的方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">Coupon</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">ExchangeCode</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 兑换码 服务类
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IExchangeCodeService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExchangeCode</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">asyncGenerateCode</span><span class="token punctuation">(</span><span class="token class-name">Coupon</span> coupon<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，在<code>com.tianji.promotion.service.impl.ExchangeCodeServiceImpl</code>中实现该方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">CollUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">Coupon</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">ExchangeCode</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">ExchangeCodeMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IExchangeCodeService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">CodeUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">BoundValueOperations</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">StringRedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Async</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>promotion<span class="token punctuation">.</span>constants<span class="token punctuation">.</span></span><span class="token class-name">PromotionConstants</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 兑换码 服务实现类
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token keyword">@author</span> 虎哥
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExchangeCodeServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExchangeCodeMapper</span><span class="token punctuation">,</span> <span class="token class-name">ExchangeCode</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">IExchangeCodeService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">BoundValueOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> serialOps<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ExchangeCodeServiceImpl</span><span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate <span class="token operator">=</span> redisTemplate<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>serialOps <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundValueOps</span><span class="token punctuation">(</span><span class="token constant">COUPON_CODE_SERIAL_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Async</span><span class="token punctuation">(</span><span class="token string">&quot;generateExchangeCodeExecutor&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">asyncGenerateCode</span><span class="token punctuation">(</span><span class="token class-name">Coupon</span> coupon<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 发放数量</span>
        <span class="token class-name">Integer</span> totalNum <span class="token operator">=</span> coupon<span class="token punctuation">.</span><span class="token function">getTotalNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.获取Redis自增序列号</span>
        <span class="token class-name">Long</span> result <span class="token operator">=</span> serialOps<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>totalNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> maxSerialNum <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExchangeCode</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>totalNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> serialNum <span class="token operator">=</span> maxSerialNum <span class="token operator">-</span> totalNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> serialNum <span class="token operator">&lt;=</span> maxSerialNum<span class="token punctuation">;</span> serialNum<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.生成兑换码</span>
            <span class="token class-name">String</span> code <span class="token operator">=</span> <span class="token class-name">CodeUtil</span><span class="token punctuation">.</span><span class="token function">generateCode</span><span class="token punctuation">(</span>serialNum<span class="token punctuation">,</span> coupon<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ExchangeCode</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExchangeCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>serialNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">setExchangeTargetId</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">setExpiredTime</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span><span class="token function">getIssueEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.保存数据库</span>
        <span class="token function">saveBatch</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4.写入Redis缓存，member：couponId，score：兑换码的最大序列号</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token constant">COUPON_RANGE_KEY</span><span class="token punctuation">,</span> coupon<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> maxSerialNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-练习" tabindex="-1"><a class="header-anchor" href="#_4-练习" aria-hidden="true">#</a> 4.练习</h1><h2 id="_4-1-修改优惠券" tabindex="-1"><a class="header-anchor" href="#_4-1-修改优惠券" aria-hidden="true">#</a> 4.1.修改优惠券</h2><p>修改优惠券接口的请求信息如下：</p><ul><li>请求方式：PUT</li><li id="">请求路径：/coupons/</li><li>请求参数：与新增类似，参考新增接口。</li><li>返回值：无</li></ul><p>需要注意的页面规则，只有处于待发放状态的优惠券是可以修改的：</p><figure><img src="`+en+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_4-2-删除优惠券" tabindex="-1"><a class="header-anchor" href="#_4-2-删除优惠券" aria-hidden="true">#</a> 4.2.删除优惠券</h2><ul><li>请求方式：PUT</li><li id="">请求路径：/coupons/</li><li>请求参数：与新增类似，参考新增接口。</li><li>返回值：无</li></ul><p>需要注意的页面规则，只有处于待发放状态的优惠券是可以删除的：</p><figure><img src="'+on+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_4-3-根据id查询优惠券" tabindex="-1"><a class="header-anchor" href="#_4-3-根据id查询优惠券" aria-hidden="true">#</a> 4.3.根据id查询优惠券</h2><h3 id="_4-3-1-接口分析" tabindex="-1"><a class="header-anchor" href="#_4-3-1-接口分析" aria-hidden="true">#</a> 4.3.1.接口分析</h3><p>需求：在管理控制台的优惠券分页列表中，点击某个优惠券或者修改某个优惠券时，都需要根据id查询优惠券的详细信息</p><figure><img src="'+cn+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>表单回显页面可以参考新增表单。</p><p>查看优惠券详情页面如下：</p><figure><img src="'+ln+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>最终的接口信息如下：</p><figure><img src="'+un+'" alt="image-20230715221122440" tabindex="0" loading="lazy"><figcaption>image-20230715221122440</figcaption></figure><h3 id="_4-3-2-接口实现" tabindex="-1"><a class="header-anchor" href="#_4-3-2-接口实现" aria-hidden="true">#</a> 4.3.2.接口实现</h3><h2 id="_4-4-定时开始发放优惠券" tabindex="-1"><a class="header-anchor" href="#_4-4-定时开始发放优惠券" aria-hidden="true">#</a> 4.4.定时开始发放优惠券</h2><p>提示：</p><ul><li>由于发放优惠券时已经把大部分操作完成。因此这里只需要更新优惠券状态，从未开始，修改到进行中即可。</li><li>不需要把整张表扫描一遍，只要找到那些处于未开始的，并且发放时间早于当前时间的即可。</li><li>注意利用XXL-JOB的数据分片功能，不要重复处理数据</li></ul><h2 id="_4-5-定时结束发放优惠券" tabindex="-1"><a class="header-anchor" href="#_4-5-定时结束发放优惠券" aria-hidden="true">#</a> 4.5.定时结束发放优惠券</h2><h2 id="_4-6-暂停发放" tabindex="-1"><a class="header-anchor" href="#_4-6-暂停发放" aria-hidden="true">#</a> 4.6.暂停发放</h2><p>需求：管理员可以将一个发放中的优惠券状态修改为暂停， 暂停后学员无法领取或兑换该优惠券。用户端页面也不会展示。</p><ul><li><strong>请求方式</strong>：PUT</li><li><strong>请求路径</strong>：/coupons/{id}/pause</li><li><strong>请求参数</strong>：路径占位符id</li><li><strong>返回值</strong>：无</li></ul><p>注意：只要进行中的优惠券可以被暂停。暂停就是修改优惠券状态，从进行中变为暂停中</p><h2 id="_4-7-查询兑换码" tabindex="-1"><a class="header-anchor" href="#_4-7-查询兑换码" aria-hidden="true">#</a> 4.7.查询兑换码</h2><p>需求：在发放优惠券的时候，如果发现优惠券的领取方式是指定发放，则需要生成兑换码。因此页面有一个查询兑换码功能：</p><figure><img src="'+kn+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_4-7-1-接口分析" tabindex="-1"><a class="header-anchor" href="#_4-7-1-接口分析" aria-hidden="true">#</a> 4.7.1.接口分析</h3><p>当我们点击查看兑换码时，就会进入一个兑换码展示页面：</p><figure><img src="'+rn+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>是一个带过滤条件的分页查询。</p><ul><li><strong>请求方式</strong>：GET</li><li><strong>请求路径</strong>：/codes/page</li><li><strong>请求参数</strong>： <ul><li>分页参数</li><li>兑换码状态</li><li>有一个隐含条件，就是优惠券id，毕竟查询的是某一个优惠券的兑换码。</li></ul></li><li><strong>返回值</strong>：传统分页结果，分页数据保护两个字段： <ul><li>code：兑换码</li><li>id：兑换码id</li></ul></li></ul><h3 id="_4-7-2-接口实现" tabindex="-1"><a class="header-anchor" href="#_4-7-2-接口实现" aria-hidden="true">#</a> 4.7.2.接口实现</h3><h1 id="_5-面试" tabindex="-1"><a class="header-anchor" href="#_5-面试" aria-hidden="true">#</a> 5.面试</h1><p><strong>面试官：你们优惠券支持兑换码的方式是吧，哪兑换码是如何生成的呢？（请设计一个优惠券兑换码生成方案，可以支持20亿以上的唯一兑换码，兑换码长度不超过10，只能包含字母数字，并且要保证生成和校验算法的高效）</strong></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>答：</p><p>首先要考虑兑换码的验证的高效性，最佳的方案肯定是用自增序列号。因为自增序列号可以借助于BitMap验证兑换状态，完全不用查询数据库，效率非常高。</p><p>要满足20亿的兑换码需求，只需要31个bit位就够了，也就是在Integer的取值范围内，非常节省空间。我们就按32位来算，支持42亿数据规模。</p><p>不过，仅仅使用自增序列还不够，因为容易被人爆刷。所以还需要设计一个加密验签算法。算法有很多，比如可以使用按位加权方案。32位的自增序列，可以每4位一组，转为10进制，这样就有8个数字。提前准备一个长度为8的加权数组，作为秘钥。对自增序列的8个数字按位加权求和，得到的结果作为签名。</p><p>当然，考虑到秘钥的安全性，我们也可以准备多组加权数组，比如准备16组。然后生成兑换码时随机生成一个4位的新鲜值，取值范围刚好是0~15，新鲜值是几，我们就取第几组加权数组作为秘钥。然后把新鲜值、自增序列拼接后按位加权求和，得到签名。</p><p>最后把签名值的后14位、新鲜值（4位）、自增序列（32位）拼接，得到一个50位二进制数，然后与一个较大的质数做异或运算加以混淆，再基于Base32或Base64转码，即可的对兑换码。</p><p>如果是基于Base32转码，得到的兑换码恰好10位，符合要求。</p><p>需要注意的是，用来做异或的大质数、加权数组都属于秘钥，千万不能泄露。如有必要，也可以定期更换。</p><p>当我们要验签的时候，首先将结果 利用Base32转码为数字。然后与大质数异或得到原始数值。</p><p>接着取高14位，得到签名；取后36位得到新鲜值与自增序列的拼接结果。取中4位得到新鲜值。</p><p>根据新鲜值找到对应的秘钥（加权数组），然后再次对后36位加权求和，得到签名。与高14位的签名比较是否一致，如果不一致证明兑换码被篡改过，属于无效兑换码。如果一致，证明是有效兑换码。</p><p>接着，取出低32位，得到兑换码的自增序列号。利用BitMap验证兑换状态，是否兑换过即可。</p><p>整个验证过程完全不用访问数据库，效率非常高。</p></div><p><strong>面试官：你在项目中哪些地方用到过线程池？</strong></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>答：很多地方，比如我在实现优惠券的兑换码生成的时候。</p><p>当我们在发放优惠券的时候，会判断优惠券的领取方式，我们有基于页面手动领取，基于兑换码兑换领取等多种方式。</p><p>如果发现是兑换码领取，则会在发放的同时，生成兑换码。但由于兑换码数量比较多，如果在发放优惠券的同时生成兑换码，业务耗时会比较久。</p><p>因此，我们会采用线程池异步生成兑换码的方式。</p></div><p><strong>面试官可能会追问：那你的线程池参数是怎么设置的？</strong></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>答：线程池的常见参数包括：核心线程、最大线程、队列、线程名称、拒绝策略等。</p><p>这里核心线程数我们配置的是2，最大线程数是CPU核数。之所以这么配置是因为发放优惠券并不是高频业务，这里基于线程池做异步处理仅仅是为了减少业务耗时，提高用户体验。所以线程数无需特别高。</p><p>队列的大小设置的是200，而拒绝策略采用的是交给调用线程处理的方式。</p><p>由于业务访问频率较低，所以基本不会出现线程耗尽的情况，如果真的出现了，就交给调用线程处理，让客户稍微等待一下也行。</p></div>',352),gn=[mn];function vn(bn,yn){return s(),a("div",null,gn)}const wn=n(dn,[["render",vn],["__file","day09-优惠券管理.html.vue"]]);export{wn as default};
