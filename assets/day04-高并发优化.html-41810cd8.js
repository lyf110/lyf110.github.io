import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o,c as l,a as n,b as a,d as p,e as t}from"./app-5f6064b2.js";const i="/assets/1689423516455-14-ce7b227a.png",u="/assets/1689423516427-1-3cc020ca.png",k="/assets/1689423516428-2-03a3c90a.png",r="/assets/1689423516428-3-d504a702.png",d="/assets/1689423516428-4-852db2c3.png",m="/assets/1689423516428-5-5749b878.png",v="/assets/1689423516428-6-f80c6085.png",b="/assets/1689423516428-7-335e3dd7.png",g="/assets/1689423516429-8-1512ffb8.png",f="/assets/1689423516429-9-f4e06db2.png",y="/assets/image-20230715201946753-6f774042.png",w="/assets/1689423516429-10-cbd2f40d.png",h="/assets/1689423516429-11-ae60a008.png",D="/assets/1689423516429-12-f03a86e6.png",L="/assets/1689423516429-13-9a094043.png",I={},_=t('<h1 id="day04-高并发优化" tabindex="-1"><a class="header-anchor" href="#day04-高并发优化" aria-hidden="true">#</a> day04-高并发优化</h1><p>昨天我们实现了学习计划和学习进度的统计功能。特别是学习进度部分，为了更精确的记录用户上一次播放的进度，我们采用的方案是：前端每隔15秒就发起一次请求，将播放记录写入数据库。</p><p>但问题是，提交播放记录的业务太复杂了，其中涉及到大量的数据库操作：</p><figure><img src="'+i+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>在并发较高的情况下，会给数据库带来非常大的压力。该怎么解决呢？</p><p>今天我们就来分析一下，当碰到高并发的数据库写业务时，该如何优化。通过今天的学习，大家可以掌握下面的技能：</p><ul><li>理解高并发优化的常见方案</li><li>掌握Redis合并写请求的方案</li><li>掌握DelayQueue的使用</li></ul><p>特别是其中的高并发优化方案，在很多的业务场景下都可以用到。</p><h1 id="_1-高并发优化方案" tabindex="-1"><a class="header-anchor" href="#_1-高并发优化方案" aria-hidden="true">#</a> 1.高并发优化方案</h1><p>解决高并发问题从宏观角度来说有3个方向：</p><figure><img src="'+u+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>其中，水平扩展和服务保护侧重的是运维层面的处理。而提高单机并发能力侧重的则是业务层面的处理，也就是我们程序员在开发时可以做到的。</p><p>因此，我们本章重点讨论如何通过编码来提供业务的单机并发能力。</p><h2 id="_1-1-单机并发能力" tabindex="-1"><a class="header-anchor" href="#_1-1-单机并发能力" aria-hidden="true">#</a> 1.1.单机并发能力</h2><p>在机器性能一定的情况下，提高单机并发能力就是要尽可能缩短业务的响应时间（<strong>R</strong>esponse<strong>T</strong>ime），而对响应时间影响最大的往往是对数据库的操作。而从数据库角度来说，我们的业务无非就是<strong>读</strong>或<strong>写</strong>两种类型。</p><p>对于读多写少的业务，其优化手段大家都比较熟悉了，主要包括两方面：</p><ul><li>优化代码和SQL</li><li>添加缓存</li></ul><p>对于写多读少的业务，大家可能较少碰到，优化的手段可能也不太熟悉，这也是我们要讲解的重点。</p><p>对于高并发写的优化方案有：</p><ul><li>优化代码及SQL</li><li>变同步写为异步写</li><li>合并写请求</li></ul><p>代码和SQL优化与读优化类似，我们就不再赘述了，接下来我们着重分析一下变同步为异步、合并写请求两种优化方案。</p><h2 id="_1-2-变同步为异步" tabindex="-1"><a class="header-anchor" href="#_1-2-变同步为异步" aria-hidden="true">#</a> 1.2.变同步为异步</h2><p>假如一个业务比较复杂，需要有多次数据库的写业务，如图所示：</p><figure><img src="'+k+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>由于各个业务之间是同步串行执行，因此整个业务的响应时间就是每一次数据库写业务的响应时间之和，并发能力肯定不会太好。</p><p>优化的思路很简单，我们之前讲解MQ的时候就说过，利用MQ可以把同步业务变成异步，从而提高效率。</p><ul><li>当我们接收到用户请求后，可以先不处理业务，而是发送MQ消息并返回给用户结果。</li><li>而后通过消息监听器监听MQ消息，处理后续业务。</li></ul><p>如图：</p><figure><img src="'+r+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>这样一来，用户请求处理和后续数据库写就从同步变为异步，用户无需等待后续的数据库写操作，响应时间自然会大大缩短。并发能力自然大大提高。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p><strong>优点</strong>：</p><ul><li>无需等待复杂业务处理，大大减少响应时间</li><li>利用MQ暂存消息，起到流量削峰整形作用</li><li>降低写数据库频率，减轻数据库并发压力</li></ul><p><strong>缺点</strong>：</p><ul><li>依赖于MQ的可靠性</li><li>降低了些频率，但是没有减少数据库写次数</li></ul><p><strong>应用场景</strong>：</p><ul><li>比较适合应用于业务复杂， 业务链较长，有多次数据库写操作的业务。</li></ul></div><h2 id="_1-3-合并写请求" tabindex="-1"><a class="header-anchor" href="#_1-3-合并写请求" aria-hidden="true">#</a> 1.3.合并写请求</h2><p>合并写请求方案其实是参考高并发读的优化思路：当读数据库并发较高时，我们可以把数据缓存到Redis，这样就无需访问数据库，大大减少数据库压力，减少响应时间。</p><p>既然读数据可以建立缓存，那么写数据可以不可以也缓存到Redis呢？</p><p>答案是肯定的，合并写请求就是指当写数据库并发较高时，不再直接写到数据库。而是先将数据缓存到Redis，然后定期将缓存中的数据批量写入数据库。</p><p>如图：</p><figure><img src="'+d+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>由于Redis是内存操作，写的效率也非常高，这样每次请求的处理速度大大提高，响应时间大大缩短，并发能力肯定有很大的提升。</p><p>而且由于数据都缓存到Redis了，积累一些数据后再批量写入数据库，这样数据库的写频率、写次数都大大减少，对数据库压力小了非常多！</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p><strong>优点：</strong></p><ul><li>写缓存速度快，响应时间大大减少</li><li>降低数据库的写频率和写次数，大大减轻数据库压力</li></ul><p><strong>缺点：</strong></p><ul><li>实现相对复杂</li><li>依赖Redis可靠性</li><li>不支持事务和复杂业务</li></ul><p><strong>场景：</strong></p><ul><li>写频率较高、写业务相对简单的场景</li></ul></div><h1 id="_2-播放进度记录方案改进" tabindex="-1"><a class="header-anchor" href="#_2-播放进度记录方案改进" aria-hidden="true">#</a> 2.播放进度记录方案改进</h1><p>播放进度统计包含大量的数据库读、写操作。不过保存播放记录还是以写数据库为主。因此优化的方向还是以高并发写优化为主。</p><p>大家思考一下，针对播放进度记录业务来说，应该采用哪种优化方案呢？</p><ul><li>变同步为异步？</li><li>合并写？</li></ul><h2 id="_2-1-优化方案选择" tabindex="-1"><a class="header-anchor" href="#_2-1-优化方案选择" aria-hidden="true">#</a> 2.1.优化方案选择</h2><p>虽然播放进度记录业务较为复杂，但是我们认真思考一下整个业务分支：</p><figure><img src="'+m+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><ul><li>考试：每章只能考一次，还不能重复考试。因此属于低频行为，可以忽略</li><li>视频进度：前端每隔15秒就提交一次请求。在一个视频播放的过程中，可能有数十次请求，但完播（进度超50%）的请求只会有一次。因此多数情况下都是更新一下播放进度即可。</li></ul><p>也就是说，95%的请求都是在更新<code>learning_record</code>表中的<code>moment</code>字段，以及<code>learning_lesson</code>表中的正在学习的小节id和时间。</p><figure><img src="'+v+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>而播放进度信息，不管更新多少次，下一次续播肯定是从最后的一次播放进度开始续播。也就是说我们只需要记住最后一次即可。因此可以采用合并写方案来降低数据库写的次数和频率，而异步写做不到。</p><p>综上，提交播放进度业务虽然看起来复杂，但大多数请求的处理很简单，就是更新播放进度。并且播放进度数据是可以合并的（覆盖之前旧数据）。我们建议采用合并写请求方案：</p><figure><img src="'+b+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_2-2-redis数据结构设计" tabindex="-1"><a class="header-anchor" href="#_2-2-redis数据结构设计" aria-hidden="true">#</a> 2.2.Redis数据结构设计</h2><p>我们先讨论下Redis缓存中需要记录哪些数据。</p><p>我们的优化方案要处理的不是所有的提交学习记录请求。仅仅是视频播放时的高频更新播放进度的请求，对应的业务分支如图：</p><figure><img src="'+g+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>这条业务支线的流程如下：</p><ul><li>查询播放记录，判断是否存在 <ul><li>如果不存在，新增一条记录</li><li>如果存在，则更新学习记录</li></ul></li><li>判断当前进度是否是第一次学完 <ul><li>播放进度要超过50%</li><li>原本的记录状态是未学完</li></ul></li><li>更新课表中最近学习小节id、学习时间</li></ul><p>这里有多次数据库操作，例如：</p><ul><li>查询播放记录：需要知道播放记录是否存在、播放记录当前的完成状态</li><li>更新播放记录：更新播放进度</li><li>更新最近学习小节id、时间</li></ul><p>一方面我们要缓存写数据，减少写数据库频率；另一方面我们要缓存播放记录，减少查询数据库。因此，缓存中至少要包含3个字段：</p><ul><li>记录id：id，用于根据id更新数据库</li><li>播放进度：moment，用于缓存播放进度</li><li>播放状态（是否学完）：finished，用于判断是否是第一次学完</li></ul><p>既然一个小节要保存多个字段，是不是可以考虑使用Hash结构来保存这些数据，如图：</p><figure><img src="'+f+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>不过，这样设计有一个问题。课程有很多，每个课程的小节也非常多。每个小节都是一个独立的KEY，需要创建的KEY也会非常多，浪费大量内存。</p><p>而且，用户学习视频的过程中，可能会在多个视频之间来回跳转，这就会导致频繁的创建缓存、缓存过期，影响到最终的业务性能。该如何解决呢？</p><p>既然一个课程包含多个小节，我们完全可以把一个课程的多个小节作为一个KEY来缓存，如图：</p><figure><img src="'+y+'" alt="image-20230715201946753" tabindex="0" loading="lazy"><figcaption>image-20230715201946753</figcaption></figure><p>这样做有两个好处：</p><ul><li>可以大大减少需要创建的KEY的数量，减少内存占用。</li><li>一个课程创建一个缓存，当用户在多个视频间跳转时，整个缓存的有效期都会被延续，不会频繁的创建和销毁缓存数据</li></ul><p>添加缓存以后，学习记录提交的业务流程就需要发生一些变化了，如图：</p><figure><img src="'+w+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>变化最大的有两点：</p><ul><li>提交播放进度后，如果是更新播放进度则不写数据库，而是写缓存</li><li>需要一个定时任务，定期将缓存数据写入数据库</li></ul><p>变化后的业务具体流程为：</p><ul><li>1.提交学习记录</li><li>2.判断是否是考试 <ul><li>是：新增学习记录，并标记有小节被学完。走步骤8</li><li>否：走视频流程，步骤3</li></ul></li><li>3.查询播放记录缓存，如果缓存不存在则查询数据库并建立缓存</li><li>4.判断记录是否存在 <ul><li>4.1.否：新增一条学习记录</li><li>4.2.是：走更新学习记录流程，步骤5</li></ul></li><li>5.判断是否是第一次学完（进度超50%，旧的状态是未学完） <ul><li>5.1.否：仅仅是要更新播放进度，因此直接写入Redis并结束</li><li>5.2.是：代表小节学完，走步骤6</li></ul></li><li>6.更新学习记录状态为已学完</li><li>7.清理Redis缓存：因为学习状态变为已学完，与缓存不一致，因此这里清理掉缓存，这样下次查询时自然会更新缓存，保证数据一致。</li><li>8.更新课表中已学习小节的数量+1</li><li>9.判断课程的小节是否全部学完 <ul><li>是：更新课表状态为已学完</li><li>否：结束</li></ul></li></ul><h2 id="_2-3-持久化思路" tabindex="-1"><a class="header-anchor" href="#_2-3-持久化思路" aria-hidden="true">#</a> 2.3.持久化思路</h2><p>对于合并写请求方案，一定有一个步骤就是持久化缓存数据到数据库。一般采用的是定时任务持久化：</p><figure><img src="'+h+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>但是定时任务的持久化方式在播放进度记录业务中存在一些问题，主要就是时效性问题。我们的产品要求视频续播的时间误差不能超过30秒。</p><ul><li>假如定时任务间隔较短，例如20秒一次，对数据库的更新频率太高，压力太大</li><li>假如定时任务间隔较长，例如2分钟一次，更新频率较低，续播误差可能超过2分钟，不满足需求</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p><strong>注意</strong>：</p><p>如果产品对于时间误差要求不高，定时任务处理是最简单，最可靠的一种方案，推荐大家使用。</p></div><p>那么问题来了，有什么办法能够在不增加数据库压力的情况下，保证时间误差较低吗？</p><p>假如一个视频时长为20分钟，我们从头播放至15分钟关闭，每隔15秒提交一次播放进度，大概需要提交60次请求。</p><p>但是下一次我们再次打开该视频续播的时候，肯定是从最后一次提交的播放进度来续播。也就是说<strong>续播进度之前的N次播放进度都是没有意义的</strong>，都会被覆盖。</p><p>既然如此，我们完全没有必要定期把这些播放进度写到数据库，只需要将用户最后一次提交的播放进度写入数据库即可。</p><p>但问题来了，我们怎么知道哪一次提交是最后一次提交呢？</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只要用户一直在提交记录，Redis中的播放进度就会一直变化。如果Redis中的播放进度不变，肯定是停止了播放，是最后一次提交。</p></div><p>因此，我们只要能判断Redis中的播放进度是否变化即可。怎么判断呢？</p><p>每当前端提交播放记录时，我们可以设置一个延迟任务并保存这次提交的进度。等待20秒后（因为前端每15秒提交一次，20秒就是等待下一次提交），检查Redis中的缓存的进度与任务中的进度是否一致。</p><ul><li>不一致：说明持续在提交，无需处理</li><li>一致：说明是最后一次提交，更新学习记录、更新课表最近学习小节和时间到数据库中</li></ul><p>流程如下：</p><figure><img src="'+D+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="_3-延迟任务" tabindex="-1"><a class="header-anchor" href="#_3-延迟任务" aria-hidden="true">#</a> 3.延迟任务</h1><p>为了确定用户提交的播放记录是否变化，我们需要将播放记录保存为一个延迟任务，等待超过一个提交周期（20s）后检查播放进度。</p><p>那么延迟任务该如何实现呢？</p><h2 id="_3-1-延迟任务方案" tabindex="-1"><a class="header-anchor" href="#_3-1-延迟任务方案" aria-hidden="true">#</a> 3.1.延迟任务方案</h2><p>延迟任务的实现方案有很多，常见的有四类：</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">DelayQueue</th><th style="text-align:center;">Redisson</th><th style="text-align:center;">MQ</th><th style="text-align:center;">时间轮</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>原理</strong></td><td style="text-align:center;">JDK自带延迟队列，基于阻塞队列实现。</td><td style="text-align:center;">基于Redis数据结构模拟JDK的DelayQueue实现</td><td style="text-align:center;">利用MQ的特性。例如RabbitMQ的死信队列</td><td style="text-align:center;">时间轮算法</td></tr><tr><td style="text-align:center;"><strong>优点</strong></td><td style="text-align:center;">不依赖第三方服务</td><td style="text-align:center;">分布式系统下可用<br>不占用JVM内存</td><td style="text-align:center;">分布式系统下可以<br>不占用JVM内存</td><td style="text-align:center;">不依赖第三方服务<br>性能优异</td></tr><tr><td style="text-align:center;"><strong>缺点</strong></td><td style="text-align:center;">占用JVM内存<br>只能单机使用</td><td style="text-align:center;">依赖第三方服务</td><td style="text-align:center;">依赖第三方服务</td><td style="text-align:center;">只能单机使用</td></tr></tbody></table><p>以上四种方案都可以解决问题，不过本例中我们会使用DelayQueue方案。因为这种方案使用成本最低，而且不依赖任何第三方服务，减少了网络交互。</p><p>但缺点也很明显，就是需要占用JVM内存，在数据量非常大的情况下可能会有问题。但考虑到任务存储时间比较短（只有20秒），因此也可以接收。</p><p>如果你们的数据量非常大，DelayQueue不能满足业务需求，大家也可以替换为其它延迟队列方式，例如Redisson、MQ等</p><h2 id="_3-2-delayqueue的原理" tabindex="-1"><a class="header-anchor" href="#_3-2-delayqueue的原理" aria-hidden="true">#</a> 3.2.DelayQueue的原理</h2><p>首先来看一下DelayQueue的源码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span> <span class="token keyword">extends</span> <span class="token class-name">Delayed</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">transient</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// ... 略</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到DelayQueue实现了BlockingQueue接口，是一个阻塞队列。队列就是容器，用来存储东西的。DelayQueue叫做延迟队列，其中存储的就是<strong>延迟执行的任务</strong>。</p><p>我们可以看到DelayQueue的泛型定义：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span> <span class="token keyword">extends</span> <span class="token class-name">Delayed</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这说明存入<code>DelayQueue</code>内部的元素必须是<code>Delayed</code>类型，这其实就是一个延迟任务的规范接口。来看一下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Delayed</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Delayed</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * Returns the remaining delay associated with this object, in the
     * given time unit.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">unit</span> the time unit
     * <span class="token keyword">@return</span> the remaining delay; zero or negative values indicate
     * that the delay has already elapsed
     */</span>
    <span class="token keyword">long</span> <span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从源码中可以看出，Delayed类型必须具备两个方法：</p><ul><li><code>getDelay()</code>：获取延迟任务的剩余延迟时间</li><li><code>compareTo(T t)</code>：比较两个延迟任务的延迟时间，判断执行顺序</li></ul><p>可见，Delayed类型的延迟任务具备两个功能：获取剩余延迟时间、比较执行顺序。当然，我们可以对Delayed做实现和功能扩展，比如添加延迟任务的数据。</p><p>将来每一次提交播放记录，就可以将播放记录保存在这样的一个<code>Delayed</code>类型的延迟任务里并设定20秒的延迟时间。然后交给<code>DelayQueue</code>队列。<code>DelayQueue</code>会调用<code>compareTo</code>方法，根据剩余延迟时间对任务排序。剩余延迟时间越短的越靠近队首，这样就会被优先执行。</p><h2 id="_3-3-delayqueue的用法" tabindex="-1"><a class="header-anchor" href="#_3-3-delayqueue的用法" aria-hidden="true">#</a> 3.3.DelayQueue的用法</h2><p>首先定义一个Delayed类型的延迟任务类，要能保持任务数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Delayed</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">D</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Delayed</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">D</span> data<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> deadlineNanos<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DelayTask</span><span class="token punctuation">(</span><span class="token class-name">D</span> data<span class="token punctuation">,</span> <span class="token class-name">Duration</span> delayTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deadlineNanos <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> delayTime<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> unit<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> deadlineNanos <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">NANOSECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Delayed</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">NANOSECONDS</span><span class="token punctuation">)</span> <span class="token operator">-</span> o<span class="token punctuation">.</span><span class="token function">getDelay</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">NANOSECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>l <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>l <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来就可以创建延迟任务，交给延迟队列保存：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">DelayQueue</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">DelayTaskTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testDelayQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.初始化延迟队列</span>
        <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DelayTask</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.向队列中添加延迟执行的任务</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始初始化延迟任务。。。。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务3&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务1&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务2&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// TODO 3.尝试执行任务</span>
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，补上执行任务的代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">DelayQueue</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">DelayTaskTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testDelayQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.初始化延迟队列</span>
        <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DelayTask</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.向队列中添加延迟执行的任务</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始初始化延迟任务。。。。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务3&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务1&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务2&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.尝试执行任务</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> task <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始执行延迟任务：{}&quot;</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p><strong>注意</strong>：</p><p>这里我们是直接同一个线程来执行任务了。当没有任务的时候线程会被阻塞。而在实际开发中，我们会准备线程池，开启多个线程来执行队列中的任务。</p></div><h1 id="_4-代码改造" tabindex="-1"><a class="header-anchor" href="#_4-代码改造" aria-hidden="true">#</a> 4.代码改造</h1><p>接下来，我们就可以按照之前分析的方案来改造代码了。</p><h2 id="_4-1-定义延迟任务工具类" tabindex="-1"><a class="header-anchor" href="#_4-1-定义延迟任务工具类" aria-hidden="true">#</a> 4.1.定义延迟任务工具类</h2><p>首先，我们要定义一个工具类，帮助我们改造整个业务。在提交学习记录业务中，需要用到异步任务和缓存的地方有以下几处：</p><figure><img src="`+L+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>因此，我们的工具类就应该具备上述4个方法：</p><ul><li>① 添加播放记录到Redis，并添加一个延迟检测任务到DelayQueue</li><li>② 查询Redis缓存中的指定小节的播放记录</li><li>③ 删除Redis缓存中的指定小节的播放记录</li><li>④ 异步执行DelayQueue中的延迟检测任务，检测播放进度是否变化，如果无变化则写入数据库</li></ul><p>工具类代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">JsonUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">LearningLesson</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">LearningRecord</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">LearningRecordMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ILearningLessonService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">StringRedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PreDestroy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Objects</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">CompletableFuture</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">DelayQueue</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LearningRecordDelayTaskHandler</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">LearningRecordMapper</span> recordMapper<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ILearningLessonService</span> lessonService<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DelayTask</span><span class="token punctuation">&lt;</span><span class="token class-name">RecordTaskData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DelayQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">RECORD_KEY_TEMPLATE</span> <span class="token operator">=</span> <span class="token string">&quot;learning:record:{}&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> begin <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">handleDelayTask</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@PreDestroy</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        begin <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;延迟任务停止执行！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleDelayTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>begin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// 1.获取到期的延迟任务</span>
                <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RecordTaskData</span><span class="token punctuation">&gt;</span></span> task <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">RecordTaskData</span> data <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 2.查询Redis缓存</span>
                <span class="token class-name">LearningRecord</span> record <span class="token operator">=</span> <span class="token function">readRecordCache</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>record <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 3.比较数据，moment值</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> record<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 不一致，说明用户还在持续提交播放进度，放弃旧数据</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 4.一致，持久化播放进度数据到数据库</span>
                <span class="token comment">// 4.1.更新学习记录的moment</span>
                record<span class="token punctuation">.</span><span class="token function">setFinished</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                recordMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 4.2.更新课表最近学习信息</span>
                <span class="token class-name">LearningLesson</span> lesson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LearningLesson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lesson<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lesson<span class="token punctuation">.</span><span class="token function">setLatestSectionId</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lesson<span class="token punctuation">.</span><span class="token function">setLatestLearnTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lessonService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>lesson<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;处理延迟任务发生异常&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addLearningRecordTask</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span> record<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 1.添加数据到Redis缓存</span>
        <span class="token function">writeRecordCache</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.提交延迟任务到延迟队列 DelayQueue</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DelayTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RecordTaskData</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeRecordCache</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;更新学习记录的缓存数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.数据转换</span>
            <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">toJsonStr</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RecordCacheData</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 2.写入Redis</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token constant">RECORD_KEY_TEMPLATE</span><span class="token punctuation">,</span> record<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> record<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.添加缓存过期时间</span>
            redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMinutes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;更新学习记录缓存异常&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">LearningRecord</span> <span class="token function">readRecordCache</span><span class="token punctuation">(</span><span class="token class-name">Long</span> lessonId<span class="token punctuation">,</span> <span class="token class-name">Long</span> sectionId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.读取Redis数据</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token constant">RECORD_KEY_TEMPLATE</span><span class="token punctuation">,</span> lessonId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> cacheData <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> sectionId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 2.数据检查和转换</span>
            <span class="token keyword">return</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">toBean</span><span class="token punctuation">(</span>cacheData<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LearningRecord</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;缓存读取异常&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cleanRecordCache</span><span class="token punctuation">(</span><span class="token class-name">Long</span> lessonId<span class="token punctuation">,</span> <span class="token class-name">Long</span> sectionId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 删除数据</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token constant">RECORD_KEY_TEMPLATE</span><span class="token punctuation">,</span> lessonId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> sectionId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">RecordCacheData</span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Integer</span> moment<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Boolean</span> finished<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">RecordCacheData</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>moment <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>finished <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">RecordTaskData</span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">Long</span> lessonId<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Long</span> sectionId<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Integer</span> moment<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">RecordTaskData</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>lessonId <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>sectionId <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>moment <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-2-改造提交学习记录功能" tabindex="-1"><a class="header-anchor" href="#_4-2-改造提交学习记录功能" aria-hidden="true">#</a> 4.2.改造提交学习记录功能</h2><p>接下来，改造提交学习记录的功能：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>api<span class="token punctuation">.</span>client<span class="token punctuation">.</span>course<span class="token punctuation">.</span></span><span class="token class-name">CourseClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>api<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>course<span class="token punctuation">.</span></span><span class="token class-name">CourseFullInfoDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>api<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>leanring<span class="token punctuation">.</span></span><span class="token class-name">LearningLessonDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>api<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>leanring<span class="token punctuation">.</span></span><span class="token class-name">LearningRecordDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span><span class="token class-name">BizIllegalException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span><span class="token class-name">DbException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">BeanUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">UserContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">LearningRecordFormDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">LearningLesson</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">LearningRecord</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">LessonStatus</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">SectionType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">LearningRecordMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ILearningLessonService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ILearningRecordService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tianji<span class="token punctuation">.</span>learning<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">LearningRecordDelayTaskHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Transactional</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 学习记录表 服务实现类
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token keyword">@author</span> 虎哥
 * <span class="token keyword">@since</span> 2022-12-10
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LearningRecordServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LearningRecordMapper</span><span class="token punctuation">,</span> <span class="token class-name">LearningRecord</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">ILearningRecordService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ILearningLessonService</span> lessonService<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">CourseClient</span> courseClient<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">LearningRecordDelayTaskHandler</span> taskHandler<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">LearningLessonDTO</span> <span class="token function">queryLearningRecordByCourse</span><span class="token punctuation">(</span><span class="token class-name">Long</span> courseId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.获取登录用户</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">UserContext</span><span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.查询课表</span>
        <span class="token class-name">LearningLesson</span> lesson <span class="token operator">=</span> lessonService<span class="token punctuation">.</span><span class="token function">queryByUserAndCourseId</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> courseId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.查询学习记录</span>
        <span class="token comment">// select * from xx where lesson_id = #{lessonId}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LearningRecord</span><span class="token punctuation">&gt;</span></span> records <span class="token operator">=</span> <span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getLessonId</span><span class="token punctuation">,</span> lesson<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.封装结果</span>
        <span class="token class-name">LearningLessonDTO</span> dto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LearningLessonDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dto<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>lesson<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dto<span class="token punctuation">.</span><span class="token function">setLatestSectionId</span><span class="token punctuation">(</span>lesson<span class="token punctuation">.</span><span class="token function">getLatestSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dto<span class="token punctuation">.</span><span class="token function">setRecords</span><span class="token punctuation">(</span><span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyList</span><span class="token punctuation">(</span>records<span class="token punctuation">,</span> <span class="token class-name">LearningRecordDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> dto<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addLearningRecord</span><span class="token punctuation">(</span><span class="token class-name">LearningRecordFormDTO</span> recordDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.获取登录用户</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">UserContext</span><span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.处理学习记录</span>
        <span class="token keyword">boolean</span> finished <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getSectionType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">SectionType</span><span class="token punctuation">.</span><span class="token constant">VIDEO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.1.处理视频</span>
            finished <span class="token operator">=</span> <span class="token function">handleVideoRecord</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> recordDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.2.处理考试</span>
            finished <span class="token operator">=</span> <span class="token function">handleExamRecord</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> recordDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>finished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 没有新学完的小节，无需更新课表中的学习进度</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.处理课表数据</span>
        <span class="token function">handleLearningLessonsChanges</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handleLearningLessonsChanges</span><span class="token punctuation">(</span><span class="token class-name">LearningRecordFormDTO</span> recordDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.查询课表</span>
        <span class="token class-name">LearningLesson</span> lesson <span class="token operator">=</span> lessonService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lesson <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BizIllegalException</span><span class="token punctuation">(</span><span class="token string">&quot;课程不存在，无法更新数据！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.判断是否有新的完成小节</span>
        <span class="token keyword">boolean</span> allLearned <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.如果有新完成的小节，则需要查询课程数据</span>
        <span class="token class-name">CourseFullInfoDTO</span> cInfo <span class="token operator">=</span> courseClient<span class="token punctuation">.</span><span class="token function">getCourseInfoById</span><span class="token punctuation">(</span>lesson<span class="token punctuation">.</span><span class="token function">getCourseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cInfo <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BizIllegalException</span><span class="token punctuation">(</span><span class="token string">&quot;课程不存在，无法更新数据！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.比较课程是否全部学完：已学习小节 &gt;= 课程总小节</span>
        allLearned <span class="token operator">=</span> lesson<span class="token punctuation">.</span><span class="token function">getLearnedSections</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;=</span> cInfo<span class="token punctuation">.</span><span class="token function">getSectionNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5.更新课表</span>
        lessonService<span class="token punctuation">.</span><span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>lesson<span class="token punctuation">.</span><span class="token function">getLearnedSections</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">LearningLesson</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> <span class="token class-name">LessonStatus</span><span class="token punctuation">.</span><span class="token constant">LEARNING</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>allLearned<span class="token punctuation">,</span> <span class="token class-name">LearningLesson</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> <span class="token class-name">LessonStatus</span><span class="token punctuation">.</span><span class="token constant">FINISHED</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>allLearned<span class="token punctuation">,</span> <span class="token class-name">LearningLesson</span><span class="token operator">::</span><span class="token function">getFinishTime</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSql</span><span class="token punctuation">(</span><span class="token string">&quot;learned_sections = learned_sections + 1&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LearningLesson</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> lesson<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">handleVideoRecord</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LearningRecordFormDTO</span> recordDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.查询旧的学习记录</span>
        <span class="token class-name">LearningRecord</span> old <span class="token operator">=</span> <span class="token function">queryOldRecord</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> recordDTO<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.判断是否存在</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>old <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3.不存在，则新增</span>
            <span class="token comment">// 3.1.转换PO</span>
            <span class="token class-name">LearningRecord</span> record <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">,</span> <span class="token class-name">LearningRecord</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.2.填充数据</span>
            record<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.3.写入数据库</span>
            <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">DbException</span><span class="token punctuation">(</span><span class="token string">&quot;新增学习记录失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.存在，则更新</span>
        <span class="token comment">// 4.1.判断是否是第一次完成</span>
        <span class="token keyword">boolean</span> finished <span class="token operator">=</span> <span class="token operator">!</span>old<span class="token punctuation">.</span><span class="token function">getFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> recordDTO<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">&gt;=</span> recordDTO<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>finished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">LearningRecord</span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LearningRecord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            record<span class="token punctuation">.</span><span class="token function">setLessonId</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            record<span class="token punctuation">.</span><span class="token function">setSectionId</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            record<span class="token punctuation">.</span><span class="token function">setMoment</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            record<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            record<span class="token punctuation">.</span><span class="token function">setFinished</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token function">getFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            taskHandler<span class="token punctuation">.</span><span class="token function">addLearningRecordTask</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.2.更新数据</span>
        <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token function">lambdaUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getMoment</span><span class="token punctuation">,</span> recordDTO<span class="token punctuation">.</span><span class="token function">getMoment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getFinished</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getFinishTime</span><span class="token punctuation">,</span> recordDTO<span class="token punctuation">.</span><span class="token function">getCommitTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">DbException</span><span class="token punctuation">(</span><span class="token string">&quot;更新学习记录失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.3.清理缓存</span>
        taskHandler<span class="token punctuation">.</span><span class="token function">cleanRecordCache</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getLessonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> recordDTO<span class="token punctuation">.</span><span class="token function">getSectionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">LearningRecord</span> <span class="token function">queryOldRecord</span><span class="token punctuation">(</span><span class="token class-name">Long</span> lessonId<span class="token punctuation">,</span> <span class="token class-name">Long</span> sectionId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.查询缓存</span>
        <span class="token class-name">LearningRecord</span> record <span class="token operator">=</span> taskHandler<span class="token punctuation">.</span><span class="token function">readRecordCache</span><span class="token punctuation">(</span>lessonId<span class="token punctuation">,</span> sectionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.如果命中，直接返回</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">record</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> record<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.未命中，查询数据库</span>
        record <span class="token operator">=</span> <span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getLessonId</span><span class="token punctuation">,</span> lessonId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LearningRecord</span><span class="token operator">::</span><span class="token function">getSectionId</span><span class="token punctuation">,</span> sectionId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.写入缓存</span>
        taskHandler<span class="token punctuation">.</span><span class="token function">writeRecordCache</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> record<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">handleExamRecord</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">LearningRecordFormDTO</span> recordDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.转换DTO为PO</span>
        <span class="token class-name">LearningRecord</span> record <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyBean</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">,</span> <span class="token class-name">LearningRecord</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.填充数据</span>
        record<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        record<span class="token punctuation">.</span><span class="token function">setFinished</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        record<span class="token punctuation">.</span><span class="token function">setFinishTime</span><span class="token punctuation">(</span>recordDTO<span class="token punctuation">.</span><span class="token function">getCommitTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.写入数据库</span>
        <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">DbException</span><span class="token punctuation">(</span><span class="token string">&quot;新增考试记录失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_5-练习" tabindex="-1"><a class="header-anchor" href="#_5-练习" aria-hidden="true">#</a> 5.练习</h1><h2 id="_5-1-线程池的使用" tabindex="-1"><a class="header-anchor" href="#_5-1-线程池的使用" aria-hidden="true">#</a> 5.1.线程池的使用</h2><p>目前我们的延迟任务执行还是单线程模式，大家将其改造为线程池模式，核心线程数与CPU核数一致即可。</p><h2 id="_5-2-定时任务方案" tabindex="-1"><a class="header-anchor" href="#_5-2-定时任务方案" aria-hidden="true">#</a> 5.2.定时任务方案</h2><p>课堂中我们讲解了基于延迟任务的持久化方案，但定时任务方案也是非常常用的一种。大家可以尝试利用定时任务的方式来解决数据持久化问题。</p><h2 id="_5-3-预习" tabindex="-1"><a class="header-anchor" href="#_5-3-预习" aria-hidden="true">#</a> 5.3.预习</h2><p>参考产品原型中与课程互动问答有关的功能：</p>`,142),T={href:"https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=4c3fbd53-c67d-4931-8f99-315014a17258&versionId=e46cbec9-556b-4d37-b139-0cef86afc708&docId=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&docType=axure&pageId=ecf09af83b2c44ffad5a032712e0a471&image_id=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&parentId=41070af9-3008-4fae-af7c-0ad1d34ad3fb",target:"_blank",rel:"noopener noreferrer"},R=n("p",null,"还有：",-1),x={href:"https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=4c3fbd53-c67d-4931-8f99-315014a17258&versionId=e46cbec9-556b-4d37-b139-0cef86afc708&docId=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&docType=axure&pageId=c4ad6768f647416580bdf2de9a712f6f&image_id=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&parentId=0d006c9d110d4b4dbfea743694c9ca7b",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,"以及后台管理页面：",-1),S={href:"https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=ab7fe2ae-9227-48f0-a568-34bd5e3253e5&versionId=3b2e1709-16bc-4e51-a827-567ed194e4a1&docId=4de5995a-c2df-47a9-9466-d471093366bc&docType=axure&pageId=2ef3e5b67dc942ba9a7eb21073635e2b&image_id=4de5995a-c2df-47a9-9466-d471093366bc&parentId=9b0b4862-6d93-40ba-ad14-7334f4fef34e",target:"_blank",rel:"noopener noreferrer"},q={href:"https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=ab7fe2ae-9227-48f0-a568-34bd5e3253e5&versionId=3b2e1709-16bc-4e51-a827-567ed194e4a1&docId=4de5995a-c2df-47a9-9466-d471093366bc&docType=axure&pageId=018d93b5ee2e431092c2c43305226d02&image_id=4de5995a-c2df-47a9-9466-d471093366bc&parentId=9b0b4862-6d93-40ba-ad14-7334f4fef34e",target:"_blank",rel:"noopener noreferrer"},O=t('<p>思考一下两个问题：</p><ul><li>互动问答相关接口可能有哪些？</li><li>互动问答的数据库表该如何设计？</li></ul><h1 id="_6-面试" tabindex="-1"><a class="header-anchor" href="#_6-面试" aria-hidden="true">#</a> 6.面试</h1><p><strong>面试官：你在开发中参与了哪些功能开发让你觉得比较有挑战性？</strong></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>答：我参与了整个学习中心的功能开发，其中有很多的学习辅助功能都很有特色。比如视频播放的进度记录。我们网站的课程是以录播视频为主，为了提高用户的学习体验，需要实现视频续播功能。这个功能本身并不复杂，只不过我们产品提出的要求比较高：</p><ul><li>首先续播时间误差要控制在30秒以内。</li><li>而且要做到用户突然断开，甚至切换设备后，都可以继续上一次播放</li></ul><p>要达成这个目的，使用传统的手段显然是不行的。</p><p>首先，要做到切换设备后还能续播，用户的播放进度必须保存在服务端，而不是客户端。</p><p>其次，用户突然断开或者切换设备，续播的时间误差不能超过30秒，那播放进度的记录频率就需要比较高。我们会在前端每隔15秒就发起一次心跳请求，提交最新的播放进度，记录到服务端。这样用户下一次续播时直接读取服务端的播放进度，就可以将时间误差控制在15秒左右。</p></div><p><strong>面试官：那播放进度在服务端保存在哪里呢？是数据库吗？如果是数据库，如何解决高频写入给数据库带来巨大压力？</strong></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>答：</p><p>提交播放记录最终肯定是要保存到数据库中的。因为我们不仅要做视频续播，还有用户学习计划、学习进度统计等功能，都需要用到用户的播放记录数据。</p><p>但确实如你所说，前端每隔15秒一次请求，如果在用户量较大时，直接全部写入数据库，对数据库压力会比较大。因此我们采用了合并写请求的方案，当用户提交播放进度时会先缓存在Redis中，后续再将数据保存到数据库即可。</p><p>由于播放进度会不断覆盖，只保留最后一次即可。这样就可以大大减少对于数据库的访问次数和访问频率了。</p></div>',7);function C(Q,E){const s=c("ExternalLinkIcon");return o(),l("div",null,[_,n("p",null,[n("a",T,[a("https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=4c3fbd53-c67d-4931-8f99-315014a17258&versionId=e46cbec9-556b-4d37-b139-0cef86afc708&docId=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&docType=axure&pageId=ecf09af83b2c44ffad5a032712e0a471&image_id=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&parentId=41070af9-3008-4fae-af7c-0ad1d34ad3fb"),p(s)])]),R,n("p",null,[n("a",x,[a("https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=4c3fbd53-c67d-4931-8f99-315014a17258&versionId=e46cbec9-556b-4d37-b139-0cef86afc708&docId=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&docType=axure&pageId=c4ad6768f647416580bdf2de9a712f6f&image_id=9cc41e5c-ae3c-4cf4-b998-d8a73191e649&parentId=0d006c9d110d4b4dbfea743694c9ca7b"),p(s)])]),j,n("p",null,[n("a",S,[a("https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=ab7fe2ae-9227-48f0-a568-34bd5e3253e5&versionId=3b2e1709-16bc-4e51-a827-567ed194e4a1&docId=4de5995a-c2df-47a9-9466-d471093366bc&docType=axure&pageId=2ef3e5b67dc942ba9a7eb21073635e2b&image_id=4de5995a-c2df-47a9-9466-d471093366bc&parentId=9b0b4862-6d93-40ba-ad14-7334f4fef34e"),p(s)])]),n("p",null,[n("a",q,[a("https://lanhuapp.com/web/#/item/project/product?tid=b688242e-152e-4c39-8737-575cdc992579&pid=ab7fe2ae-9227-48f0-a568-34bd5e3253e5&versionId=3b2e1709-16bc-4e51-a827-567ed194e4a1&docId=4de5995a-c2df-47a9-9466-d471093366bc&docType=axure&pageId=018d93b5ee2e431092c2c43305226d02&image_id=4de5995a-c2df-47a9-9466-d471093366bc&parentId=9b0b4862-6d93-40ba-ad14-7334f4fef34e"),p(s)])]),O])}const N=e(I,[["render",C],["__file","day04-高并发优化.html.vue"]]);export{N as default};
