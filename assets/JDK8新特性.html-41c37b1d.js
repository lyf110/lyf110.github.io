const l=JSON.parse('{"key":"v-064646c5","path":"/interview/javabase/Lambda/JDK8%E6%96%B0%E7%89%B9%E6%80%A7.html","title":"二、JDK 8新特性","lang":"zh-CN","frontmatter":{"title":"二、JDK 8新特性","date":"2023-04-17T17:27:49.000Z","order":2,"category":["Lambda","新特性","JDK8","Stream流","Optional","函数式接口","重复注解","新的时间API"],"tag":["Lambda","新特性","JDK8","Stream流","Optional","函数式接口","重复注解","新的时间API"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"JDK 8新特性 1 课程介绍 Java SE的发展历史 了解Open JDK 和 Oracle JDK JDK 8新特性 Lambda表达式集 合之Stream流式操作 接口的增强 并行数组排序 Optional中避免Null检查 新的时间和日期 API 可重复注解","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/interview/javabase/Lambda/JDK8%E6%96%B0%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"二、JDK 8新特性"}],["meta",{"property":"og:description","content":"JDK 8新特性 1 课程介绍 Java SE的发展历史 了解Open JDK 和 Oracle JDK JDK 8新特性 Lambda表达式集 合之Stream流式操作 接口的增强 并行数组排序 Optional中避免Null检查 新的时间和日期 API 可重复注解"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-18T08:00:26.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"二、JDK 8新特性"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"Lambda"}],["meta",{"property":"article:tag","content":"新特性"}],["meta",{"property":"article:tag","content":"JDK8"}],["meta",{"property":"article:tag","content":"Stream流"}],["meta",{"property":"article:tag","content":"Optional"}],["meta",{"property":"article:tag","content":"函数式接口"}],["meta",{"property":"article:tag","content":"重复注解"}],["meta",{"property":"article:tag","content":"新的时间API"}],["meta",{"property":"article:published_time","content":"2023-04-17T17:27:49.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-18T08:00:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二、JDK 8新特性\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-17T17:27:49.000Z\\",\\"dateModified\\":\\"2023-04-18T08:00:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"1 课程介绍","slug":"_1-课程介绍","link":"#_1-课程介绍","children":[]},{"level":2,"title":"2 Lambda","slug":"_2-lambda","link":"#_2-lambda","children":[{"level":3,"title":"2.1 Lambda表达式介绍","slug":"_2-1-lambda表达式介绍","link":"#_2-1-lambda表达式介绍","children":[]},{"level":3,"title":"2.2 Lambda的标准格式","slug":"_2-2-lambda的标准格式","link":"#_2-2-lambda的标准格式","children":[]},{"level":3,"title":"2.3 了解Lambda的实现原理","slug":"_2-3-了解lambda的实现原理","link":"#_2-3-了解lambda的实现原理","children":[]},{"level":3,"title":"2.4  Lambda省略格式","slug":"_2-4-lambda省略格式","link":"#_2-4-lambda省略格式","children":[]},{"level":3,"title":"2.5 Lambda的前提条件","slug":"_2-5-lambda的前提条件","link":"#_2-5-lambda的前提条件","children":[]},{"level":3,"title":"2.6 函数式接口","slug":"_2-6-函数式接口","link":"#_2-6-函数式接口","children":[]},{"level":3,"title":"2.7 Lambda和匿名内部类对比","slug":"_2-7-lambda和匿名内部类对比","link":"#_2-7-lambda和匿名内部类对比","children":[]}]},{"level":2,"title":"3 JDK 8接口新增的两个方法","slug":"_3-jdk-8接口新增的两个方法","link":"#_3-jdk-8接口新增的两个方法","children":[{"level":3,"title":"3.1 目标","slug":"_3-1-目标","link":"#_3-1-目标","children":[]},{"level":3,"title":"3.2 JDK 8接口增强介绍","slug":"_3-2-jdk-8接口增强介绍","link":"#_3-2-jdk-8接口增强介绍","children":[]},{"level":3,"title":"3.3 接口的默认方法","slug":"_3-3-接口的默认方法","link":"#_3-3-接口的默认方法","children":[]},{"level":3,"title":"3.4 接口静态方法","slug":"_3-4-接口静态方法","link":"#_3-4-接口静态方法","children":[]},{"level":3,"title":"3.5 接口默认方法和静态方法的区别","slug":"_3-5-接口默认方法和静态方法的区别","link":"#_3-5-接口默认方法和静态方法的区别","children":[]},{"level":3,"title":"3.6 小结","slug":"_3-6-小结","link":"#_3-6-小结","children":[]}]},{"level":2,"title":"4 常用内置函数式接口","slug":"_4-常用内置函数式接口","link":"#_4-常用内置函数式接口","children":[{"level":3,"title":"4.1 目标","slug":"_4-1-目标","link":"#_4-1-目标","children":[]},{"level":3,"title":"4.2 内置函数式接口来由来","slug":"_4-2-内置函数式接口来由来","link":"#_4-2-内置函数式接口来由来","children":[]},{"level":3,"title":"4.3 常用内置函数式接口介绍","slug":"_4-3-常用内置函数式接口介绍","link":"#_4-3-常用内置函数式接口介绍","children":[]},{"level":3,"title":"4.4 Supplier接口","slug":"_4-4-supplier接口","link":"#_4-4-supplier接口","children":[]},{"level":3,"title":"4.5 Consumer接口","slug":"_4-5-consumer接口","link":"#_4-5-consumer接口","children":[]},{"level":3,"title":"4.6 Function接口","slug":"_4-6-function接口","link":"#_4-6-function接口","children":[]},{"level":3,"title":"4.7 Predicate接口","slug":"_4-7-predicate接口","link":"#_4-7-predicate接口","children":[]},{"level":3,"title":"4.8 小结","slug":"_4-8-小结","link":"#_4-8-小结","children":[]}]},{"level":2,"title":"5 介绍方法引用","slug":"_5-介绍方法引用","link":"#_5-介绍方法引用","children":[{"level":3,"title":"5.1 目标","slug":"_5-1-目标","link":"#_5-1-目标","children":[]},{"level":3,"title":"5.2 Lambda的冗余场景","slug":"_5-2-lambda的冗余场景","link":"#_5-2-lambda的冗余场景","children":[]},{"level":3,"title":"5.3 方法引用的格式","slug":"_5-3-方法引用的格式","link":"#_5-3-方法引用的格式","children":[]},{"level":3,"title":"5.4 常见引用方式","slug":"_5-4-常见引用方式","link":"#_5-4-常见引用方式","children":[]},{"level":3,"title":"5.5 小结","slug":"_5-5-小结","link":"#_5-5-小结","children":[]},{"level":3,"title":"5.5 对象名::引用成员方法","slug":"_5-5-对象名-引用成员方法","link":"#_5-5-对象名-引用成员方法","children":[]},{"level":3,"title":"5.6 类名::引用静态方法","slug":"_5-6-类名-引用静态方法","link":"#_5-6-类名-引用静态方法","children":[]},{"level":3,"title":"5.7 类名::引用实例方法","slug":"_5-7-类名-引用实例方法","link":"#_5-7-类名-引用实例方法","children":[]},{"level":3,"title":"5.8 类名::new引用构造器","slug":"_5-8-类名-new引用构造器","link":"#_5-8-类名-new引用构造器","children":[]},{"level":3,"title":"5.9 数组::new 引用数组构造器","slug":"_5-9-数组-new-引用数组构造器","link":"#_5-9-数组-new-引用数组构造器","children":[]},{"level":3,"title":"5.10 小结","slug":"_5-10-小结","link":"#_5-10-小结","children":[]}]},{"level":2,"title":"6 Stream 流","slug":"_6-stream-流","link":"#_6-stream-流","children":[{"level":3,"title":"6.1 Stream流介绍","slug":"_6-1-stream流介绍","link":"#_6-1-stream流介绍","children":[]},{"level":3,"title":"6.2 获取Stream流的两种方式","slug":"_6-2-获取stream流的两种方式","link":"#_6-2-获取stream流的两种方式","children":[]},{"level":3,"title":"6.3 Stream常用方法和注意事项","slug":"_6-3-stream常用方法和注意事项","link":"#_6-3-stream常用方法和注意事项","children":[]},{"level":3,"title":"6.4 Stream常用方法","slug":"_6-4-stream常用方法","link":"#_6-4-stream常用方法","children":[]},{"level":3,"title":"6.5 综合案例","slug":"_6-5-综合案例","link":"#_6-5-综合案例","children":[]},{"level":3,"title":"6.6 收集Stream流中的结果","slug":"_6-6-收集stream流中的结果","link":"#_6-6-收集stream流中的结果","children":[]},{"level":3,"title":"6.7 并行的Stream流","slug":"_6-7-并行的stream流","link":"#_6-7-并行的stream流","children":[]},{"level":3,"title":"6.8 并行和串行Stream流的效率对比 目标","slug":"_6-8-并行和串行stream流的效率对比-目标","link":"#_6-8-并行和串行stream流的效率对比-目标","children":[]},{"level":3,"title":"6.9 parallelStream线程安全问题","slug":"_6-9-parallelstream线程安全问题","link":"#_6-9-parallelstream线程安全问题","children":[]},{"level":3,"title":"6.10 parallelStream背后的技术","slug":"_6-10-parallelstream背后的技术","link":"#_6-10-parallelstream背后的技术","children":[]}]},{"level":2,"title":"7 学习JDK 8新增的Optional类","slug":"_7-学习jdk-8新增的optional类","link":"#_7-学习jdk-8新增的optional类","children":[{"level":3,"title":"7.1 目标","slug":"_7-1-目标","link":"#_7-1-目标","children":[]},{"level":3,"title":"7.2 以前对null的处理方式","slug":"_7-2-以前对null的处理方式","link":"#_7-2-以前对null的处理方式","children":[]},{"level":3,"title":"7.3 Optional类介绍","slug":"_7-3-optional类介绍","link":"#_7-3-optional类介绍","children":[]},{"level":3,"title":"7.4 Optional的基本使用","slug":"_7-4-optional的基本使用","link":"#_7-4-optional的基本使用","children":[]},{"level":3,"title":"7.5 Optional的高级使用","slug":"_7-5-optional的高级使用","link":"#_7-5-optional的高级使用","children":[]},{"level":3,"title":"7.6 小结","slug":"_7-6-小结","link":"#_7-6-小结","children":[]}]},{"level":2,"title":"8 学习JDK 8新的日期和时间 API","slug":"_8-学习jdk-8新的日期和时间-api","link":"#_8-学习jdk-8新的日期和时间-api","children":[{"level":3,"title":"8.1 目标","slug":"_8-1-目标","link":"#_8-1-目标","children":[]},{"level":3,"title":"8.2 旧版日期时间API存在的问题","slug":"_8-2-旧版日期时间api存在的问题","link":"#_8-2-旧版日期时间api存在的问题","children":[]},{"level":3,"title":"8.3 新日期时间 API介绍","slug":"_8-3-新日期时间-api介绍","link":"#_8-3-新日期时间-api介绍","children":[]},{"level":3,"title":"8.4 JDK 8的日期和时间类","slug":"_8-4-jdk-8的日期和时间类","link":"#_8-4-jdk-8的日期和时间类","children":[]},{"level":3,"title":"8.5 JDK 8的时间格式化与解析","slug":"_8-5-jdk-8的时间格式化与解析","link":"#_8-5-jdk-8的时间格式化与解析","children":[]},{"level":3,"title":"8.6 JDK 8的 Instant 类","slug":"_8-6-jdk-8的-instant-类","link":"#_8-6-jdk-8的-instant-类","children":[]},{"level":3,"title":"8.7 JDK 8的计算日期时间差类","slug":"_8-7-jdk-8的计算日期时间差类","link":"#_8-7-jdk-8的计算日期时间差类","children":[]},{"level":3,"title":"8.8 JDK 8的时间校正器","slug":"_8-8-jdk-8的时间校正器","link":"#_8-8-jdk-8的时间校正器","children":[]},{"level":3,"title":"8.9 JDK 8设置日期时间的时区","slug":"_8-9-jdk-8设置日期时间的时区","link":"#_8-9-jdk-8设置日期时间的时区","children":[]},{"level":3,"title":"8.10 小结","slug":"_8-10-小结","link":"#_8-10-小结","children":[]}]},{"level":2,"title":"9 学习JDK 8重复注解与类型注解","slug":"_9-学习jdk-8重复注解与类型注解","link":"#_9-学习jdk-8重复注解与类型注解","children":[{"level":3,"title":"9.1 目标","slug":"_9-1-目标","link":"#_9-1-目标","children":[]},{"level":3,"title":"9.2 重复注解的使用","slug":"_9-2-重复注解的使用","link":"#_9-2-重复注解的使用","children":[]},{"level":3,"title":"9.3 类型注解的使用","slug":"_9-3-类型注解的使用","link":"#_9-3-类型注解的使用","children":[]},{"level":3,"title":"9.4 小结","slug":"_9-4-小结","link":"#_9-4-小结","children":[]}]}],"git":{"createdTime":1681804826000,"updatedTime":1681804826000,"contributors":[{"name":"lyf110","email":"1102970594@qq.com","commits":1}]},"readingTime":{"minutes":81.41,"words":24422},"filePathRelative":"interview/javabase/Lambda/JDK8新特性.md","localizedDate":"2023年4月18日","excerpt":"<h1> JDK 8新特性</h1>\\n<h2> 1 课程介绍</h2>\\n<ol>\\n<li>\\n<p>Java SE的发展历史</p>\\n</li>\\n<li>\\n<p>了解Open JDK 和 Oracle JDK</p>\\n</li>\\n<li>\\n<p>JDK 8新特性</p>\\n<ul>\\n<li>\\n<p><strong>Lambda表达式集</strong></p>\\n</li>\\n<li>\\n<p><strong>合之Stream流式操作</strong></p>\\n</li>\\n<li>\\n<p>接口的增强</p>\\n</li>\\n<li>\\n<p>并行数组排序</p>\\n</li>\\n<li>\\n<p>Optional中避免Null检查</p>\\n</li>\\n<li>\\n<p>新的时间和日期 API</p>\\n</li>\\n<li>\\n<p>可重复注解</p>\\n</li>\\n</ul>\\n</li>\\n</ol>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{l as data};
