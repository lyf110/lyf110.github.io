const e=JSON.parse('{"key":"v-292feed9","path":"/database/mysql/heima2022/plus/01%20%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html","title":"一、MySQL存储引擎","lang":"zh-CN","frontmatter":{"title":"一、MySQL存储引擎","date":"2023-04-02T10:38:46.000Z","order":1,"category":["数据库","MySQL存储引擎","MySQL"],"tag":["数据库","MySQL存储引擎","MySQL"],"author":{"name":"liu yang fang","link":"https://github.com/lyf110"},"description":"1. 存储引擎 1.1 MySQL体系结构 1). 连接层 最上层是一些客户端和链接服务，包含本地sock 通信和大多数基于客户端/服务端工具实现的类似于 TCP/IP的通信。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安全接入的客户端提供线程。同样在该层上可以实现基于SSL的安全链接。服务器也会为安全接入的每个客户端验证它所具有的操作权限。 2). 服务层 第二层架构主要完成大多数的核心服务功能，如SQL接口，并完成缓存的查询，SQL的分析和优化，部分内置函数的执行。所有跨存储引擎的功能也在这一层实现，如过程、函数等。在该层，服务器会解析查询并创建相应的内部解析树，并对其完成相应的优化如确定表的查询的顺序，是否利用索引等， 最后生成相应的执行操作。如果是select语句，服务器还会查询内部的缓存，如果缓存空间足够大， 这样在解决大量读操作的环境中能够很好的提升系统的性能。","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/database/mysql/heima2022/plus/01%20%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"一、MySQL存储引擎"}],["meta",{"property":"og:description","content":"1. 存储引擎 1.1 MySQL体系结构 1). 连接层 最上层是一些客户端和链接服务，包含本地sock 通信和大多数基于客户端/服务端工具实现的类似于 TCP/IP的通信。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安全接入的客户端提供线程。同样在该层上可以实现基于SSL的安全链接。服务器也会为安全接入的每个客户端验证它所具有的操作权限。 2). 服务层 第二层架构主要完成大多数的核心服务功能，如SQL接口，并完成缓存的查询，SQL的分析和优化，部分内置函数的执行。所有跨存储引擎的功能也在这一层实现，如过程、函数等。在该层，服务器会解析查询并创建相应的内部解析树，并对其完成相应的优化如确定表的查询的顺序，是否利用索引等， 最后生成相应的执行操作。如果是select语句，服务器还会查询内部的缓存，如果缓存空间足够大， 这样在解决大量读操作的环境中能够很好的提升系统的性能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"一、MySQL存储引擎"}],["meta",{"property":"article:author","content":"liu yang fang"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"MySQL存储引擎"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-04-02T10:38:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一、MySQL存储引擎\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-02T10:38:46.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liu yang fang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"1.1 MySQL体系结构","slug":"_1-1-mysql体系结构","link":"#_1-1-mysql体系结构","children":[{"level":3,"title":"1). 连接层","slug":"_1-连接层","link":"#_1-连接层","children":[]},{"level":3,"title":"2). 服务层","slug":"_2-服务层","link":"#_2-服务层","children":[]},{"level":3,"title":"3). 引擎层","slug":"_3-引擎层","link":"#_3-引擎层","children":[]},{"level":3,"title":"4). 存储层","slug":"_4-存储层","link":"#_4-存储层","children":[]}]},{"level":2,"title":"1.2 存储引擎介绍","slug":"_1-2-存储引擎介绍","link":"#_1-2-存储引擎介绍","children":[{"level":3,"title":"1). 建表时指定存储引擎","slug":"_1-建表时指定存储引擎","link":"#_1-建表时指定存储引擎","children":[]},{"level":3,"title":"2). 查询当前数据库支持的存储引擎","slug":"_2-查询当前数据库支持的存储引擎","link":"#_2-查询当前数据库支持的存储引擎","children":[]},{"level":3,"title":"3). 示例演示:","slug":"_3-示例演示","link":"#_3-示例演示","children":[]}]},{"level":2,"title":"1.3 存储引擎特点","slug":"_1-3-存储引擎特点","link":"#_1-3-存储引擎特点","children":[{"level":3,"title":"1.3.1 InnoDB","slug":"_1-3-1-innodb","link":"#_1-3-1-innodb","children":[]},{"level":3,"title":"1.3.2 MyISAM","slug":"_1-3-2-myisam","link":"#_1-3-2-myisam","children":[]},{"level":3,"title":"1.3.3 Memory","slug":"_1-3-3-memory","link":"#_1-3-3-memory","children":[]},{"level":3,"title":"1.3.4 区别及特点","slug":"_1-3-4-区别及特点","link":"#_1-3-4-区别及特点","children":[]},{"level":3,"title":"1.3.5 面试题（InnoDB引擎与MyISAM引擎的区别 ?）","slug":"_1-3-5-面试题-innodb引擎与myisam引擎的区别","link":"#_1-3-5-面试题-innodb引擎与myisam引擎的区别","children":[]}]},{"level":2,"title":"1.4 存储引擎选择","slug":"_1-4-存储引擎选择","link":"#_1-4-存储引擎选择","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":8.5,"words":2549},"filePathRelative":"database/mysql/heima2022/plus/01 存储引擎.md","localizedDate":"2023年4月2日","excerpt":"<h1> 1. 存储引擎</h1>\\n<h2> 1.1 MySQL体系结构</h2>\\n<figure><figcaption></figcaption></figure>\\n<h3> 1). 连接层</h3>\\n<p>最上层是一些客户端和链接服务，包含本地sock 通信和大多数基于客户端/服务端工具实现的类似于 TCP/IP的通信。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安全接入的客户端提供线程。同样在该层上可以实现基于SSL的安全链接。服务器也会为安全接入的每个客户端验证它所具有的操作权限。</p>\\n<h3> 2). 服务层</h3>\\n<p>第二层架构主要完成大多数的核心服务功能，如SQL接口，并完成缓存的查询，SQL的分析和优化，部分内置函数的执行。所有跨存储引擎的功能也在这一层实现，如过程、函数等。在该层，服务器会解析查询并创建相应的内部解析树，并对其完成相应的优化如确定表的查询的顺序，是否利用索引等， 最后生成相应的执行操作。如果是select语句，服务器还会查询内部的缓存，如果缓存空间足够大， 这样在解决大量读操作的环境中能够很好的提升系统的性能。</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
