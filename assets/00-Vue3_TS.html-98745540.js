import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as i,a as n,b as s,d as t,t as u,e as p}from"./app-5f6064b2.js";const r="/assets/image-20240407192427817-1-eae1b6b6.png",k="/assets/image-20240407192427842-2-488a5a20.png",d="/assets/image-20240407192427842-3-fc297be9.png",v="/assets/image-20240407192427843-4-f60eb59f.png",g="/assets/image-20240407192427843-5-5d1c34a6.png",m="/assets/image-20240407192427844-6-5a1e9804.png",b="/assets/image-20240407192427844-7-75db0923.png",h="/assets/image-20240407192427844-8-cec1f845.png",q="/assets/image-20240407192427844-9-279d940d.png",y="/assets/image-20240407192427844-10-9b0108b0.png",f="/assets/image-20240407192427844-11-b670eb90.png",_="/assets/image-20240407192427844-12-7e11a036.png",w="/assets/image-20240407192427845-13-65e40515.png",x="/assets/image-20240407192427845-14-ee02e9ef.png",j="/assets/image-20240407192427845-15-1147a8ff.png",z="/assets/image-20240407192427845-16-5f79f822.png",V="/assets/image-20240407192427845-17-996a0e8e.png",T="/assets/image-20240407192427845-18-27eba14e.png",S="/assets/image-20240407192427845-19-0bfe27d8.png",C="/assets/image-20240407192427845-20-20cb8fa6.png",I="/assets/image-20240407192427845-21-9c5f0a4a.png",A="/assets/image-20240407192427846-22-dd5c388a.png",L="/assets/image-20240407192427846-23-ce9ba55f.png",M="/assets/image-20240407192427846-24-6926b9fb.png",K="/assets/image-20240407192427846-25-584bf328.png",D="/assets/image-20240407192427846-26-e5f61455.png",J="/assets/image-20240407192427846-27-b7d4ea2a.png",E="/assets/image-20240407192427846-28-2d5a0ee0.png",H="/assets/image-20240407192427846-29-b30a8a68.png",$="/assets/image-20240407192427846-30-36d1f3b0.png",N="/assets/image-20240407192427847-31-778d0a26.png",P="/assets/image-20240407192427847-32-f9a2989b.png",F="/assets/image-20240407192427847-33-441f7607.png",R="/assets/image-20240407192427847-34-1774edc9.png",B="/assets/image-20240407192427847-35-51013db5.png",U="/assets/image-20240407192427847-36-23aac983.png",O="/assets/image-20240407192427847-37-eb66c5e9.png",Y="/assets/image-20240407192427847-38-7ae7cbbf.png",X="/assets/image-20240407192427847-39-0e393087.png",G="/assets/image-20240407192427848-40-d265cdc7.png",Q="/assets/image-20240407192427848-41-27904195.png",W="/assets/image-20240407192427848-42-8938e6c0.png",Z="/assets/image-20240407192427848-43-037b0aa8.png",nn="/assets/image-20240407192427848-44-c726e8fb.png",sn="/assets/image-20240407192427848-45-99efa122.png",an="/assets/image-20240407192427848-46-07299c62.png",tn="/assets/image-20240407192427848-47-b7637944.png",pn="/assets/image-20240407192427848-48-7bb7d62a.png",en="/assets/image-20240407192427848-49-5796e170.png",on="/assets/image-20240407192427848-50-778c448f.png",ln="/assets/image-20240407192427848-51-c76338c6.png",cn="/assets/image-20240407192427848-52-cd59f585.png",un="/assets/image-20240407192427848-53-e6e0a087.png",rn="/assets/image-20240407192427848-54-b73f56fe.png",kn={},dn=p('<h1 id="vue3-ts" tabindex="-1"><a class="header-anchor" href="#vue3-ts" aria-hidden="true">#</a> Vue3+TS</h1><h2 id="_1-vue3" tabindex="-1"><a class="header-anchor" href="#_1-vue3" aria-hidden="true">#</a> 1 Vue3</h2><h3 id="_1-1-概述" tabindex="-1"><a class="header-anchor" href="#_1-1-概述" aria-hidden="true">#</a> 1.1 概述</h3>',3),vn=n("strong",null,"构建用户界面",-1),gn={href:"https://cn.vuejs.org/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},mn=p('<p>基于数据渲染出用户看到的界面，如下图</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Vue是一个框架，也是一个生态</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>框架：就是一套完整的项目解决方案，用于快速构建项目 。</li><li>优点：大大提升前端项目的开发效率 。</li><li>缺点：需要理解记忆框架的使用规则 。（参照官网）</li></ul><p>今日学习目标：</p><ul><li>能够独立完成Vue3快速入门案例</li><li>能够掌握Vue3常见的指令</li><li>能够掌握使用Axios调用后端接口</li><li>掌握熟悉Vue3的生命周期</li><li>能够独立创建Vue3脚手架前端项目</li><li>能够掌握Vue3脚手架的开发流程</li><li>能够掌握TypeScript的使用特点</li><li>能够掌握TypeScript的常见数据类型</li></ul><h3 id="_1-2-快速入门" tabindex="-1"><a class="header-anchor" href="#_1-2-快速入门" aria-hidden="true">#</a> 1.2 快速入门</h3><p>需求，我们基于下图的效果进行开发，把数据展示在页面中</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>准备</p><ol><li>引入Vue模块（官方提供）</li><li>创建Vue程序的应用实例，控制视图的元素</li><li>准备原色（div），被Vue控制</li></ol><ul><li></li></ul><p>数据驱动视图</p><ol><li></li></ol><p>准备数据</p><ol start="2"><li></li></ol><p>通过插值表达式渲染页面</p><blockquote><p>插值表达式：</p></blockquote>',20),bn=n("li",null,"内容可以是：",-1),hn=p(`<blockquote><ul><li>变量</li><li>三元运算符</li><li>函数调用</li><li>算术运算</li></ul></blockquote><ul><li></li></ul><p>实例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div id <span class="token operator">=</span> <span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script type <span class="token operator">=</span> <span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#39;</span>
        <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;hello Vue&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-常用指令" tabindex="-1"><a class="header-anchor" href="#_1-3-常用指令" aria-hidden="true">#</a> 1.3 常用指令</h3><h4 id="_1-3-1-概述" tabindex="-1"><a class="header-anchor" href="#_1-3-1-概述" aria-hidden="true">#</a> 1.3.1 概述</h4><p>我们先来看一个需求：用户列表数据渲染</p><p>将Vue中定义的响应式数据，渲染展示在视图的表格之中。</p><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>素材文件，在资料文件夹中：基础代码</p></blockquote><p>这个使用Vue该怎么实现呢？下面我们就来使用Vue体用的<strong>指令</strong>实现。</p><p>指令：HTML标签上带有 <strong>v-前缀</strong>的特殊属性，不同的指令具有不同的含义，可以实现不同的功能。</p><p>常用指令：</p><table><thead><tr><th><strong>指令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>v-for</td><td>列表渲染，遍历容器的元素或者对象的属性</td></tr><tr><td>v-bind</td><td>为HTML标签绑定属性值，如设置 href , css样式等</td></tr><tr><td>v-if/v-else-if/v-else</td><td>条件性的渲染某元素，判定为true时渲染,否则不渲染</td></tr><tr><td>v-show</td><td>根据条件展示某元素，区别在于切换的是display属性的值</td></tr><tr><td>v-model</td><td>在表单元素上创建双向数据绑定</td></tr><tr><td>v-on</td><td>为HTML标签绑定事件</td></tr></tbody></table><h4 id="_1-3-2-v-for" tabindex="-1"><a class="header-anchor" href="#_1-3-2-v-for" aria-hidden="true">#</a> 1.3.2 v-for</h4><ul><li></li></ul><p>作用：列表渲染，遍历容器的元素或者对象的属性</p><ul><li></li></ul><p>语法： v-for = &quot;(item,index) in items&quot;</p><ul><li></li></ul><p>参数说明：</p><pre><code>  - 
</code></pre><p>tems 为遍历的数组</p><pre><code>  - 
</code></pre><p>item 为遍历出来的元素</p><pre><code>  - 
</code></pre><p>index 为索引/下标，从0开始 ；可以省略，省略index语法： v-for = &quot;item in items&quot;</p><ul><li></li></ul><p>书写形式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>p v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;content in contents&quot;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>content<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可能是下面的效果，包含了多条数据展示</p><figure><img src="`+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>遍历的数组，必须在data中定义； 要想让哪个标签循环展示多次，就在哪个标签上使用 v-for 指令。</p></blockquote><ul><li></li></ul><p>需求代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>tr v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;(user,index) in userList&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> index <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;user.image&quot;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>gender <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>job <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>entrydate <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>updatetime <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><figure><img src="`+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>图片展示问题，后边使用其他指令解决</p></blockquote><p><strong>v-for的key</strong></p><ul><li></li></ul><p>作用：给元素添加的唯一标识，便于vue进行列表项的正确排序复用</p><ul><li></li></ul><p>语法： v-for = &quot;(item,index) in items&quot; :key=&quot;唯一值&quot;</p><ul><li></li></ul><p>注意点:</p><ul><li>key的值只能是字符串 或 数字类型</li><li>key的值必须具有唯一性</li><li>推荐使用id作为key（唯一），不推荐使用index作为key（会变化，不对应）</li><li></li></ul><p>写法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>p v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;content in contents&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;content.id&quot;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>content<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>效果如下：</p><figure><img src="`+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>官方推荐在使用 v-for 时提供一个key属性，以遍可以追踪每个节点，提升渲染性能。</p></blockquote><h4 id="_1-3-3-v-bind" tabindex="-1"><a class="header-anchor" href="#_1-3-3-v-bind" aria-hidden="true">#</a> 1.3.3 v-bind</h4><ul><li></li></ul><p>作用：动态为HTML标签绑定属性值，如设置href，src，style样式等。</p><ul><li></li></ul><p>语法：v-bind:属性名=&quot;属性值&quot;</p><ul><li></li></ul><p>简化：:属性名=&quot;属性值&quot;</p><ul><li></li></ul><p>html标签写法</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>v-bind写法</p><figure><img src="'+q+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>v-bind所绑定的数据，必须在data中定义</p></blockquote><h4 id="_1-3-4-v-if-v-show" tabindex="-1"><a class="header-anchor" href="#_1-3-4-v-if-v-show" aria-hidden="true">#</a> 1.3.4 v-if &amp; v-show</h4><ul><li></li></ul><p>作用：这两类指令，都是用来控制元素的显示与隐藏的</p><ul><li></li></ul><p>v-if</p><ul><li></li></ul><p>语法：v-if=&quot;表达式&quot;，表达式值为 true，显示；false，隐藏</p><ul><li></li></ul><p>原理：基于条件判断，来控制创建或移除元素节点（条件渲染）</p><ul><li></li></ul><p>场景：要么显示，要么不显示，不频繁切换的场景</p><ul><li></li></ul><p>其它：可以配合 v-else-if / v-else 进行链式调用条件判断</p><ul><li></li></ul><p>注意：v-else-if必须出现在v-if之后，可以出现多个； v-else 必须出现在v-if/v-else-if之后</p><ul><li></li></ul><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>td v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;user.gender == 1&quot;</span><span class="token operator">&gt;</span>男<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>td v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;user.gender == 2&quot;</span><span class="token operator">&gt;</span>女<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>td v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">&gt;</span>其他<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li></li></ul><p>v-show</p><ul><li></li></ul><p>语法：v-show=&quot;表达式&quot;，表达式值为 true，显示；false，隐藏</p><ul><li></li></ul><p>原理：基于CSS样式display来控制显示与隐藏</p><ul><li></li></ul><p>场景：频繁切换显示隐藏的场景</p><ul><li></li></ul><p>示例代码：</p><p>不展示谢逊这条数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>tr v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;(user,index) in userList&quot;</span> v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">&quot;user.name != &#39;谢逊&#39;&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-3-3-v-model" tabindex="-1"><a class="header-anchor" href="#_1-3-3-v-model" aria-hidden="true">#</a> 1.3.3 v-model</h4><p>需求：用户列表数据渲染，获取用户输入的条件</p><p>搜索栏中当用户点击查询按钮时，需要获取到用户输入的表单数据，并输出出来 。</p><figure><img src="`+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>需要想要实现上面这个功能，就需要使用新的指令，v-model</p><p><strong>v-model</strong></p><ul><li></li></ul><p>作用：在表单元素上使用，双向数据绑定。可以方便的 获取 或 设置 表单项数据</p><ul><li></li></ul><p>语法：v-model=&quot;变量名&quot;</p><figure><img src="'+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>v-model 中绑定的变量，必须在data中定义。</p></blockquote><h4 id="_1-3-3-v-on" tabindex="-1"><a class="header-anchor" href="#_1-3-3-v-on" aria-hidden="true">#</a> 1.3.3 v-on</h4><ul><li></li></ul><p>作用：为html标签绑定事件（添加时间监听）</p><ul><li></li></ul><p>语法：</p><ul><li></li></ul><p>v-on:事件名=&quot;内联语句&quot;</p><ul><li></li></ul><p>v-on:事件名=&quot;函数名“</p><ul><li></li></ul><p>简写为 @事件名=&quot;…&quot;</p><p>示例1：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;点我一下试试&quot;</span> 
	v<span class="token operator">-</span>on<span class="token operator">:</span>click<span class="token operator">=</span><span class="token string">&quot;console.log(&#39;试试就试试&#39;);&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例2：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;点我一下试试&quot;</span> v<span class="token operator">-</span>on<span class="token operator">:</span>click<span class="token operator">=</span><span class="token string">&quot;handle&quot;</span><span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;再点我一下试试&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;handle&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

   <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          name<span class="token operator">:</span> <span class="token string">&quot;Vue&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      methods<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;试试就试试&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-ajax" tabindex="-1"><a class="header-anchor" href="#_1-4-ajax" aria-hidden="true">#</a> 1.4 Ajax</h3><h4 id="_1-4-1-什么是ajax" tabindex="-1"><a class="header-anchor" href="#_1-4-1-什么是ajax" aria-hidden="true">#</a> 1.4.1 什么是Ajax</h4><ul><li></li></ul><p>介绍：<strong>A</strong>synchronous <strong>J</strong>avaScript <strong>A</strong>nd <strong>X</strong>ML，异步的JavaScript和XML</p><ul><li></li></ul><p>作用：</p><ul><li></li></ul><p>数据交换：通过Ajax可以给服务器发送请求，并获取服务器响应的数据。</p><ul><li></li></ul><p>异步交互：可以在不重新加载整个页面的情况下，与服务器交换数据并更新部分网页的技术，如：搜索联想、用户名是否可用的校验等等。</p><figure><img src="`+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>缺点：代码非常繁琐</p><h4 id="_1-4-2-同步与异步" tabindex="-1"><a class="header-anchor" href="#_1-4-2-同步与异步" aria-hidden="true">#</a> 1.4.2 同步与异步</h4><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-4-3-axios" tabindex="-1"><a class="header-anchor" href="#_1-4-3-axios" aria-hidden="true">#</a> 1.4.3 Axios</h4><ul><li></li></ul><p>介绍：Axios 对原生的Ajax进行了封装，简化书写，快速开发。</p><ul><li></li></ul>',142),qn={href:"https://www.axios-http.cn/",target:"_blank",rel:"noopener noreferrer"},yn=p('<ul><li></li></ul><p>使用步骤</p><ul><li>引入Axios的js文件（参照官网）</li><li>使用Axios发送请求，并获取相应结果</li></ul><figure><img src="'+x+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:4523/m1/3563297-0-default/user/list&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
    
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>接口可以使用apifox工具进行mock</p></blockquote><ul><li></li></ul><p>请求方式别名</p><ul><li></li></ul><p>为了方便起见，Axios已经为所有支持的请求方法提供了别名</p><ul><li></li></ul><p>格式：axios.请求方式(url [, data [, config]])</p><pre><code>  - 
</code></pre><p>get请求</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:4523/m1/3563297-0-default/user/list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>  - 
</code></pre><p>post请求</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://mock.apifox.cn/m1/3083103-0-default/emps/update&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;id=1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-4-4-async-await" tabindex="-1"><a class="header-anchor" href="#_1-4-4-async-await" aria-hidden="true">#</a> 1.4.4 async &amp; await</h4><p>我们先来看一个新的需求：页面加载完毕后，默认加载并展示出第一个省、第一个市、第一个区。</p><figure><img src="`+j+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最终的完成代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/province</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>provinces <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>province <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>provinces<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/city?pname=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>province<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>cities <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cities<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/area?pname=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>province<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;cname=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>city<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>districts <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>district <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>districts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>回调函数地狱</strong>：这种情况发生在需要执行一系列的异步操作，而每个操作都依赖于前一个操作的返回结果。 导致代码嵌套过深、可读性差、不便于维护。</p><p>那该如何解决呢？</p><p>可以通过async、await来解决回调函数地狱问题。Async就是来声明一个异步方法，await是用来等待异步任务执行</p><p>改造之后的代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">&quot;search&quot;</span><span class="token operator">&gt;</span>按钮<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

        <span class="token punctuation">{</span><span class="token punctuation">{</span>province<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span><span class="token punctuation">{</span>city<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span><span class="token punctuation">{</span>district<span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#39;</span>

        <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">province</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">city</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">district</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">async</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> presult <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/province</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>province <span class="token operator">=</span> presult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

                    <span class="token keyword">const</span> cresult <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/city?pname=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>province<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> cresult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

                    <span class="token keyword">const</span> aresult <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://hmajax.itheima.net/api/area?pname=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>province<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;cname=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>city<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>district <span class="token operator">=</span> aresult<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>await关键字只在async函数内有效 。</p></blockquote><h3 id="_1-4-生命周期" tabindex="-1"><a class="header-anchor" href="#_1-4-生命周期" aria-hidden="true">#</a> 1.4 生命周期</h3><p>生命周期：指一个对象从创建到销毁的整个过程。</p><figure><img src="`+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>生命周期的八个阶段：每触发一个生命周期事件，会自动执行一个生命周期方法(钩子)。</p><table><thead><tr><th><strong>状态</strong></th><th><strong>阶段周期</strong></th></tr></thead><tbody><tr><td>beforeCreate</td><td>创建前</td></tr><tr><td>created</td><td>创建后</td></tr><tr><td>beforeMount</td><td>载入前</td></tr><tr><td><strong>mounted</strong></td><td><strong>挂载完成</strong></td></tr><tr><td>beforeUpdate</td><td>数据更新前</td></tr><tr><td>updated</td><td>数据更新后</td></tr><tr><td>beforeUnmount</td><td>组件销毁前</td></tr><tr><td>unmounted</td><td>组件销毁后</td></tr></tbody></table><figure><img src="'+V+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-5-工程化" tabindex="-1"><a class="header-anchor" href="#_1-5-工程化" aria-hidden="true">#</a> 1.5 工程化</h3><h4 id="_1-5-1-概述" tabindex="-1"><a class="header-anchor" href="#_1-5-1-概述" aria-hidden="true">#</a> 1.5.1 概述</h4><p>我们目前的前端开发中，当我们需要使用一些资源时，例如：vue.js，和axios.js文件，都是直接再工程中导入的，如下图所示：</p><figure><img src="'+T+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是上述开发模式存在如下问题：</p><ul><li><strong>不规范</strong>：每次开发都是从零开始，比较麻烦</li><li><strong>难复用</strong>：多个页面中的组件共用性不好</li><li><strong>难维护</strong>：js、图片等资源没有规范化的存储目录，没有统一的标准，不方便维护</li></ul><p>所以现在企业开发中更加讲究前端工程化方式的开发，主要包括如下4个特点</p><ul><li>模块化：将js和css等，做成一个个可复用模块</li><li>组件化：我们将UI组件，css样式，js行为封装成一个个的组件，便于管理</li><li>规范化：我们提供一套标准的规范的目录接口和编码规范，所有开发人员遵循这套规范</li><li>自动化：项目的构建，测试，部署全部都是自动完成</li></ul><p>所以对于前端工程化，说白了，就是在企业级的前端项目开发中，把前端开发所需要的工具、技术、流程、经验进行规范化和标准化。从而提升开发效率，降低开发难度等等。接下来我们就需要学习vue的官方提供的脚手架帮我们完成前端的工程化。</p><h4 id="_1-5-2-环境准备" tabindex="-1"><a class="header-anchor" href="#_1-5-2-环境准备" aria-hidden="true">#</a> 1.5.2 环境准备</h4><ul><li></li></ul><p>介绍：create-vue是Vue官方提供的最新的脚手架工具，用于快速生成一个工程化的Vue项目。</p><ul><li></li></ul><p>create-vue提供了如下功能：</p><ul><li>统一的目录结构</li><li>本地调试</li><li>热部署</li><li>单元测试</li><li>集成打包上线</li><li></li></ul><p>依赖环境：NodeJS</p><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>详细安装方式，请查看资料中的<strong>NodeJS安装文档</strong></p><ul><li></li></ul><p>npm：<strong>N</strong>ode <strong>P</strong>ackage <strong>M</strong>anager，是NodeJS的软件包管理器。</p><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-5-3-vue项目-创建" tabindex="-1"><a class="header-anchor" href="#_1-5-3-vue项目-创建" aria-hidden="true">#</a> 1.5.3 Vue项目-创建</h4><ul><li></li></ul><p>创建一个工程化的Vue项目，执行命令：npm init vue<a href="/latest">@latest </a></p><figure><img src="'+I+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>详细步骤说明：</p><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行上述指令，将会安装并执行 create-vue，它是 Vue 官方的项目脚手架工具</p><p>项目创建完成以后，进入项目目录，执行命令安装当前项目的依赖：npm install</p><figure><img src="'+L+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>创建项目以及安装依赖的过程，都是需要联网的。</p></blockquote><ul><li></li></ul><p>Vue项目-目录结构</p><figure><img src="'+M+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>启动项目，执行命令：<code>npm run dev</code></p><figure><img src="'+K+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul>',73),fn={href:"http://127.0.0.1:5173",target:"_blank",rel:"noopener noreferrer"},_n=p('<figure><img src="'+D+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-5-4-vue项目开发流程" tabindex="-1"><a class="header-anchor" href="#_1-5-4-vue项目开发流程" aria-hidden="true">#</a> 1.5.4 Vue项目开发流程</h4><p>如下图：</p><figure><img src="'+J+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中<code>*.vue</code>是Vue项目中的组件文件，在Vue项目中也称为单文件组件（<a href="https:_cn.vuejs.org_guide_scaling-up_sfc">SFC</a>，Single-File Components）。Vue 的单文件组件会将一个组件的逻辑 (JS)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里（<code>*.vue</code>）</p><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-5-组合式api" tabindex="-1"><a class="header-anchor" href="#_1-5-组合式api" aria-hidden="true">#</a> 1.5 组合式API</h3><p>组合式API是Vue 3中的一种新的编程模式，它提供了更灵活和可组合的方式来编写Vue组件逻辑，使得代码更加清晰、可维护，并且使得组件的复用更加容易。</p>',8),wn={href:"https://cn.vuejs.org/api/",target:"_blank",rel:"noopener noreferrer"},xn=p('<figure><img src="'+H+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Vue3中提供了很多的组合式API，当然我们平时开发中使用不了那么多，我们重点讲解几个后面项目常用的API，分别是：</p><ul><li>reactive、ref、watch、defineProps、defineEmits</li></ul><h4 id="_1-5-1-reactive和ref函数" tabindex="-1"><a class="header-anchor" href="#_1-5-1-reactive和ref函数" aria-hidden="true">#</a> 1.5.1 reactive和ref函数</h4><p>reactive：能将<strong>对象类型</strong>变为【响应式】，对基本类型无效（例如 string，number，boolean）</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 导入</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token comment">// 执行函数 传入参数 变量接收</span>
<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">&#39;this is msg&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">setSate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
 <span class="token comment">// 修改数据更新视图</span>
 state<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;this is new msg&#39;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
{{ state.msg }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setState<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change msg<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ref：接收<strong>简单类型</strong>或者<strong>对象类型</strong>的数据传入并返回一个响应式的对象</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
 <span class="token comment">// 导入</span>
 <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
 <span class="token comment">// 执行函数 传入参数 变量接收</span>
 <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
 <span class="token keyword">const</span> <span class="token function-variable function">setCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
   <span class="token comment">// 修改数据更新视图必须加上.value</span>
   count<span class="token punctuation">.</span>value<span class="token operator">++</span>
 <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setCount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{count}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>修改数据更新视图必须加上<code>.value</code></p></blockquote><p><strong>二者对比：</strong></p><ol><li><p>都是用来生成响应式数据</p></li><li><p>不同点</p><ol><li>reactive不能处理简单类型的数据</li><li>ref参数类型支持更好，但是必须通过.value做访问修改</li><li>ref函数内部的实现依赖于reactive函数</li></ol></li><li><p>在实际工作中的推荐</p><ol><li>推荐使用ref函数，减少记忆负担</li></ol></li></ol><h4 id="_1-5-2-watch" tabindex="-1"><a class="header-anchor" href="#_1-5-2-watch" aria-hidden="true">#</a> 1.5.2 watch</h4><p>侦听一个或者多个数据的变化，数据变化时执行回调函数</p><p>案例代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">//导入</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">,</span>watch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">setCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">.</span>value<span class="token operator">++</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//侦听单个属性的变化</span>
  <span class="token function">watch</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">count的值为: newVal: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>newVal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,oldVal: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>oldVal <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">setUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    user<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//侦听对象的单个属性</span>
  <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>user<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">count的值为: newVal: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>newVal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,oldVal: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>oldVal <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setCount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>setUser<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ user.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-5-3-父子组件通信" tabindex="-1"><a class="header-anchor" href="#_1-5-3-父子组件通信" aria-hidden="true">#</a> 1.5.3 父子组件通信</h4><p>我们来看下面这个图，有三个组件，组件A的子组件分为是B和C，其中B和C是兄弟关系。我们这次重点研究是父子组件的通信，如果想要实现B和C的通信，需要使用第三方组件pinia才行（不是课程重点）</p><figure><img src="`+$+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>父组件传递信息到子组件：</strong></p><ul><li>父组件中给子组件绑定属性</li><li>子组件内部通过props选项接收数据</li></ul><p><strong>子组件传递信息到父组价</strong></p><ul><li>父组件中给子组件标签通过@绑定事件</li><li>子组件内部通过 emit 方法触发事件</li></ul><p>案例：</p><p>父组件</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">//导入</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">,</span>watch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token comment">//引入子组件</span>
  <span class="token keyword">import</span> SonCom <span class="token keyword">from</span> <span class="token string">&#39;@/components/son-com.vue&#39;</span>

  <span class="token comment">//定义属性</span>
  <span class="token keyword">const</span> money <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//父组件增加金额</span>
  <span class="token keyword">const</span> <span class="token function-variable function">incMoney</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    money<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//子组件减少金额</span>
  <span class="token keyword">const</span> <span class="token function-variable function">decMoney</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    money<span class="token punctuation">.</span>value <span class="token operator">-=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>incMoney<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>增加金额<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SonCom</span> 
  <span class="token attr-name">:money</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>money<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">@decMoney</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>decMoney<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SonCom</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>子组件：son-com.vue</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

<span class="token comment">//接收父组件传递过来的属性</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">money</span> <span class="token operator">:</span>Number
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//声明父组件传递过来的方法</span>
<span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;decMoney&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">//调用父组件的方法</span>
<span class="token keyword">const</span> <span class="token function-variable function">buy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;decMoney&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>son<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        我是子组件 - {{ money }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>减少金额<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">

<span class="token selector">.son</span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-vue路由" tabindex="-1"><a class="header-anchor" href="#_2-vue路由" aria-hidden="true">#</a> 2 Vue路由</h2><h3 id="_2-1-概述" tabindex="-1"><a class="header-anchor" href="#_2-1-概述" aria-hidden="true">#</a> 2.1 概述</h3><ul><li></li></ul><p>Vue Router：Vue的官方路由。为Vue提供富有表现力、可配置的、方便的路由。</p><ul><li></li></ul><p>Vue中的路由：路径 与 组件 的对应关系。</p><figure><img src="`+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击不同的菜单，对应了不同的路由，而路由就可以找到对应的vue组件进行加载</p><h3 id="_2-2-组成" tabindex="-1"><a class="header-anchor" href="#_2-2-组成" aria-hidden="true">#</a> 2.2 组成</h3><ul><li></li></ul><p>Router实例：路由实例，基于createRouter函数创建，维护了应用的路由信息。</p><ul><li></li></ul><p><code>&lt;router-link&gt;</code>：路由链接组件，浏览器会解析成<code>&lt;a&gt;</code>。</p><ul><li></li></ul><p><code>&lt;router-view&gt;</code>：动态视图组件，用来渲染展示与路由路径对应的组件。</p><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-安装vue-router-创建vue项目已选择" tabindex="-1"><a class="header-anchor" href="#_2-3-安装vue-router-创建vue项目已选择" aria-hidden="true">#</a> 2.3 安装vue-router（创建vue项目已选择）</h3><ul><li></li></ul><p>安装命令：<code>npm install vue-router@4</code></p><ul><li></li></ul><p>定义路由</p><figure><img src="'+R+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-ts" tabindex="-1"><a class="header-anchor" href="#_3-ts" aria-hidden="true">#</a> 3 TS</h2><h3 id="_3-1-概述" tabindex="-1"><a class="header-anchor" href="#_3-1-概述" aria-hidden="true">#</a> 3.1 概述</h3><ul><li></li></ul><p>TypeScript（简称 TS）是JavaScript的超集（继承了JS全部语法），TypeScript = Type + JavaScript。</p><figure><img src="'+B+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>简单说，就是在JS的基础上，为JS添加了类型支持。</p><ul><li></li></ul><p>TypeScript是微软开发的开源编程语言，可以在任何运行JavaScript的地方运行。</p><figure><img src="'+U+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+O+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>类型注解</strong>：是指在变量、函数等定义的时候，使用特定语法（: type）来指定其类型，并在代码中限制只能接收特定类型的值。</p><p><strong>为什么要用TypeScript ?</strong></p><ul><li></li></ul><p>有利于发现错误（编写时）</p><ul><li></li></ul><p>有利于代码的静态分析</p><ul><li></li></ul><p>便于语法提示和自动补全</p><ul><li></li></ul><p>利于项目维护</p><h3 id="_3-2-快速入门" tabindex="-1"><a class="header-anchor" href="#_3-2-快速入门" aria-hidden="true">#</a> 3.2 快速入门</h3><ul><li></li></ul><p>准备：</p><ul><li></li></ul><p>安装TS官方提供的编译器：npm install -g typescript (只需要做一次即可)</p><ul><li></li></ul><p>编码：</p><ul><li></li></ul><p>定义ts文件，定义变量，指定类型注解</p><ul><li></li></ul><p>编译ts文件，测试程序运行</p><figure><img src="'+Y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>编译命令：<code>tsc demo.ts</code></p><figure><img src="'+X+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>编译之后的文件为：<strong>demo.js</strong></p><ul><li></li></ul><p>TS代码编译目标版本为es3(比较低)，可以通过参数 –target 指定编译的目标版本。如：es5、es6、es2016... esnext</p><h3 id="_3-3-常用类型" tabindex="-1"><a class="header-anchor" href="#_3-3-常用类型" aria-hidden="true">#</a> 3.3 常用类型</h3><p>TS中除了支持JS中的数据类型之外，还提供了新的实用的数据类型。 常见类型如下:</p>',90),jn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("strong",null,"类型")]),n("th",null,[n("strong",null,"例子")]),n("th",null,[n("strong",null,"备注")])])]),n("tbody",null,[n("tr",null,[n("td",null,"字符串类型"),n("td",null,"string"),n("td")]),n("tr",null,[n("td",null,"数字类型"),n("td",null,"number"),n("td",null,"整数 、小数")]),n("tr",null,[n("td",null,"布尔类型"),n("td",null,"boolean"),n("td",null,"true、false")]),n("tr",null,[n("td",null,"null/undefined类型"),n("td",null,"null / undefined"),n("td",null,"表示null和undefined本身，意义不大")]),n("tr",null,[n("td",null,"任意类型"),n("td",null,"any"),n("td",null,"没有指定任何类型")]),n("tr",null,[n("td",null,"数组类型"),n("td",null,[s("number[] / Array"),n("code",null,"<number>")]),n("td")]),n("tr",null,[n("td",null,"联合类型"),n("td",null,"number | string"),n("td",null,"一个值可以是几种类型之一")]),n("tr",null,[n("td",null,"字面量类型"),n("td",null,"'left' | 'center' | 'right'"),n("td",null,"限制变量或参数的取值，只能是其中之一")]),n("tr",null,[n("td",null,"函数类型"),n("td",null,"() => void"),n("td",null,"对函数的参数及返回值指定类型")]),n("tr",null,[n("td",null,"对象类型"),n("td",{"css-module":"."}),n("td",null,"限定对象的结构（属性及方法）")]),n("tr",null,[n("td",null,"复杂类型"),n("td",null,"interface接口"),n("td")]),n("tr",null,[n("td",null,"泛型"),n("td",null,[n("code",null,"<T>")]),n("td")])])],-1),zn=p('<h4 id="_3-3-1-基础类型" tabindex="-1"><a class="header-anchor" href="#_3-3-1-基础类型" aria-hidden="true">#</a> 3.3.1 基础类型</h4><p>基础类型：string，number，boolean，null，undefined，any，数组。</p><figure><img src="'+G+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script setup lang=&quot;ts&quot;&gt;
    let uname: string = &#39;Tom&#39;;
    let count: number = 100;
    let flag: boolean = false;
    let abc: any = 192;
    console.log(\`\${uname}-\${count}-\${flag}-\${abc}\`)
    console.log(&#39;----------------------------&#39;)
    //数组类型
    let arr: number[] = [1,2,3,4,5,67]
    let arr2: Array&lt;number&gt; = [5,6,7,8];
    console.log(arr)
    console.log(arr2)
    let arr3: (number | string)[] = [2,3,4,&#39;heima&#39;,&#39;chuanzhi&#39;,555];
    let flag2: (boolean | number)= true;
    flag2 = 23
    console. log(arr3)
    console.log(flag2)
    console.log(&#39;----------------------------&#39;)

&lt;/script&gt;

&lt;template&gt;

hello 路由

&lt;/template&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原则上，不推荐使用any!!! 这会让TypeScript又回到JavaScript(失去TS类型保护的优势)。</p><h4 id="_3-3-2-联合类型" tabindex="-1"><a class="header-anchor" href="#_3-3-2-联合类型" aria-hidden="true">#</a> 3.3.2 联合类型</h4><p>联合类型：是指由两个或多个其他类型组成的类型，表示可以是其中的任意一种。</p><p>写法：类型1 | 类型2</p><figure><img src="`+Q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>TS中的联合类型中指定的多种类型之间使用 | 分隔，建议使用()括起来。</p><ul><li></li></ul><p>类型别名：相当于一种自定义类型，为任意类型起别名。</p><ul><li></li></ul><p>使用场景：当同一类型（复杂）别多次使用时，可以通过类型别名，简化该类型（复杂）的书写。</p><ul><li></li></ul><p>定义语法：type customType = 指定类型</p><figure><img src="'+W+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>类型别名type，是可以为任意类型指定别名的。</p><h4 id="_3-3-3-函数类型" tabindex="-1"><a class="header-anchor" href="#_3-3-3-函数类型" aria-hidden="true">#</a> 3.3.3 函数类型</h4><ul><li></li></ul><p>函数类型实际上指的是：函数的参数及返回值的类型</p><ul><li></li></ul><p>语法一：单独指定参数、返回值类型</p><figure><img src="'+Z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>与JS不同，TS中函数调用时传入的参数个数必须与函数定义时参数个数一致。</p><ul><li></li></ul><p>语法二：书写完成函数类型（同时指定参数、返回值类型）(了解,不常用)</p><figure><img src="'+nn+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>可选参数：在TS里我们可以在参数后使用 问号？实现可选参数的功能。而且可选参数只能出现在参数列表的最后。</p><figure><img src="'+sn+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果函数没有返回值，则函数的返回值类型为：void</p><h4 id="_3-3-4-对象类型-接口interface" tabindex="-1"><a class="header-anchor" href="#_3-3-4-对象类型-接口interface" aria-hidden="true">#</a> 3.3.4 对象类型 &amp; 接口interface</h4><p><strong>对象类型</strong></p><p>TS中的对象类型就是来描述对应的结构的（有什么类型的属性和方法）</p><figure><img src="'+an+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>说明：</p><ul><li>直接使用{}来描述对象的结构。属性采用 属性名:类型 的形式；方法采用 方法名():返回值类型 的形式。</li><li>如果方法有参数，就在方法名后面的小括号中指定参数类型（如：say(content:string):void）。</li><li>在一行中指定多个属性类型时，可以使用 逗号/分号 来分割。</li><li>方法的类型，也可以使用箭头函数形式，比如：say:() =&gt; void。</li><li>对象的属性或方法，也可以是可选的，此时就可以声明可选属性/方法，使用 ？（问号）来表示。</li></ul></li></ul><p><strong>接口interface</strong></p><p>当一个对象类型被多次使用时，我们可以使用 接口（interface）来描述对象的类型，达到 复用 的目的。</p><figure><img src="'+tn+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>说明：</p><ul><li>接口使用 interface 关键字来声明，接口名称可以是任意合法的变量名称。</li><li>接口中定义的属性或方法，结尾可以使用逗号(,)/分号(;)分隔；如果每一行只有一个属性，后面也可以不写分号（;）。</li></ul></li></ul><p><strong>Interface（接口） 与 type（类型别名）对比</strong></p><ul><li></li></ul><p>相同点：都可以给对象指定类型。</p><ul><li></li></ul><p>不同点：</p><ul><li></li></ul><p>interface（接口），只能为对象指定类型。</p><ul><li></li></ul><p>type（类型别名），可以为任意类型指定别名。</p><figure><img src="'+pn+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-tdesign" tabindex="-1"><a class="header-anchor" href="#_4-tdesign" aria-hidden="true">#</a> 4 TDesign</h2>',52),Vn={href:"https://tdesign.tencent.com/design/values",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://tdesign.tencent.com/vue/",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://tdesign.tencent.com/vue/components/button?tab=design",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://tdesign.tencent.com/source",target:"_blank",rel:"noopener noreferrer"},In={href:"https://tdesign.tencent.com/",target:"_blank",rel:"noopener noreferrer"},An=n("p",null,"RDesign是传智研究院对腾讯的TDesign组件进行了简易的封装，可以更快的创建脚手架项目，达到快速开发的目的",-1),Ln=n("p",null,"核心技术栈：Vue 3 + TypeScript +Tdesign + Vite + pinia",-1),Mn={href:"https://czri-admin-doc.itheima.net/",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://czri-admin.itheima.net/",target:"_blank",rel:"noopener noreferrer"},Dn=n("h3",{id:"_4-1-创建项目及环境说明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-1-创建项目及环境说明","aria-hidden":"true"},"#"),s(" 4.1 创建项目及环境说明")],-1),Jn={href:"https://czri-admin-doc.itheima.net/",target:"_blank",rel:"noopener noreferrer"},En=p('<h3 id="_4-2-综合案例" tabindex="-1"><a class="header-anchor" href="#_4-2-综合案例" aria-hidden="true">#</a> 4.2 综合案例</h3><h4 id="_4-2-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_4-2-1-需求说明" aria-hidden="true">#</a> 4.2.1 需求说明</h4><ul><li><p>在创建的好项目中新增路由菜单</p><ul><li>主菜单：权限管理</li><li>子菜单：用户管理和角色管理</li></ul></li><li><p>在用户管理菜单中新增组件，展示用户列表，如下效果</p><ul><li>使用TDesign中的table组件展示数据，并可以查看API列表来实现数据的展示（序号、性别）</li><li>使用TDesign中的ImageViewer组件实现图片展示和预览</li></ul></li></ul><figure><img src="'+en+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-2-2-路由创建" tabindex="-1"><a class="header-anchor" href="#_4-2-2-路由创建" aria-hidden="true">#</a> 4.2.2 路由创建</h4><p>在src/router/modules目录下新建文件：permission.ts文件，内容如下：</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;@/layouts/index.vue&#39;</span>

<span class="token keyword">import</span> HomeIcon <span class="token keyword">from</span> <span class="token string">&#39;@/assets/test-img/icon_menu_diaodu.svg&#39;</span>
<span class="token keyword">import</span> ModelIcon <span class="token keyword">from</span> <span class="token string">&#39;@/assets/test-img/icon_menu_zj.svg&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&#39;/permission&#39;</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;permission&#39;</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>
    redirect<span class="token operator">:</span> <span class="token string">&#39;/permission/index&#39;</span><span class="token punctuation">,</span>
    meta<span class="token operator">:</span> <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">&#39;权限管理&#39;</span><span class="token punctuation">,</span>
      icon<span class="token operator">:</span> HomeIcon
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/pages/permission/user/index.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        meta<span class="token operator">:</span> <span class="token punctuation">{</span>
          title<span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span>
          icon<span class="token operator">:</span> ModelIcon
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&#39;role-index&#39;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;角色管理&#39;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/pages/permission/role/index.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        meta<span class="token operator">:</span> <span class="token punctuation">{</span>
          title<span class="token operator">:</span> <span class="token string">&#39;角色管理&#39;</span><span class="token punctuation">,</span>
          icon<span class="token operator">:</span> ModelIcon
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-页面创建" tabindex="-1"><a class="header-anchor" href="#_4-2-3-页面创建" aria-hidden="true">#</a> 4.2.3 页面创建</h4><p>在src/pages下新建目录permissio，并且在permission下创建两个目录，分别是user和role，效果如下：</p><figure><img src="`+on+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在user目录下新增<strong>index.vue</strong>文件</p><h4 id="_4-2-4-table组件" tabindex="-1"><a class="header-anchor" href="#_4-2-4-table组件" aria-hidden="true">#</a> 4.2.4 Table组件</h4>',12),Hn={href:"https://tdesign.tencent.com/vue-next/components/table",target:"_blank",rel:"noopener noreferrer"},$n=p('<p>找到<strong>基础表格</strong></p><figure><img src="'+ln+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>把代码拷贝到新建的index.vue文件中（全部拷贝），代码如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-space</span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 按钮操作区域 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-group</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-filled<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小尺寸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>medium<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>中尺寸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>large<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>大尺寸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-group</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-space</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stripe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示斑马纹 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bordered<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示表格边框 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示悬浮效果 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 宽度自适应 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showHeader<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示表头 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-space</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 当数据为空需要占位时，会显示 cellEmptyContent --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-table</span>
      <span class="token attr-name">row-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:stripe</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stripe<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:bordered</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bordered<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:hover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:table-layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableLayout ? &#39;auto&#39; : &#39;fixed&#39;<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:show-header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showHeader<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">cell-empty-content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>-<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">resizable</span>
      <span class="token attr-name">lazy-load</span>
      <span class="token attr-name">@row-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleRowClick<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-table</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-space</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ErrorCircleFilledIcon<span class="token punctuation">,</span> CheckCircleFilledIcon<span class="token punctuation">,</span> CloseCircleFilledIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;tdesign-icons-vue-next&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> statusNameListMap <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">0</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;审批通过&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token operator">&lt;</span>CheckCircleFilledIcon <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;审批失败&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">&#39;danger&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token operator">&lt;</span>CloseCircleFilledIcon <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token number">2</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;审批过期&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token operator">&lt;</span>ErrorCircleFilledIcon <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> total <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">index</span><span class="token operator">:</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">applicant</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;贾明&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;王芳&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;电子签署&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;纸质签署&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;纸质签署&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;w.cezkdudy@lhll.au&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r.nmgw@peurezgn.sl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p.cumx@rampblpa.ru&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">matters</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;宣传物料制作费用&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;algolia 服务报销&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;相关周边制作费&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;激励奖品快递费&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">createTime</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;2022-01-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-02-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-03-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-04-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-05-01&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> stripe <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bordered <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hover <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tableLayout <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> size <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;medium&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> showHeader <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;applicant&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;申请人&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;status&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;申请状态&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">cell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> <span class="token punctuation">{</span> row <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>t<span class="token operator">-</span>tag shape<span class="token operator">=</span><span class="token string">&quot;round&quot;</span> theme<span class="token operator">=</span><span class="token punctuation">{</span>statusNameListMap<span class="token punctuation">[</span>row<span class="token punctuation">.</span>status<span class="token punctuation">]</span><span class="token punctuation">.</span>theme<span class="token punctuation">}</span> variant<span class="token operator">=</span><span class="token string">&quot;light-outline&quot;</span><span class="token operator">&gt;</span>
          <span class="token punctuation">{</span>statusNameListMap<span class="token punctuation">[</span>row<span class="token punctuation">.</span>status<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">}</span>
          <span class="token punctuation">{</span>statusNameListMap<span class="token punctuation">[</span>row<span class="token punctuation">.</span>status<span class="token punctuation">]</span><span class="token punctuation">.</span>label<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>t<span class="token operator">-</span>tag<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;channel&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;签署方式&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;detail.email&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;邮箱地址&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;createTime&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;申请时间&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handleRowClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">defaultCurrent</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultPageSize</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  total<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码中，columns字段控制表头，for循环中展示的列表数据，目前展示的是案例中自带的内容，我们需要进行改造</p><ul><li>for循环的作用就是data属性进行赋值，我们可以把之前案例的数据直接拷贝过来，删除for循环，最终data的数据为：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>

    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;谢逊&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/1.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;韦一笑&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/2.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;黛绮丝&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/3.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;殷天正&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/4.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>根据我们的原始数据，可以修改columns字段，如下效果：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//表头</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;rowIndex&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;序号&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;头像&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;性别&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;job&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;职位&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;entrydate&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;入职时间&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;updatetime&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;更新时间&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>改造完成后，目前的效果，如下：</p><figure><img src="`+cn+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在上面的代码中，主要控制数据显示的是<code>&lt;t-table&gt;</code>标签，我们来详细说一下这个标签的内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>t<span class="token operator">-</span>table
   row<span class="token operator">-</span>key<span class="token operator">=</span><span class="token string">&quot;index&quot;</span>    
   <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">&quot;data&quot;</span>         
   <span class="token operator">:</span>columns<span class="token operator">=</span><span class="token string">&quot;columns&quot;</span>
   <span class="token operator">:</span>stripe<span class="token operator">=</span><span class="token string">&quot;stripe&quot;</span>
   <span class="token operator">:</span>bordered<span class="token operator">=</span><span class="token string">&quot;bordered&quot;</span>
   <span class="token operator">:</span>hover<span class="token operator">=</span><span class="token string">&quot;hover&quot;</span>
   <span class="token operator">:</span>table<span class="token operator">-</span>layout<span class="token operator">=</span><span class="token string">&quot;tableLayout ? &#39;auto&#39; : &#39;fixed&#39;&quot;</span>
   <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">&quot;size&quot;</span>
   <span class="token operator">:</span>pagination<span class="token operator">=</span><span class="token string">&quot;pagination&quot;</span>
   <span class="token operator">:</span>show<span class="token operator">-</span>header<span class="token operator">=</span><span class="token string">&quot;showHeader&quot;</span>
   cell<span class="token operator">-</span>empty<span class="token operator">-</span>content<span class="token operator">=</span><span class="token string">&quot;-&quot;</span>
   resizable
   @row<span class="token operator">-</span>click<span class="token operator">=</span><span class="token string">&quot;handleRowClick&quot;</span>
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>row-key</li><li>:data     数据源 (数组)</li><li>:columns    列配置(数组)</li><li>:stripe    是否显示斑马纹</li><li>:bordered     是否显示表格边框</li><li>:hover   是否显示鼠标悬浮状态</li><li>:table-layout   表格布局方式       可选项：auto/fixed</li><li>:size   表格尺寸</li><li>:pagination  分页配置， 用于模块内切换内容的控件</li><li>:show-header     是否显示表头</li><li>cell-empty-content  单元格数据为空时呈现的内容</li><li>resizable    是否允许调整列宽</li><li><a href="/row-click">@row-click </a>   行点击时触发，泛型 T 指表格数据类型</li></ul>`,14),Nn={href:"https://tdesign.tencent.com/vue-next/components/table?tab=api",target:"_blank",rel:"noopener noreferrer"},Pn=p(`<blockquote><p>大家可以自己试着修改一下，查看效果</p></blockquote><h4 id="_4-2-5-序号展示" tabindex="-1"><a class="header-anchor" href="#_4-2-5-序号展示" aria-hidden="true">#</a> 4.2.5 序号展示</h4><p>目前列表中的序号是空白的，我们需要单独处理序号。</p><p>在table组件已经提供了序号的功能，有一个默认的字段rowIndex，我们只需要展示即可，默认从0开始</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>t<span class="token operator">-</span>table<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>template #rowIndex<span class="token operator">=</span><span class="token string">&quot;{ rowIndex }&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> rowIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>t<span class="token operator">-</span>table<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>&lt;t-table&gt;</code>标签对中的<code>&lt;template&gt;&lt;/template&gt;</code>可以单独来处理特殊的字段，标签对里面展示列表中的内容</li><li><code>#rowIndex</code>中的<code>rowIndex</code>为默认字段</li></ul><h4 id="_4-2-6-图片展示及预览" tabindex="-1"><a class="header-anchor" href="#_4-2-6-图片展示及预览" aria-hidden="true">#</a> 4.2.6 图片展示及预览</h4><p>目前图片展示的一个url链接，我们现在需要展示为图片，并且由预览功能</p><p>其实在TDesign中已经提供了对应的组件：ImageViewer</p>`,9),Fn={href:"https://tdesign.tencent.com/vue-next/components/image-viewer",target:"_blank",rel:"noopener noreferrer"},Rn=p('<p>找到<strong>缩略图图片查看器</strong></p><figure><img src="'+un+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>代码中需要修改两处，改为自己的图片地址</p><figure><img src="'+rn+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最终的代码如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#image</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ row }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__base<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-image-viewer</span> <span class="token attr-name">:images</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[row.image]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ open }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__ui-image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row.image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__ui-image--img<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__ui-image--hover<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>
                                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BrowseIcon</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.4em<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 预览
                              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-image-viewer</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>#image=&quot;{ row }&quot;</code>中，<code>image</code>是字段名字，<code>row</code>代表整行数据</p><h4 id="_4-2-7-性别字段处理" tabindex="-1"><a class="header-anchor" href="#_4-2-7-性别字段处理" aria-hidden="true">#</a> 4.2.7 性别字段处理</h4><p>目前性别展示的还是1或2，我们最终希望展示的男或女，这个处理，我们只需要通过插值表达式即可解决</p><p>代码如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#gender</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ row }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ row.gender == 1 ? &#39;男&#39; : &#39;女&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>附最终代码，如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-space</span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 按钮操作区域 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-group</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-filled<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>小尺寸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-button</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>medium<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>中尺寸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-button</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-radio-button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>large<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>大尺寸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-radio-group</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-space</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stripe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示斑马纹 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bordered<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示表格边框 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示悬浮效果 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 宽度自适应 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showHeader<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 显示表头 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-checkbox</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-space</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- 当数据为空需要占位时，会显示 cellEmptyContent --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-table</span> <span class="token attr-name">row-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:stripe</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stripe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:bordered</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bordered<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:hover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:table-layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableLayout ? &#39;auto&#39; : &#39;fixed&#39;<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:show-header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showHeader<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">cell-empty-content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>-<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resizable</span> <span class="token attr-name">lazy-load</span> <span class="token attr-name">@row-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleRowClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#rowIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ rowIndex }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ rowIndex + 1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#image</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ row }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__base<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>t-image-viewer</span> <span class="token attr-name">:images</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[row.image]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ open }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__ui-image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row.image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__ui-image--img<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tdesign-demo-image-viewer__ui-image--hover<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BrowseIcon</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.4em<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 预览
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-image-viewer</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#gender</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ row }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ row.gender == 1 ? &#39;男&#39; : &#39;女&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>


        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>t-space</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>

    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;谢逊&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/1.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;韦一笑&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/2.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;黛绮丝&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/3.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;殷天正&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;image&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://web-framework.oss-cn-hangzhou.aliyuncs.com/web/4.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token string">&quot;班主任&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;entrydate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-09&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;updatetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-01 00:00:00&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> total <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> stripe <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bordered <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hover <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tableLayout <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> size <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;medium&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> showHeader <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//表头</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;rowIndex&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;序号&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;头像&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;性别&#39;</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;job&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;职位&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;entrydate&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;入职时间&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">colKey</span><span class="token operator">:</span> <span class="token string">&#39;updatetime&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;更新时间&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handleRowClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">defaultCurrent</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">defaultPageSize</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    total<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function Bn(e,Un){const a=l("ExternalLinkIcon");return c(),i("div",null,[dn,n("p",null,[s("Vue 是一款用于"),vn,s("的渐进式的JavaScript框架。 （官方："),n("a",gn,[s("https://cn.vuejs.org/）"),t(a)])]),mn,n("blockquote",null,[n("ul",null,[n("li",null,"形式："+u(e.表达式)+"。",1),bn])]),hn,n("p",null,[s("官网："),n("a",qn,[s("https://www.axios-http.cn/"),t(a)])]),yn,n("p",null,[s("浏览器中可以直接访问，地址："),n("a",fn,[s("http://127.0.0.1:5173"),t(a)])]),_n,n("p",null,[s("官网地址："),n("a",wn,[s("https://cn.vuejs.org/api/"),t(a)])]),xn,jn,zn,n("p",null,[s("TDesign 具有统一的 "),n("a",Vn,[s("价值观"),t(a)]),s("，一致的设计语言和视觉风格，帮助用户形成连续、统一的体验认知。在此基础上，TDesign 提供了开箱即用的 "),n("a",Tn,[s("UI 组件库"),t(a)]),s("、"),n("a",Sn,[s("设计指南"),t(a)]),s(" 和相关 "),n("a",Cn,[s("设计资产"),t(a)]),s("，以优雅高效的方式将设计和研发从重复劳动中解放出来，同时方便大家在 TDesign 的基础上扩展，更好的的贴近业务需求。")]),n("p",null,[s("官网地址："),n("a",In,[s("https://tdesign.tencent.com/"),t(a)])]),An,Ln,n("p",null,[s("入门手册请参考："),n("a",Mn,[s("https://czri-admin-doc.itheima.net/"),t(a)])]),n("p",null,[s("项目样例（在线访问）："),n("a",Kn,[s("https://czri-admin.itheima.net/"),t(a)])]),Dn,n("p",null,[s("请参考RDesign入门手册："),n("a",Jn,[s("https://czri-admin-doc.itheima.net/"),t(a)])]),En,n("p",null,[s("打开TDesign组件中的Table组件，链接："),n("a",Hn,[s("https://tdesign.tencent.com/vue-next/components/table"),t(a)])]),$n,n("p",null,[s("table组件更多的api参考："),n("a",Nn,[s("https://tdesign.tencent.com/vue-next/components/table?tab=api"),t(a)])]),Pn,n("p",null,[s("链接："),n("a",Fn,[s("https://tdesign.tencent.com/vue-next/components/image-viewer"),t(a)])]),Rn])}const Xn=o(kn,[["render",Bn],["__file","00-Vue3_TS.html.vue"]]);export{Xn as default};
