import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-5f6064b2.js";const t="/assets/202210082120489-1011a146.jpeg",p="/assets/202210082120758-fc927082.jpeg",o="/assets/202210082133536-3f632b7a.png",c="/assets/202210090755439-f1951040.png",l="/assets/202210090810809-5308b673.png",i="/assets/202210090940653-9db652df.png",d="/assets/202210090946416-e7fb839e.png",r="/assets/202210090945797-dcc38303.png",u="/assets/202210090946855-f031eccb.png",k="/assets/202210090947398-07c2acb2.png",g="/assets/202210090954383-7743776c.png",m="/assets/202210091030580-d6297096.png",v="/assets/202210091030071-39d13eb1.png",b={},h=e('<h2 id="_3-函数" tabindex="-1"><a class="header-anchor" href="#_3-函数" aria-hidden="true">#</a> 3. 函数</h2><p>函数是指一段可以直接被另一段程序调用的程序或代码。 也就意味着，这一段程序或代码在MySQL中已经给我们提供了，我们要做的就是在合适的业务场景调用对应的函数完成对应的业务需求即可。 那么，函数到底在哪儿使用呢？</p><p>我们先来看两个场景：</p><p>​ <img src="'+t+'" alt="" loading="lazy"> <img src="'+p+`" alt="" loading="lazy"></p><p>1). 在企业的OA或其他的人力系统中，经常会提供的有这样一个功能，每一个员工登录上来之后都能 够看到当前员工入职的天数。 而在数据库中，存储的都是入职日期，如 2000-11-12，那如果快速计算出天数呢？</p><p>2). 在做报表这类的业务需求中,我们要展示出学员的分数等级分布。而在数据库中，存储的是学生的分数值，如98/75，如何快速判定分数的等级呢？</p><p>其实，上述的这一类的需求呢，我们通过MySQL中的函数都可以很方便的实现 。</p><p>MySQL中的函数主要分为以下四类： 字符串函数、数值函数、日期函数、流程函数。</p><h3 id="_3-1-字符串函数" tabindex="-1"><a class="header-anchor" href="#_3-1-字符串函数" aria-hidden="true">#</a> 3.1 字符串函数</h3><p>MySQL中内置了很多字符串函数，常用的几个如下：</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>CONCAT(S1,S2,...Sn)</td><td>字符串拼接，将S1，S2，... Sn拼接成一个字符串</td></tr><tr><td>LOWER(str)</td><td>将字符串str全部转为小写</td></tr><tr><td>UPPER(str)</td><td>将字符串str全部转为大写</td></tr><tr><td>LPAD(str,n,pad)</td><td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>RPAD(str,n,pad)</td><td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>TRIM(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>SUBSTRING(str,start,len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr></tbody></table><p>演示如下：</p><p>1、concat : 字符串拼接</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39; MySQL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、lower : 全部转小写</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> lower<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、upper : 全部转大写</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> upper<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4、lpad : 左填充</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> lpad<span class="token punctuation">(</span><span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5、rpad : 右填充</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> rpad<span class="token punctuation">(</span><span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>6、trim : 去除空格</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> trim<span class="token punctuation">(</span><span class="token string">&#39; Hello MySQL &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>7、substring : 截取子字符串</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 索引是从1开始的，并不是0</span>
<span class="token keyword">select</span> substring<span class="token punctuation">(</span><span class="token string">&#39;Hello MySQL&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+'" alt="image-20221008213322519" tabindex="0" loading="lazy"><figcaption>image-20221008213322519</figcaption></figure><h4 id="_3-1-1-案例" tabindex="-1"><a class="header-anchor" href="#_3-1-1-案例" aria-hidden="true">#</a> 3.1.1 案例:</h4><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>由于业务需求变更，企业员工的工号，统一为5位数，目前不足5位数的全部在前面补0。比如： 1号员 工的工号应该为00001。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> emp <span class="token keyword">set</span> workno <span class="token operator">=</span> lpad<span class="token punctuation">(</span>workno<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>ps:</p><p>去除字符前补位0的sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token identifier"><span class="token punctuation">`</span>emp<span class="token punctuation">`</span></span> <span class="token keyword">SET</span> <span class="token identifier"><span class="token punctuation">`</span>workno<span class="token punctuation">`</span></span> <span class="token operator">=</span> trim<span class="token punctuation">(</span>LEADING <span class="token string">&#39;0&#39;</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>workno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>处理完毕后, 具体的数据为:</p><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-数值函数" tabindex="-1"><a class="header-anchor" href="#_3-2-数值函数" aria-hidden="true">#</a> 3.2 数值函数</h3><p>常见的数值函数如下：</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>CEIL(x)</td><td>向上取整</td></tr><tr><td>FLOOR(x)</td><td>向下取整</td></tr><tr><td>MOD(x,y)</td><td>返回x/y的模</td></tr><tr><td>RAND()</td><td>返回0~1内的随机数</td></tr><tr><td>ROUND(x,y)</td><td>求参数x的四舍五入的值，保留y位小数</td></tr></tbody></table><p>演示如下：</p><h4 id="_1、ceil-向上取整" tabindex="-1"><a class="header-anchor" href="#_1、ceil-向上取整" aria-hidden="true">#</a> 1、ceil：向上取整</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="image-20221009094050477" tabindex="0" loading="lazy"><figcaption>image-20221009094050477</figcaption></figure><h4 id="_2、floor-向下取整" tabindex="-1"><a class="header-anchor" href="#_2、floor-向下取整" aria-hidden="true">#</a> 2、floor：向下取整</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> floor<span class="token punctuation">(</span><span class="token number">1.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="image-20221009094558160" tabindex="0" loading="lazy"><figcaption>image-20221009094558160</figcaption></figure><h4 id="_3、mod-取模" tabindex="-1"><a class="header-anchor" href="#_3、mod-取模" aria-hidden="true">#</a> 3、mod：取模</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="image-20221009094533961" tabindex="0" loading="lazy"><figcaption>image-20221009094533961</figcaption></figure><h4 id="_4、rand-获取随机数" tabindex="-1"><a class="header-anchor" href="#_4、rand-获取随机数" aria-hidden="true">#</a> 4、rand：获取随机数</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+u+`" alt="image-20221009094621421" tabindex="0" loading="lazy"><figcaption>image-20221009094621421</figcaption></figure><h4 id="_5、round-四舍五入" tabindex="-1"><a class="header-anchor" href="#_5、round-四舍五入" aria-hidden="true">#</a> 5、round：四舍五入</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token number">2.357</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+k+`" alt="image-20221009094701150" tabindex="0" loading="lazy"><figcaption>image-20221009094701150</figcaption></figure><h4 id="_6、针对rand-的四舍五入" tabindex="-1"><a class="header-anchor" href="#_6、针对rand-的四舍五入" aria-hidden="true">#</a> 6、针对rand() 的四舍五入</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> r<span class="token punctuation">.</span>num<span class="token punctuation">,</span> <span class="token function">round</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>num<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> rand<span class="token punctuation">(</span><span class="token punctuation">)</span> num<span class="token punctuation">)</span> <span class="token keyword">as</span> r<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+g+`" alt="image-20221009095446768" tabindex="0" loading="lazy"><figcaption>image-20221009095446768</figcaption></figure><h4 id="_7、案例" tabindex="-1"><a class="header-anchor" href="#_7、案例" aria-hidden="true">#</a> 7、案例：</h4><p>通过数据库的函数，生成一个六位数的随机验证码。</p><p>思路： 获取随机数可以通过rand()函数，但是获取出来的随机数是在0-1之间的，所以可以在其基础 上乘以1000000，然后舍弃小数部分，如果长度不足6位，补0</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> lpad<span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-日期函数" tabindex="-1"><a class="header-anchor" href="#_3-3-日期函数" aria-hidden="true">#</a> 3.3 日期函数</h3><p>常见的日期函数如下：</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>CURDATE()</td><td>返回当前日期</td></tr><tr><td>CURTIME()</td><td>返回当前时间</td></tr><tr><td>NOW()</td><td>返回当前日期和时间</td></tr><tr><td>YEAR(date)</td><td>获取指定date的年份</td></tr><tr><td>MONTH(date)</td><td>获取指定date的月份</td></tr><tr><td>DAY(date)</td><td>获取指定date的日期</td></tr><tr><td>DATE_ADD(date, INTERVAL expr type)</td><td>返回一个日期/时间值加上一个时间间隔expr后的 时间值</td></tr><tr><td>DATEDIFF(date1,date2)</td><td>返回起始时间date1 和结束时间date2之间的天数</td></tr></tbody></table><p>演示如下：</p><p>A. curdate：当前日期</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>B. curtime：当前时间</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> curtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>C. now：当前日期和时间</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>D. YEAR , MONTH , DAY：当前年、月、日</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token keyword">MONTH</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token keyword">DAY</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>E. date_add：增加指定的时间间隔</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">70</span> <span class="token keyword">YEAR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>F. datediff：获取两个日期相差的天数</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> datediff<span class="token punctuation">(</span><span class="token string">&#39;2021-10-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-12-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>案例：</p><p>查询所有员工的入职天数，并根据入职天数倒序排序。</p><p>思路： 入职天数，就是通过当前日期 - 入职日期，所以需要使用datediff函数来完成。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>
	DATEDIFF<span class="token punctuation">(</span> CURDATE<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> entrydate <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;entrydays&#39;</span> 
<span class="token keyword">FROM</span>
	emp 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	entrydays <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-流程函数" tabindex="-1"><a class="header-anchor" href="#_3-4-流程函数" aria-hidden="true">#</a> 3.4 流程函数</h3><p>流程函数也是很常用的一类函数，可以在SQL语句中实现条件筛选，从而提高语句的效率。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>IF(value , t , f)</td><td>如果value为true，则返回t，否则返回f</td></tr><tr><td>IFNULL(value1 , value2)</td><td>如果value1不为空，返回value1，否则 返回value2</td></tr><tr><td>CASE WHEN [ val1 ] THEN [res1] ... ELSE [ default ] END</td><td>如果val1为true，返回res1，... 否 则返回default默认值</td></tr><tr><td>CASE [ expr ] WHEN [ val1 ] THEN [res1] ... ELSE [ default ] END</td><td>如果expr的值等于val1，返回 res1，... 否则返回default默认值</td></tr></tbody></table><p>演示如下：</p><h4 id="_3-4-1-if" tabindex="-1"><a class="header-anchor" href="#_3-4-1-if" aria-hidden="true">#</a> 3.4.1 if</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&#39;Ok&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+m+`" alt="image-20221009103029925" tabindex="0" loading="lazy"><figcaption>image-20221009103029925</figcaption></figure><h4 id="_3-4-2-ifnull" tabindex="-1"><a class="header-anchor" href="#_3-4-2-ifnull" aria-hidden="true">#</a> 3.4.2 ifnull</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> ifnull<span class="token punctuation">(</span><span class="token string">&#39;Ok&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> ifnull<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> ifnull<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;Default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="image-20221009103008721" tabindex="0" loading="lazy"><figcaption>image-20221009103008721</figcaption></figure><h4 id="_3-4-3-case-when-then-else-end" tabindex="-1"><a class="header-anchor" href="#_3-4-3-case-when-then-else-end" aria-hidden="true">#</a> 3.4.3 case when then else end</h4><p>需求: 查询emp表的员工姓名和工作地址 (<code>北京/上海 ----&gt; 一线城市 , 其他 ----&gt; 二线城市</code>)</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> <span class="token string">&#39;员工姓名&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> <span class="token identifier"><span class="token punctuation">\`</span>workaddress<span class="token punctuation">\`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span> <span class="token string">&#39;北京&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;上海&#39;</span> <span class="token punctuation">)</span> <span class="token keyword">THEN</span> <span class="token string">&#39;一线城市&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;二线城市&#39;</span> <span class="token keyword">END</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;工作地址&#39;</span> 
<span class="token keyword">FROM</span>
	emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-4-案例" tabindex="-1"><a class="header-anchor" href="#_3-4-4-案例" aria-hidden="true">#</a> 3.4.4 案例:</h4><p>统计各科优秀，及格，与不及格的学员信息</p><p>分数大于等于85为优秀</p><p>大于等于60为及格</p><p>其余为不及格</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> score <span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span>
	name <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">20</span> <span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
	math <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span>
	english <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">,</span>
	chinese <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;语文&#39;</span> 
<span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学员成绩表&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token punctuation">(</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> math<span class="token punctuation">,</span> english<span class="token punctuation">,</span> chinese <span class="token punctuation">)</span>
<span class="token keyword">VALUES</span>
	<span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">95</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;Rose&#39;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">90</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">76</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的SQL语句如下:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> math <span class="token operator">&gt;=</span> <span class="token number">85</span> <span class="token keyword">THEN</span> <span class="token string">&#39;优秀&#39;</span> <span class="token keyword">WHEN</span> math <span class="token operator">&gt;=</span> <span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token string">&#39;及格&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;不及格&#39;</span> <span class="token keyword">END</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> english <span class="token operator">&gt;=</span> <span class="token number">85</span> <span class="token keyword">THEN</span> <span class="token string">&#39;优秀&#39;</span> <span class="token keyword">WHEN</span> english <span class="token operator">&gt;=</span> <span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token string">&#39;及格&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;不及格&#39;</span> <span class="token keyword">END</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> chinese <span class="token operator">&gt;=</span> <span class="token number">85</span> <span class="token keyword">THEN</span> <span class="token string">&#39;优秀&#39;</span> <span class="token keyword">WHEN</span> chinese <span class="token operator">&gt;=</span> <span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token string">&#39;及格&#39;</span> <span class="token keyword">ELSE</span> <span class="token string">&#39;不及格&#39;</span> <span class="token keyword">END</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;语文&#39;</span> 
<span class="token keyword">FROM</span>
	score<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MySQL的常见函数我们学习完了，那接下来，我们就来分析一下，在前面讲到的两个函数的案例场景， 思考一下需要用到什么样的函数来实现?</p><p>1). 数据库中，存储的是入职日期，如 2000-01-01，如何快速计算出入职天数呢？</p><p>答案: datediff</p><p>2). 数据库中，存储的是学生的分数值，如98、75，如何快速判定分数的等级呢？</p><p>答案: case ... when ...</p>`,106),y=[h];function f(w,q){return s(),a("div",null,y)}const x=n(b,[["render",f],["__file","03 MySQL函数.html.vue"]]);export{x as default};
