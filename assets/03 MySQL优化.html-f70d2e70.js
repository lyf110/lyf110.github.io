const e=JSON.parse(`{"key":"v-5fe99174","path":"/database/mysql/heima2022/plus/03%20MySQL%E4%BC%98%E5%8C%96.html","title":"三、MySQL-SQL优化","lang":"zh-CN","frontmatter":{"title":"三、MySQL-SQL优化","date":"2023-04-02T10:38:46.000Z","order":3,"category":["数据库","MySQL-SQL优化","MySQL"],"tag":["数据库","MySQL-SQL优化","MySQL"],"author":{"name":"liu yang fang","link":"https://github.com/lyf110"},"description":"3. SQL优化 3.1 插入数据 3.1.1 insert 如果我们需要一次性往数据库表中插入多条记录，可以从以下三个方面进行优化。 insert into tb_test values(1,'tom'); insert into tb_test values(2,'cat'); insert into tb_test values(3,'jerry'); .....","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/database/mysql/heima2022/plus/03%20MySQL%E4%BC%98%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"三、MySQL-SQL优化"}],["meta",{"property":"og:description","content":"3. SQL优化 3.1 插入数据 3.1.1 insert 如果我们需要一次性往数据库表中插入多条记录，可以从以下三个方面进行优化。 insert into tb_test values(1,'tom'); insert into tb_test values(2,'cat'); insert into tb_test values(3,'jerry'); ....."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"三、MySQL-SQL优化"}],["meta",{"property":"article:author","content":"liu yang fang"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"MySQL-SQL优化"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-04-02T10:38:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"三、MySQL-SQL优化\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-02T10:38:46.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liu yang fang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"3.1 插入数据","slug":"_3-1-插入数据","link":"#_3-1-插入数据","children":[{"level":3,"title":"3.1.1 insert","slug":"_3-1-1-insert","link":"#_3-1-1-insert","children":[]},{"level":3,"title":"3.1.2 大批量插入数据","slug":"_3-1-2-大批量插入数据","link":"#_3-1-2-大批量插入数据","children":[]}]},{"level":2,"title":"3.2 主键优化","slug":"_3-2-主键优化","link":"#_3-2-主键优化","children":[{"level":3,"title":"3.2.1 数据组织方式","slug":"_3-2-1-数据组织方式","link":"#_3-2-1-数据组织方式","children":[]},{"level":3,"title":"3.2.2 页分裂","slug":"_3-2-2-页分裂","link":"#_3-2-2-页分裂","children":[]},{"level":3,"title":"3.2.3 页合并","slug":"_3-2-3-页合并","link":"#_3-2-3-页合并","children":[]},{"level":3,"title":"3.2.4 索引设计原则","slug":"_3-2-4-索引设计原则","link":"#_3-2-4-索引设计原则","children":[]}]},{"level":2,"title":"3.3 order by优化","slug":"_3-3-order-by优化","link":"#_3-3-order-by优化","children":[{"level":3,"title":"3.3.1 数据准备","slug":"_3-3-1-数据准备","link":"#_3-3-1-数据准备","children":[]},{"level":3,"title":"3.3.2 执行排序SQL","slug":"_3-3-2-执行排序sql","link":"#_3-3-2-执行排序sql","children":[]},{"level":3,"title":"3.3.3 创建索引","slug":"_3-3-3-创建索引","link":"#_3-3-3-创建索引","children":[]},{"level":3,"title":"3.3.4 创建索引后，根据age, phone进行升序排序","slug":"_3-3-4-创建索引后-根据age-phone进行升序排序","link":"#_3-3-4-创建索引后-根据age-phone进行升序排序","children":[]},{"level":3,"title":"3.3.5 创建索引后，根据age, phone进行降序排序","slug":"_3-3-5-创建索引后-根据age-phone进行降序排序","link":"#_3-3-5-创建索引后-根据age-phone进行降序排序","children":[]},{"level":3,"title":"3.3.6 根据phone，age进行升序排序，phone在前，age在后。","slug":"_3-3-6-根据phone-age进行升序排序-phone在前-age在后。","link":"#_3-3-6-根据phone-age进行升序排序-phone在前-age在后。","children":[]},{"level":3,"title":"3.3.7 根据age, phone进行降序一个升序，一个降序","slug":"_3-3-7-根据age-phone进行降序一个升序-一个降序","link":"#_3-3-7-根据age-phone进行降序一个升序-一个降序","children":[]},{"level":3,"title":"3.3.8 创建联合索引(age 升序排序，phone 倒序排序)","slug":"_3-3-8-创建联合索引-age-升序排序-phone-倒序排序","link":"#_3-3-8-创建联合索引-age-升序排序-phone-倒序排序","children":[]},{"level":3,"title":"3.3.9 然后再次执行如下SQL","slug":"_3-3-9-然后再次执行如下sql","link":"#_3-3-9-然后再次执行如下sql","children":[]},{"level":3,"title":"3.3.10 order by 优化原则","slug":"_3-3-10-order-by-优化原则","link":"#_3-3-10-order-by-优化原则","children":[]}]},{"level":2,"title":"3.4 group by优化","slug":"_3-4-group-by优化","link":"#_3-4-group-by优化","children":[{"level":3,"title":"3.4.1 group by 优化总结","slug":"_3-4-1-group-by-优化总结","link":"#_3-4-1-group-by-优化总结","children":[]}]},{"level":2,"title":"3.5 limit优化","slug":"_3-5-limit优化","link":"#_3-5-limit优化","children":[]},{"level":2,"title":"3.6 count优化","slug":"_3-6-count优化","link":"#_3-6-count优化","children":[{"level":3,"title":"3.6.1 概述","slug":"_3-6-1-概述","link":"#_3-6-1-概述","children":[]},{"level":3,"title":"3.6.2 count用法","slug":"_3-6-2-count用法","link":"#_3-6-2-count用法","children":[]}]},{"level":2,"title":"3.7 update优化","slug":"_3-7-update优化","link":"#_3-7-update优化","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":12.54,"words":3762},"filePathRelative":"database/mysql/heima2022/plus/03 MySQL优化.md","localizedDate":"2023年4月2日","excerpt":"<h1> 3. SQL优化</h1>\\n<h2> 3.1 插入数据</h2>\\n<h3> 3.1.1 insert</h3>\\n<p>如果我们需要一次性往数据库表中插入多条记录，可以从以下三个方面进行优化。</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">insert</span> <span class=\\"token keyword\\">into</span> tb_test <span class=\\"token keyword\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'tom'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">insert</span> <span class=\\"token keyword\\">into</span> tb_test <span class=\\"token keyword\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'cat'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">insert</span> <span class=\\"token keyword\\">into</span> tb_test <span class=\\"token keyword\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'jerry'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}`);export{e as data};
