const e=JSON.parse('{"key":"v-c4ad0c04","path":"/project/tjxt/notes/day08-%E6%8E%92%E8%A1%8C%E6%A6%9C%E5%8A%9F%E8%83%BD.html","title":"day08-排行榜功能","lang":"zh-CN","frontmatter":{"title":"day08-排行榜功能","date":"2023-07-15T19:20:23.000Z","order":8,"category":["项目","天机学堂"],"tag":["项目","天机学堂"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"day08-排行榜功能 在昨天的学习中，我们实现了积分功能，并且也将用户的积分明细保存到了数据库。但是并没有形成排行榜。 那么排行榜该如何实现呢？ 是不是简单的SQL查询就可以形成榜单呢？ 今天我们就一起来分析一下。 1.实时排行榜 榜单分为两类： 实时榜单：也就是本赛季的榜单 历史榜单：也就是历史赛季的榜单 本节我们先分析一下实现实时榜单功能。 1.1.思路分析 目前，我们有一个积分记录明细表，结构如下：","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/project/tjxt/notes/day08-%E6%8E%92%E8%A1%8C%E6%A6%9C%E5%8A%9F%E8%83%BD.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"day08-排行榜功能"}],["meta",{"property":"og:description","content":"day08-排行榜功能 在昨天的学习中，我们实现了积分功能，并且也将用户的积分明细保存到了数据库。但是并没有形成排行榜。 那么排行榜该如何实现呢？ 是不是简单的SQL查询就可以形成榜单呢？ 今天我们就一起来分析一下。 1.实时排行榜 榜单分为两类： 实时榜单：也就是本赛季的榜单 历史榜单：也就是历史赛季的榜单 本节我们先分析一下实现实时榜单功能。 1.1.思路分析 目前，我们有一个积分记录明细表，结构如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"day08-排行榜功能"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"项目"}],["meta",{"property":"article:tag","content":"天机学堂"}],["meta",{"property":"article:published_time","content":"2023-07-15T19:20:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day08-排行榜功能\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-07-15T19:20:23.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"1.1.思路分析","slug":"_1-1-思路分析","link":"#_1-1-思路分析","children":[]},{"level":2,"title":"1.2.生成实时榜单","slug":"_1-2-生成实时榜单","link":"#_1-2-生成实时榜单","children":[{"level":3,"title":"1.2.1.定义Redis的KEY前缀","slug":"_1-2-1-定义redis的key前缀","link":"#_1-2-1-定义redis的key前缀","children":[]},{"level":3,"title":"1.2.2.更新积分到Redis","slug":"_1-2-2-更新积分到redis","link":"#_1-2-2-更新积分到redis","children":[]}]},{"level":2,"title":"1.3.查询积分榜","slug":"_1-3-查询积分榜","link":"#_1-3-查询积分榜","children":[{"level":3,"title":"1.3.1.分析和设计接口","slug":"_1-3-1-分析和设计接口","link":"#_1-3-1-分析和设计接口","children":[]},{"level":3,"title":"1.3.2.实体类","slug":"_1-3-2-实体类","link":"#_1-3-2-实体类","children":[]},{"level":3,"title":"1.3.3.实现接口","slug":"_1-3-3-实现接口","link":"#_1-3-3-实现接口","children":[]}]},{"level":2,"title":"2.1.海量数据存储策略","slug":"_2-1-海量数据存储策略","link":"#_2-1-海量数据存储策略","children":[{"level":3,"title":"2.1.1.分区","slug":"_2-1-1-分区","link":"#_2-1-1-分区","children":[]},{"level":3,"title":"2.1.2.分表","slug":"_2-1-2-分表","link":"#_2-1-2-分表","children":[]},{"level":3,"title":"2.1.3.分库和集群","slug":"_2-1-3-分库和集群","link":"#_2-1-3-分库和集群","children":[]}]},{"level":2,"title":"2.2.历史榜单的存储策略","slug":"_2-2-历史榜单的存储策略","link":"#_2-2-历史榜单的存储策略","children":[]},{"level":2,"title":"2.3.定时任务生成榜单表","slug":"_2-3-定时任务生成榜单表","link":"#_2-3-定时任务生成榜单表","children":[{"level":3,"title":"2.3.1.定时任务","slug":"_2-3-1-定时任务","link":"#_2-3-1-定时任务","children":[]},{"level":3,"title":"2.3.2.查询赛季id","slug":"_2-3-2-查询赛季id","link":"#_2-3-2-查询赛季id","children":[]},{"level":3,"title":"2.3.3.创建表","slug":"_2-3-3-创建表","link":"#_2-3-3-创建表","children":[]}]},{"level":2,"title":"2.4.分布式任务调度","slug":"_2-4-分布式任务调度","link":"#_2-4-分布式任务调度","children":[{"level":3,"title":"2.4.1.分布式任务调度原理","slug":"_2-4-1-分布式任务调度原理","link":"#_2-4-1-分布式任务调度原理","children":[]},{"level":3,"title":"2.4.2.分布式任务调度技术对比","slug":"_2-4-2-分布式任务调度技术对比","link":"#_2-4-2-分布式任务调度技术对比","children":[]},{"level":3,"title":"2.4.3.XXL-JOB介绍","slug":"_2-4-3-xxl-job介绍","link":"#_2-4-3-xxl-job介绍","children":[]},{"level":3,"title":"2.4.4.XXL-JOB定时创建榜单表","slug":"_2-4-4-xxl-job定时创建榜单表","link":"#_2-4-4-xxl-job定时创建榜单表","children":[]}]},{"level":2,"title":"2.4.榜单持久化","slug":"_2-4-榜单持久化","link":"#_2-4-榜单持久化","children":[{"level":3,"title":"2.4.1.动态表名","slug":"_2-4-1-动态表名","link":"#_2-4-1-动态表名","children":[]},{"level":3,"title":"2.4.2.定时持久化任务","slug":"_2-4-2-定时持久化任务","link":"#_2-4-2-定时持久化任务","children":[]},{"level":3,"title":"2.4.3.XXL-JOB任务分片","slug":"_2-4-3-xxl-job任务分片","link":"#_2-4-3-xxl-job任务分片","children":[]},{"level":3,"title":"2.4.4.清理Redis缓存任务","slug":"_2-4-4-清理redis缓存任务","link":"#_2-4-4-清理redis缓存任务","children":[]},{"level":3,"title":"2.4.5.任务链","slug":"_2-4-5-任务链","link":"#_2-4-5-任务链","children":[]}]},{"level":2,"title":"3.1.查询积分榜","slug":"_3-1-查询积分榜","link":"#_3-1-查询积分榜","children":[]},{"level":2,"title":"3.2.清理积分明细","slug":"_3-2-清理积分明细","link":"#_3-2-清理积分明细","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":41.04,"words":12312},"filePathRelative":"project/tjxt/notes/day08-排行榜功能.md","localizedDate":"2023年7月16日","excerpt":"<h1> day08-排行榜功能</h1>\\n<p>在昨天的学习中，我们实现了积分功能，并且也将用户的积分明细保存到了数据库。但是并没有形成排行榜。</p>\\n<p>那么排行榜该如何实现呢？</p>\\n<p>是不是简单的SQL查询就可以形成榜单呢？</p>\\n<p>今天我们就一起来分析一下。</p>\\n<h1> 1.实时排行榜</h1>\\n<p>榜单分为两类：</p>\\n<ul>\\n<li>实时榜单：也就是本赛季的榜单</li>\\n<li>历史榜单：也就是历史赛季的榜单</li>\\n</ul>\\n<p>本节我们先分析一下实现实时榜单功能。</p>\\n<h2> 1.1.思路分析</h2>\\n<p>目前，我们有一个积分记录明细表，结构如下：</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
