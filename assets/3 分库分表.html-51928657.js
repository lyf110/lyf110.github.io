const t=JSON.parse('{"key":"v-2d3de5ea","path":"/database/mysql/heima2022/op/3%20%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html","title":"三、MySQL分库分表","lang":"zh-CN","frontmatter":{"title":"三、MySQL分库分表","date":"2023-04-03T21:29:40.000Z","order":3,"author":{"name":"liu yang fang","link":"https://github.com/lyf110"},"category":["MySQL","分库分表"],"tag":["MySQL","分库分表"],"description":"3. 分库分表 3.1 介绍 3.1.1 问题分析 随着互联网及移动互联网的发展，应用系统的数据量也是成指数式增长，若采用单数据库进行数据存 储，存在以下性能瓶颈： 1、IO瓶颈：热点数据太多，数据库缓存不足，产生大量磁盘IO，效率较低。 请求数据太多，带宽不够，网络IO瓶颈。 2、CPU瓶颈：排序、分组、连接查询、聚合统计等SQL会耗费大量的CPU资源，请求数太多，CPU出现瓶颈。 为了解决上述问题，我们需要对数据库进行分库分表处理。","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/database/mysql/heima2022/op/3%20%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"三、MySQL分库分表"}],["meta",{"property":"og:description","content":"3. 分库分表 3.1 介绍 3.1.1 问题分析 随着互联网及移动互联网的发展，应用系统的数据量也是成指数式增长，若采用单数据库进行数据存 储，存在以下性能瓶颈： 1、IO瓶颈：热点数据太多，数据库缓存不足，产生大量磁盘IO，效率较低。 请求数据太多，带宽不够，网络IO瓶颈。 2、CPU瓶颈：排序、分组、连接查询、聚合统计等SQL会耗费大量的CPU资源，请求数太多，CPU出现瓶颈。 为了解决上述问题，我们需要对数据库进行分库分表处理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"三、MySQL分库分表"}],["meta",{"property":"article:author","content":"liu yang fang"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"分库分表"}],["meta",{"property":"article:published_time","content":"2023-04-03T21:29:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"三、MySQL分库分表\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-03T21:29:40.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liu yang fang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"3.1 介绍","slug":"_3-1-介绍","link":"#_3-1-介绍","children":[{"level":3,"title":"3.1.1 问题分析","slug":"_3-1-1-问题分析","link":"#_3-1-1-问题分析","children":[]},{"level":3,"title":"3.1.2 拆分策略","slug":"_3-1-2-拆分策略","link":"#_3-1-2-拆分策略","children":[]},{"level":3,"title":"3.1.3 垂直拆分","slug":"_3-1-3-垂直拆分","link":"#_3-1-3-垂直拆分","children":[]},{"level":3,"title":"3.1.4 水平拆分","slug":"_3-1-4-水平拆分","link":"#_3-1-4-水平拆分","children":[]},{"level":3,"title":"3.1.5 实现技术","slug":"_3-1-5-实现技术","link":"#_3-1-5-实现技术","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.66,"words":798},"filePathRelative":"database/mysql/heima2022/op/3 分库分表.md","localizedDate":"2023年4月4日","excerpt":"<h1> 3. 分库分表</h1>\\n<h2> 3.1 介绍</h2>\\n<h3> 3.1.1 问题分析</h3>\\n<figure><figcaption></figcaption></figure>\\n<p>随着互联网及移动互联网的发展，应用系统的数据量也是成指数式增长，若采用单数据库进行数据存 储，存在以下性能瓶颈：</p>\\n<p>1、IO瓶颈：热点数据太多，数据库缓存不足，产生大量磁盘IO，效率较低。 请求数据太多，带宽不够，网络IO瓶颈。</p>\\n<p>2、CPU瓶颈：排序、分组、连接查询、聚合统计等SQL会耗费大量的CPU资源，请求数太多，CPU出现瓶颈。</p>\\n<p>为了解决上述问题，我们需要对数据库进行分库分表处理。</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{t as data};
