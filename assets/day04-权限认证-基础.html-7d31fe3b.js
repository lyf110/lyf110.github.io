import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-5f6064b2.js";const i="/assets/image-20240407192427904-184-c5622b95.png",u="/assets/image-20240407192427905-185-f8e7a7b0.png",r="/assets/image-20240407192427905-186-3ed67a75.png",k="/assets/image-20240407192427905-187-e6cecd79.png",d="/assets/image-20240407192427905-188-1b3bb0bb.png",v="/assets/image-20240407192427905-189-713aad54.png",m="/assets/image-20240407192427905-190-7f624f41.png",b="/assets/image-20240407192427905-191-628f2769.png",g="/assets/image-20240407192427905-192-7e0945d7.png",q="/assets/image-20240407192427906-193-478786a3.png",y="/assets/image-20240407192427907-194-7bc9c17c.png",h="/assets/image-20240407192427905-189-713aad54.png",f="/assets/image-20240407192427907-196-791b09c9.png",_="/assets/image-20240407192427907-197-ab0c3c71.png",D="/assets/image-20240407192427907-198-ed146b10.png",w="/assets/image-20240407192427907-199-1dfa4792.png",T={},j=p('<h1 id="权限认证-基础" tabindex="-1"><a class="header-anchor" href="#权限认证-基础" aria-hidden="true">#</a> 权限认证-基础</h1><h2 id="_1-目标" tabindex="-1"><a class="header-anchor" href="#_1-目标" aria-hidden="true">#</a> 1 目标</h2><p>前几天，我们已经完成了项目中的一些基础功能的开发，接下来的三天，我们会讲解比较重要的一个大模块，权限。在后台管理系统中，几乎每个项目都会使用到权限认证，所以我们项目中会重点讲解这些内容，让大家掌握其核心原理，增加自己的核心竞争力。</p><p>我们今天主要开发的业务是权限相关的知识，主要就包含了以下几个内容：</p><ul><li>能够熟悉RBAC权限模型的整体业务流程及涉及到的表结构</li><li>能够独立完成部门管理的所有接口</li><li>能够独立完成岗位管理的所有接口</li><li>能够掌握SpringCache的特点，并且能够在项目中应用</li></ul><h2 id="_2-rbac模型" tabindex="-1"><a class="header-anchor" href="#_2-rbac模型" aria-hidden="true">#</a> 2 RBAC模型</h2><p>在企业系统中，通过配置用户的功能权限可以解决不同的人分管不同业务的需求，基于RBAC模型，RBAC（Role Based Access Control)模型，它的中文是基于角色的访问控制，主要是将功能组合成角色，再将角色分配给用户，也就是说<strong>角色是功能的合集</strong>。</p><p>比如：</p><p>企业A总共有12个功能，需要创建100个用户。这些用户包括财务管理、人事管理、销售管理等等。如果不引入基于角色的访问控制（RBAC）模型，我们就需要每创建一个用户就要分配一次功能，这将至少需要进行100次操作（每个用户只能拥有一个功能）。如果用户数量增加到1000甚至10000，并且一个用户可能会拥有多个功能，操作将会变得非常繁琐。如图：</p><figure><img src="'+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><pre><code>经过多次操作后发现，有些人被分配了相同的功能。例如，A、B等10个用户都被分配了客户管理、订单管理和供应商管理这几个模块。我们是否可以将这几个功能模块组合成一个包，然后将整个包分配给需要的用户呢？这个包被称为角色。由于角色和功能之间的对应关系相对稳定，在分配权限时只需分配角色即可，如下图所示：如图所示：
</code></pre><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>基于RBAC授权模式后，我们可以达到以下2个目标：</p><ul><li>解耦用户和功能，降低操作错误率</li><li>降低功能权限分配的繁琐程度</li></ul><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-1-权限系统运行演示" tabindex="-1"><a class="header-anchor" href="#_2-1-权限系统运行演示" aria-hidden="true">#</a> 2.1 权限系统运行演示</h3><p>我们可以通过运行权限系统，来理解RBAC。</p><h3 id="_2-2-er图与关系梳理" tabindex="-1"><a class="header-anchor" href="#_2-2-er图与关系梳理" aria-hidden="true">#</a> 2.2 ER图与关系梳理</h3><p>在一个核心业务系统中，我们通常通过业务分析，从而抽离出数据库表，表确定之后我们会进一步分析表中应该有的字段，下面我先看下业务ER图：</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上图中清楚的描述用户、角色、资源、职位、部门之间的关系，同时我们进一步推导出以下结果：</p><ul><li>用户与职位是N:1关系</li><li>用户与部门是N:1关系</li><li>用户与角色是N:N关系，则它们之间必然有一个中间表</li><li>角色与部门是N:N关系，则它们之间必然有一个中间</li><li>角色与资源是N:N关系，则它们之间必然有一个中间表</li></ul><p>下图就展示了权限认证涉及到的所有的表结构，共8张表</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>具体的表字段大家可以查看提供的数据库，我们在做业务的时候，会再次梳理这些表中的字段</p><h2 id="_3-部门管理" tabindex="-1"><a class="header-anchor" href="#_3-部门管理" aria-hidden="true">#</a> 3 部门管理</h2><p>我们先来完成部门管理这个模块，因为这个模块跟其他业务的耦合度相对较高，几乎权限所有的模块都要关联部门</p><p>我们再局部的说明一下部门跟其他业务的关系</p><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>三者之间的关系</p><ul><li>部门与用户是一对多的关系</li><li>岗位与用户是一对多的关系</li><li>部门与岗位是一对多的关系</li></ul><h3 id="_3-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_3-1-需求分析" aria-hidden="true">#</a> 3.1 需求分析</h3><p>我们可以原型图进行说明，这个是功能列表页</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li></li></ul><p>可以按照条件进行查询，由于一个公司的部门的数量是有限的，列表查询不需要分页</p><ul><li></li></ul><p>对于每一行都可以进行”删除”，”禁用”，”编辑”，”新增部门”</p><ul><li></li></ul><p>点击新增部门按钮，则会弹窗，如下图</p><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-表结构分析" tabindex="-1"><a class="header-anchor" href="#_3-2-表结构分析" aria-hidden="true">#</a> 3.2 表结构分析</h3><p>表名：sys_dept</p><p>字段说明：</p><table><thead><tr><th>字段</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>bigint</td><td>部门id</td></tr><tr><td>parent_dept_no</td><td>varchar(20)</td><td>父部门编号</td></tr><tr><td>dept_no</td><td>varchar(20)</td><td>部门编号</td></tr><tr><td>dept_name</td><td>varchar(30)</td><td>部门名称</td></tr><tr><td>sort_no</td><td>int</td><td>排序</td></tr><tr><td>data_state</td><td>char(1)</td><td>数据状态（0正常 1停用）</td></tr><tr><td>create_time</td><td>datetime</td><td>创建时间</td></tr><tr><td>update_time</td><td>datetime</td><td>更新时间</td></tr><tr><td>create_by</td><td>bigint</td><td>创建者</td></tr><tr><td>update_by</td><td>bigint</td><td>更新者</td></tr><tr><td>leader_id</td><td>bigint</td><td>负责人Id</td></tr><tr><td>remark</td><td>varchar(500)</td><td>备注</td></tr></tbody></table><p>表中parent_dept_no和dept_no是用于构建树形结构的基础，通过这2个字段定义资源的上下级关系，通常添加部门，我们通过程序自动生成编号，生成的编号满足以下规则:</p><ul><li>1级：100000000000000</li><li>2级：100001000000000</li><li>3级：100001001000000</li><li>4级：100001001001000</li><li>5级：100001001001001</li></ul><p>当我们在需要查询当前1级节点以下所有节点时，就不用再递归查询，使用like “dept_no%”即可。</p><blockquote><p>举个例子：</p></blockquote><blockquote><p>想要查询100001001000000下所有的部门，我们的查询方式为：</p></blockquote><blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></blockquote><p>select * from sys_dept where dept_no like &#39;100001001%&#39;</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
&gt; 这样就可以查询到100001001000000部门下所有的部门了


对应的实体类：

\`\`\`java
@Data
public class Dept extends BaseEntity {

    private static final long serialVersionUID = 1L;

    /**
     * 父部门编号
     */
    private String parentDeptNo;

    /**
     * 部门编号:
     */
    private String deptNo;

    /**
     * 部门名称
     */
    private String deptName;

    /**
     * 排序
     */
    private Integer sortNo;

    /**
     * 数据状态（0正常 1停用）
     */
    private String dataState;

    /**
     * 负责人Id
     */
    private Long leaderId;

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-接口分析" tabindex="-1"><a class="header-anchor" href="#_3-3-接口分析" aria-hidden="true">#</a> 3.3 接口分析</h3><p>依据我们刚才分析的部门的需求，在部门模块中共有5个接口，分别是：</p><ul><li>添加部门</li><li>修改部门</li><li>启用-禁用</li><li>部门列表</li><li>删除部门</li></ul><p>下面我们就来具体分析每个接口包含的四要素（路径、请求方式、入参、出参）</p><h4 id="_3-3-1-部门列表" tabindex="-1"><a class="header-anchor" href="#_3-3-1-部门列表" aria-hidden="true">#</a> 3.3.1 部门列表</h4><p><strong>接口地址</strong>:<code>/dept/list</code></p><p><strong>请求方式</strong>:<code>POST</code></p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//父部门编号</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//状态</span>
  <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token comment">//部门名称</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671445634122588250&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-09 16:00:13&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createDay&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-09&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;updateTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-08-25 20:21:56&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;updateBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519078006&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;大沙发的&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001000000000&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001030000000&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;静测试部&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;sortNo&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">4</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671445634122588247&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-07 18:18:59&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createDay&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-07&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;updateTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-28 17:19:19&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519078006&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;updateBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519078006&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001000000000&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001029000000&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;大管家&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;sortNo&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;leaderId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519078076&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;leaderName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你是是&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">4</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-08-27 11:25:01&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-2-部门树形结构接口" tabindex="-1"><a class="header-anchor" href="#_3-3-2-部门树形结构接口" aria-hidden="true">#</a> 3.3.2 部门树形结构接口</h4><p>由于是初始化部门的树形结构，这个接口需要在部门中去定义</p><p><strong>接口地址</strong>:<code>/dept/tree</code></p><p><strong>请求方式</strong>:<code>POST</code></p><p><strong>请求示例</strong>:</p><p>无</p><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;items&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001000000000&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;智慧养老院&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001001000000&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;院长办公室&quot;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001002000000&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;财务部&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001002001000&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;会计组&quot;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001002002000&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;结算组&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-3-部门添加" tabindex="-1"><a class="header-anchor" href="#_3-3-3-部门添加" aria-hidden="true">#</a> 3.3.3 部门添加</h4><p><strong>接口地址</strong>:<code>/dept</code></p><p><strong>请求方式</strong>:<code>PUT</code></p><p><strong>接口描述</strong>:<br> 部门添加</p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//部门状态</span>
  <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//部门名称</span>
  <span class="token string-property property">&quot;leaderId&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 部门负责人id</span>
  <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//上级部门编号</span>
  <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//部门说明</span>
  <span class="token string-property property">&quot;sortNo&quot;</span><span class="token operator">:</span> <span class="token number">0</span>   <span class="token comment">//排序</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-4-部门修改" tabindex="-1"><a class="header-anchor" href="#_3-3-4-部门修改" aria-hidden="true">#</a> 3.3.4 部门修改</h4><p><strong>接口地址</strong>:<code>/dept</code></p><p><strong>请求方式</strong>:<code>PATCH</code></p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//部门状态</span>
  <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//部门名称</span>
  <span class="token string-property property">&quot;leaderId&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 部门负责人id</span>
  <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//上级部门编号</span>
  <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//部门说明</span>
  <span class="token string-property property">&quot;sortNo&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token comment">//排序</span>
  <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">1671445634122588232</span>   <span class="token comment">// 主键</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-5-启用-禁用" tabindex="-1"><a class="header-anchor" href="#_3-3-5-启用-禁用" aria-hidden="true">#</a> 3.3.5 启用-禁用</h4><p><strong>接口地址</strong>:<code>/dept/is_enable</code></p><p><strong>请求方式</strong>:<code>PATCH</code></p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//状态</span>
  <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1671445634122588232</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-6-删除部门" tabindex="-1"><a class="header-anchor" href="#_3-3-6-删除部门" aria-hidden="true">#</a> 3.3.6 删除部门</h4><p><strong>接口地址</strong>:<code>/dept/{deptId}</code></p><p><strong>请求方式</strong>:<code>DELETE</code></p><p><strong>请求参数</strong>:</p><table><thead><tr><th>参数名称</th><th>参数说明</th><th>请求类型</th><th>数据类型</th></tr></thead><tbody><tr><td>deptId</td><td>部门id</td><td>path(路径上的参数)</td><td>string</td></tr></tbody></table><p><strong>响应示例</strong>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-功能实现" tabindex="-1"><a class="header-anchor" href="#_3-4-功能实现" aria-hidden="true">#</a> 3.4 功能实现</h3><p>下面，我们就依据我们刚才分析的接口来完成具体的功能，由于这些也都是增删改查的代码，我们在课堂上一起来写一些比较有代表的功能，剩下的接口需要大家自己实现</p><p>我们课堂上的需要实现的接口有：</p><ul><li></li></ul><p>部门列表    需要有上下级的关系，按照父部门编号查询子部门列表</p><ul><li></li></ul><p>部门树形   在新增或是后边的岗位查询都需要展示部门的属性结构，查询没有条件，把所有数据组装成树形结构</p><ul><li></li></ul><p>部门添加    需要设计部门编号，讲解一种通用的编号生成方案</p><p>需要大家自己实现的接口：</p><ul><li>部门修改</li><li>启用-禁用</li><li>部门删除</li></ul><h4 id="_3-4-1-权限模块环境说明" tabindex="-1"><a class="header-anchor" href="#_3-4-1-权限模块环境说明" aria-hidden="true">#</a> 3.4.1 权限模块环境说明</h4><p>权限模块是比较通用的模块，在很多项目中都会存在，它具有独立性，所以我们可以把它单独使用一个工程模块来管理。</p><p>在zzyl父工程中使用zzyl-security模块，如下图</p><figure><img src="`+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-4-2-部门列表" tabindex="-1"><a class="header-anchor" href="#_3-4-2-部门列表" aria-hidden="true">#</a> 3.4.2 部门列表</h4><p>这个部门列表不需要分页，依据我们刚才的接口分析，我们直接来编码</p><p>1)定义接口</p><p>新增类DeptController中定义新的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> sjqn
 */</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/dept&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;部门管理&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeptController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;部门列表&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;deptDto&quot;</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">&quot;部门DTO对象&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>dataType <span class="token operator">=</span> <span class="token string">&quot;DeptDto&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperationSupport</span><span class="token punctuation">(</span>
            includeParameters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;deptDto.dataState&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;deptDto.deptName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;deptDto.parentDeptNo&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">deptList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span><span class="token punctuation">{</span>
       
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>其中的ApiOperationSupport是可以在swagger接口文档中说明参数包含了哪些字段，比如你定义的dto是10个字段，但是当前接口只需要6个字段，就可以把这6个字段声明出来，这样做的好处就是dto可以在多个接口中复用</p></blockquote><p>2)持久层mapper</p><p>在DeptMapper中新增方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>mapper</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> sjqn
 */</span>
<span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptMapper</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 查询列表
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的xml映射文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.zzyl.mapper.DeptMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.zzyl.entity.Dept<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent_dept_no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentDeptNo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dept_no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptNo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dept_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptName<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sort_no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INTEGER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sortNo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data_state<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataState<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create_time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TIMESTAMP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createTime<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update_time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TIMESTAMP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateTime<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create_by<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update_by<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateBy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leader_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leaderId<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leader_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leaderName<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultVoMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.zzyl.vo.DeptVo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent_dept_no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentDeptNo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dept_no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptNo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dept_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptName<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sort_no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INTEGER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sortNo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data_state<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataState<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create_time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TIMESTAMP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createTime<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update_time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TIMESTAMP<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateTime<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create_by<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update_by<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateBy<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leader_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leaderId<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>role_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roleId<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create_day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createDay<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Base_Column_List<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        id
        , parent_dept_no, dept_no, dept_name, sort_no, data_state, create_time, update_time,
    create_by, update_by, remark, leader_id
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">&gt;</span></span>
   
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.zzyl.dto.DeptDto<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultVoMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select
        d.id, d.parent_dept_no, d.dept_no, d.dept_name, d.sort_no, d.data_state, d.create_time, d.update_time,
        d.create_by, d.update_by, d.remark, d.leader_id
        , u.real_name as leader_name,DATE_FORMAT(d.create_time,&#39;%Y-%m-%d&#39;) as create_day
        from sys_dept d
        left join sys_user u on u.id = leader_id
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>where</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptName!=null and deptName!=&#39;&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                and d.dept_name like concat(&#39;%&#39;,#{deptName},&#39;%&#39;)
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentDeptNo!=null and parentDeptNo!=&#39;&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                and d.parent_dept_no like concat(#{parentDeptNo},&#39;%&#39;)
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataState!=null and dataState!=&#39;&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                and d.data_state=#{dataState}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>where</span><span class="token punctuation">&gt;</span></span>
        order by d.sort_no asc, d.create_time desc
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于在部门列表的展示中，需要展示部门的负责人，所以关联了sys_user用户表来查询负责人姓名，虽然现在我们还没有开发用户模块，但是用户表已经有了，在这里可以进行关联查询</p><ul><li><p>在sys_dept表和实体类中并没有一个叫做leader_name的字段，我们需要扩展一下，只需要在Dept实体类中新增一个leaderName字段即可，并且把对应的xml映射文件中的BaseResultVoMap中定义这个字段</p></li><li><p>在返回的日期中，前端要求返回的是创建的天，比如是：2023-10-31，我们需要使用mysql的日期函数单独处理</p><ul><li><p>格式化</p><ul><li><code>select DATE_FORMAT(new(),&#39;%Y-%m-%d %H:%i:%s&#39;)---&gt;返回字符串：2023-10-31 01:21:00</code></li><li><code>select str_to_DATE(&#39;2023-10-31 01:21:00&#39;,&#39;%Y-%m-%d %H:%i:%s&#39;)---&gt;返回日期类型</code></li></ul></li></ul></li></ul><p>3)业务层</p><p>在DeptService中定义新的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> sjqn
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 多条件查询部门
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">deptList</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> sjqn
 * <span class="token keyword">@date</span> 2023/10/30
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeptServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">DeptService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">DeptMapper</span> deptMapper<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 多条件查询部门
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">deptList</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> deptMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4)控制层代码补全</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @Description：部门前端控制器
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;部门管理&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;dept&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeptController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">DeptService</span> deptService<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/***
     * <span class="token keyword">@description</span> 多条件查询部门列表
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span> 部门DTO对象
     * <span class="token keyword">@return</span> List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DeptVo</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;部门列表&quot;</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">&quot;部门列表&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;deptDto&quot;</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">&quot;部门DTO对象&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>dataType <span class="token operator">=</span> <span class="token string">&quot;DeptDto&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperationSupport</span><span class="token punctuation">(</span>includeParameters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;deptDto.dataState&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;deptDto.deptName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;deptDto.parentDeptNo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">deptList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> deptVoList <span class="token operator">=</span> deptService<span class="token punctuation">.</span><span class="token function">findDeptList</span><span class="token punctuation">(</span>deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>deptVoList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5)测试</p><p>同样打开前端项目进行测试</p><h4 id="_3-4-2-部门树形结构" tabindex="-1"><a class="header-anchor" href="#_3-4-2-部门树形结构" aria-hidden="true">#</a> 3.4.2 部门树形结构</h4><ol><li>定义接口</li></ol><p>在DeptController中定义新的方法，如下代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/tree&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;部门树形&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResponseResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">deptTreeVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值中的treeVo需要单独定义，代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>vo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModelProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Builder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 资源树显示类
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeVo</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;tree数据&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> items<span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Builder</span>
	<span class="token keyword">public</span> <span class="token class-name">TreeVo</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> items<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TreeItemVo</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>vo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModelProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Builder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description：资源树结构体
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeItemVo</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;节点ID&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;显示内容&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> label<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;显示内容&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Builder</span>
    <span class="token keyword">public</span> <span class="token class-name">TreeItemVo</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> label<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>label <span class="token operator">=</span> label<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> children<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2)持久层mapper</p><p>无，使用之前查询的列表</p><p>3)业务层</p><p>在DeptService中新增方法，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 组织部门树形
 * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span> 根节点
 * <span class="token keyword">@return</span>: deptDto
 */</span>
<span class="token keyword">public</span> <span class="token class-name">TreeVo</span> <span class="token function">deptTreeVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>递归基本思路</p><figure><img src="`+q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>代码逻辑：</p><figure><img src="'+y+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>实现类中的方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 组织部门树形
     * <span class="token keyword">@return</span>
     */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">TreeVo</span> <span class="token function">deptTreeVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//获取根节点树形</span>
    <span class="token class-name">String</span> parentDeptNo <span class="token operator">=</span> <span class="token class-name">SuperConstant</span><span class="token punctuation">.</span><span class="token constant">ROOT_DEPT_PARENT_ID</span><span class="token punctuation">;</span>

    <span class="token comment">//构建查询条件</span>
    <span class="token class-name">DeptDto</span> param <span class="token operator">=</span> <span class="token class-name">DeptDto</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">dataState</span><span class="token punctuation">(</span><span class="token class-name">SuperConstant</span><span class="token punctuation">.</span><span class="token constant">DATA_STATE_0</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">parentDeptNo</span><span class="token punctuation">(</span><span class="token class-name">NoProcessing</span><span class="token punctuation">.</span><span class="token function">processString</span><span class="token punctuation">(</span>parentDeptNo<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//查询部门列表数据</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> deptList <span class="token operator">=</span>  deptMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span>deptList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BaseException</span><span class="token punctuation">(</span><span class="token string">&quot;部门数据没有定义&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//找根节点</span>
    <span class="token class-name">DeptVo</span> rootDept <span class="token operator">=</span> deptList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>d <span class="token operator">-&gt;</span> <span class="token class-name">SuperConstant</span><span class="token punctuation">.</span><span class="token constant">ROOT_DEPT_PARENT_ID</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getParentDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//返回的部门数据</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> treeItemVoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//递归调用</span>
    <span class="token function">recursionTreeItem</span><span class="token punctuation">(</span>treeItemVoList<span class="token punctuation">,</span>rootDept<span class="token punctuation">,</span>deptList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name">TreeVo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">items</span><span class="token punctuation">(</span>treeItemVoList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
     * 递归调用拼装数据
     * <span class="token keyword">@param</span> <span class="token parameter">treeItemVoList</span>  封装返回的数据
     * <span class="token keyword">@param</span> <span class="token parameter">rootDept</span>  当前部门
     * <span class="token keyword">@param</span> <span class="token parameter">deptList</span>  部门列表（全部数据）
     */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">recursionTreeItem</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> treeItemVoList<span class="token punctuation">,</span> <span class="token class-name">DeptVo</span> rootDept<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> deptList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//构建item对象</span>
    <span class="token class-name">TreeItemVo</span> treeItemVo <span class="token operator">=</span> <span class="token class-name">TreeItemVo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>rootDept<span class="token punctuation">.</span><span class="token function">getDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span>rootDept<span class="token punctuation">.</span><span class="token function">getDeptName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获得当前部门下的子部门</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> childrenDept <span class="token operator">=</span> deptList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> n<span class="token punctuation">.</span><span class="token function">getParentDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rootDept<span class="token punctuation">.</span><span class="token function">getDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//如果子部门不为空，则继续递归调用</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span>childrenDept<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeItemVo</span><span class="token punctuation">&gt;</span></span> listChildren <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//子部门列表</span>
        childrenDept<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>dept <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">recursionTreeItem</span><span class="token punctuation">(</span>listChildren<span class="token punctuation">,</span>dept<span class="token punctuation">,</span>deptList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        treeItemVo<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>listChildren<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    treeItemVoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>treeItemVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4)控制层</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/tree&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;部门树形&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResponseResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">deptTreeVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">TreeVo</span> treeVo <span class="token operator">=</span> deptService<span class="token punctuation">.</span><span class="token function">deptTreeVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>treeVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5)测试</p><p>启动前端项目，然后在岗位模块中查看左侧的部门树是否成功展示</p><h4 id="_3-4-4-部门添加" tabindex="-1"><a class="header-anchor" href="#_3-4-4-部门添加" aria-hidden="true">#</a> 3.4.4 部门添加</h4><p>依据我们分析的接口，我们还是按照步骤 进行开发</p><p>1)定义接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PutMapping</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;部门添加&quot;</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">&quot;部门添加&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;deptDto&quot;</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">&quot;部门DTO对象&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>dataType <span class="token operator">=</span> <span class="token string">&quot;DeptDto&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperationSupport</span><span class="token punctuation">(</span>includeParameters <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;deptDto.dataState&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.deptName&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.leaderId&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.remark&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.sortNo&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.parentDeptNo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResponseResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">createDept</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2)持久层mapper</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptMapper</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Dept</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DeptMapper.xml映射文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>insert<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.zzyl.entity.Dept<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selectKey</span> <span class="token attr-name">keyProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">order</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AFTER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.lang.Long<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
         SELECT LAST_INSERT_ID()
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selectKey</span><span class="token punctuation">&gt;</span></span>
     insert into sys_dept
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffixOverrides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentDeptNo != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             parent_dept_no,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptNo != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             dept_no,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptName != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             dept_name,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sortNo != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             sort_no,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataState != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             data_state,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createTime != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             create_time,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateTime != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             update_time,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBy != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             create_by,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateBy != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             update_by,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leaderId != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             leader_id,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>remark != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             remark,
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>values (<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffixOverrides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentDeptNo != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{parentDeptNo,jdbcType=VARCHAR},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptNo != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{deptNo,jdbcType=VARCHAR},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptName != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{deptName,jdbcType=VARCHAR},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sortNo != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{sortNo,jdbcType=INTEGER},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataState != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{dataState,jdbcType=CHAR},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createTime != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{createTime,jdbcType=TIMESTAMP},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateTime != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{updateTime,jdbcType=TIMESTAMP},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBy != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{createBy,jdbcType=BIGINT},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateBy != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{updateBy,jdbcType=BIGINT},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leaderId != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{leaderId,jdbcType=BIGINT},
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>remark != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             #{remark,jdbcType=VARCHAR}
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3)业务层</p><p>DeptService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @Description：部门表服务类
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * @Description 创建部门表
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span> 对象信息
     * <span class="token keyword">@return</span> DeptVo
     */</span>
    <span class="token class-name">Boolean</span> <span class="token function">createDept</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 添加部门
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span>
     */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createDept</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">Dept</span> dept <span class="token operator">=</span> <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">toBean</span><span class="token punctuation">(</span>deptDto<span class="token punctuation">,</span> <span class="token class-name">Dept</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//根据父部门编号，构建部门编号</span>
    <span class="token class-name">String</span> deptNo <span class="token operator">=</span> <span class="token function">createDeptNo</span><span class="token punctuation">(</span>deptDto<span class="token punctuation">.</span><span class="token function">getParentDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dept<span class="token punctuation">.</span><span class="token function">setDeptNo</span><span class="token punctuation">(</span>deptNo<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//保存</span>
    <span class="token keyword">int</span> flag <span class="token operator">=</span> deptMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BaseException</span><span class="token punctuation">(</span><span class="token string">&quot;保存部门失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
     * 构建部门编号
     * <span class="token keyword">@param</span> <span class="token parameter">parentDeptNo</span>
     * <span class="token keyword">@return</span>
     */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">createDeptNo</span><span class="token punctuation">(</span><span class="token class-name">String</span> parentDeptNo<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//部门层级不能超过4级</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">NoProcessing</span><span class="token punctuation">.</span><span class="token function">processString</span><span class="token punctuation">(</span>parentDeptNo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BaseException</span><span class="token punctuation">(</span><span class="token string">&quot;部门创建不能超过4级&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//构建部门编号，有两种情况，当前父部门编号，有子部门：在已有的子部门的基础上累加  |  没有子部门：新增子部门编号</span>
    <span class="token class-name">DeptDto</span> deptDto <span class="token operator">=</span> <span class="token class-name">DeptDto</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parentDeptNo</span><span class="token punctuation">(</span>parentDeptNo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> deptVoList <span class="token operator">=</span> deptMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//无下属节点则创建下属节点</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span>deptVoList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">NoProcessing</span><span class="token punctuation">.</span><span class="token function">createNo</span><span class="token punctuation">(</span>parentDeptNo<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//有下属节点则累加下属节点</span>
        <span class="token class-name">Long</span> deptNo <span class="token operator">=</span> deptVoList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>dept <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>dept<span class="token punctuation">.</span><span class="token function">getDeptNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">NoProcessing</span><span class="token punctuation">.</span><span class="token function">createNo</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>deptNo<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4)控制层</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PutMapping</span>
<span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;部门添加&quot;</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">&quot;部门添加&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;deptDto&quot;</span><span class="token punctuation">,</span>value <span class="token operator">=</span> <span class="token string">&quot;部门DTO对象&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>dataType <span class="token operator">=</span> <span class="token string">&quot;DeptDto&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiOperationSupport</span><span class="token punctuation">(</span>includeParameters <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;deptDto.dataState&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.deptName&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.leaderId&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.remark&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.sortNo&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;deptDto.parentDeptNo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResponseResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">createDept</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">.</span>successdeptService<span class="token punctuation">.</span><span class="token function">createDept</span><span class="token punctuation">(</span>deptDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5)测试</p><p>权限后面的前端代码不需要大家编写，大家可以直接启动前端项目来测试功能</p><h2 id="_4-岗位管理" tabindex="-1"><a class="header-anchor" href="#_4-岗位管理" aria-hidden="true">#</a> 4 岗位管理</h2><p>我们再来回顾一下刚才的表关系，大家还是看这个图</p><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>部门和岗位的关系是一对多</p><h3 id="_4-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_4-1-需求分析" aria-hidden="true">#</a> 4.1 需求分析</h3><p>我们先来看岗位中的第一个页面</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这个页面中包含了两部分内容，第一个是左侧的部门结构树，第二个是岗位列表</p><p>并且是这个页面中也包含了很多的按钮，分别是：”新增职位”、”删除”、”禁用”、”编辑”</p><p>当我们点击了&quot;新增岗位&quot;按钮之后，会弹窗提示，如下效果</p><figure><img src="'+_+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>首先选中了一个部门，然后点击&quot;新增职位&quot;按钮，在弹窗之后，会自动回显选择的部门（置灰不可改）</p><h3 id="_4-2-表结构分析" tabindex="-1"><a class="header-anchor" href="#_4-2-表结构分析" aria-hidden="true">#</a> 4.2 表结构分析</h3><p>表名：sys_post</p><p>字段说明：</p><table><thead><tr><th>字段</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>bigint</td><td>岗位id</td></tr><tr><td>dept_no</td><td>varchar(20)</td><td>部门编号</td></tr><tr><td>post_no</td><td>varchar(20)</td><td>岗位编码：父部门编号+01【2位】</td></tr><tr><td>post_name</td><td>varchar(50)</td><td>岗位名称</td></tr><tr><td>sort_no</td><td>int</td><td>排序</td></tr><tr><td>data_state</td><td>char(1)</td><td>数据状态（0正常 1停用）</td></tr><tr><td>create_time</td><td>datetime</td><td>创建时间</td></tr><tr><td>update_time</td><td>datetime</td><td>更新时间</td></tr><tr><td>create_by</td><td>bigint</td><td>创建者</td></tr><tr><td>update_by</td><td>bigint</td><td>更新者</td></tr><tr><td>remark</td><td>varchar(500)</td><td>备注</td></tr></tbody></table><p>对应实体类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Post</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 部门编号
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> deptNo<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 岗位编码：父部门编号+01【2位】
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> postNo<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 岗位名称
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> postName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 显示顺序
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> sortNo<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 数据状态（0正常 1停用）
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> dataState<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-接口分析" tabindex="-1"><a class="header-anchor" href="#_4-3-接口分析" aria-hidden="true">#</a> 4.3 接口分析</h3><p>依据刚才的需求分析，岗位接口如下：</p><ul><li>岗位列表查询</li><li>岗位添加</li><li>岗位修改</li><li>岗位删除</li></ul><h4 id="_4-3-1-岗位添加" tabindex="-1"><a class="header-anchor" href="#_4-3-1-岗位添加" aria-hidden="true">#</a> 4.3.1 岗位添加</h4><p><strong>接口地址</strong>:<code>/post</code></p><p><strong>请求方式</strong>:<code>PUT</code></p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//部门编号</span>
  <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//备注</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//是否启用(0:启用,1:禁用)</span>
  <span class="token string-property property">&quot;postName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token comment">//岗位名称</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-2-岗位修改" tabindex="-1"><a class="header-anchor" href="#_4-3-2-岗位修改" aria-hidden="true">#</a> 4.3.2 岗位修改</h4><p>其中的”编辑”、”启用”、”禁用” 三个按钮共用这个接口</p><p><strong>接口地址</strong>:<code>/post</code></p><p><strong>请求方式</strong>:<code>PATCH</code></p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment">//主键</span>
  <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//部门编号</span>
  <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//备注</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//是否启用(0:启用,1:禁用)</span>
  <span class="token string-property property">&quot;postName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token comment">//岗位名称</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-3-岗位分页" tabindex="-1"><a class="header-anchor" href="#_4-3-3-岗位分页" aria-hidden="true">#</a> 4.3.3 岗位分页</h4><p><strong>接口地址</strong>:<code>/post/page/{pageNum}/{pageSize}</code></p><p><strong>请求方式</strong>:<code>POST</code></p><p><strong>请求示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//部门编号</span>
  <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token comment">//岗位状态</span>
  <span class="token string-property property">&quot;postName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token comment">//岗位名称</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;pageSize&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;page&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;records&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671446178337726569&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-11 10:30:25&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;createDay&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-11&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;createBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519078006&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001005000000&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;postNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001005002000&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;postName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;财务主管&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;deptVo&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671445634122588164&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-22 11:42:36&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;updateTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-30 09:14:16&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;createBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671362878457892866&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;updateBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;啊实打实打阿萨德阿萨德按时&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001000000000&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001005000000&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;财务部&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;sortNo&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;leaderId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519077890&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">4</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671446178337726568&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-11 10:30:14&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;createDay&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-07-11&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;createBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519078006&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001005000000&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;postNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001005001000&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;postName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;结算员&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;deptVo&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671445634122588164&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-22 11:42:36&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;updateTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-30 09:14:16&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;createBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671362878457892866&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;updateBy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;dataState&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;啊实打实打阿萨德阿萨德按时&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;parentDeptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001000000000&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;deptNo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001005000000&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;deptName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;财务部&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;sortNo&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;leaderId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1671403256519077890&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">4</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-08-27 02:53:24&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-4-删除岗位" tabindex="-1"><a class="header-anchor" href="#_4-3-4-删除岗位" aria-hidden="true">#</a> 4.3.4 删除岗位</h4><p><strong>接口地址</strong>:<code>/post/{postIds}</code></p><p><strong>请求方式</strong>:<code>DELETE</code></p><p><strong>请求参数</strong>:</p><table><thead><tr><th>参数名称</th><th>参数说明</th><th>请求类型</th><th>是否必须</th><th>数据类型</th><th>schema</th></tr></thead><tbody><tr><td>postIds</td><td>postIds</td><td>path</td><td>true</td><td>string</td><td></td></tr></tbody></table><p><strong>响应示例</strong>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-功能实现" tabindex="-1"><a class="header-anchor" href="#_4-4-功能实现" aria-hidden="true">#</a> 4.4 功能实现</h3><p>基于我们刚才分析的接口，有两部分，第一就是部门的树形结构，第二个是关于岗位的</p><p>我们在课堂上一起来实现部门的树形结构这个接口</p><p>关于岗位管理的接口，基于大家的经验来看，如果大家能够独立完成前几天和今天上午的作业代码，那么对于岗位模块的所有接口，大家也一定能够胜任，所以，关于岗位的所有的接口的开发工作全部当做今天的作业</p><h2 id="_5-spring-cache" tabindex="-1"><a class="header-anchor" href="#_5-spring-cache" aria-hidden="true">#</a> 5 Spring Cache</h2><p>在我们查询部门数据的时候，特别是树形结构，要把所有的属性结构数据都展示出来，这个是会对数据库的访问造成一定的压力，并且从数据库查询效率也不是很高，所以我们通常都会添加缓存来提升效率</p><p>添加<strong>缓存</strong>的基本逻辑：</p><figure><img src="`+D+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>关于缓存的添加，我们可以直接使用redis来管理缓存，不过一般企业开发中，我们更多的是使用统一管理缓存的框架来实现，主要是更加的低耦合，并且切换缓存的成本的很低</p><h3 id="_5-1-介绍" tabindex="-1"><a class="header-anchor" href="#_5-1-介绍" aria-hidden="true">#</a> 5.1 介绍</h3><p>Spring Cache 是一个框架，实现了基于注解的缓存功能，只需要简单地加一个注解，就能实现缓存功能。</p><p>Spring Cache 提供了一层抽象，底层可以切换不同的缓存实现，例如：</p><ul><li>EHCache</li><li>Caffeine</li><li>Redis(常用)</li></ul><h3 id="_5-2-常用注解" tabindex="-1"><a class="header-anchor" href="#_5-2-常用注解" aria-hidden="true">#</a> 5.2 常用注解</h3><p>在SpringCache中提供了很多缓存操作的注解，常见的是以下几个：</p><table><thead><tr><th><strong>注解</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><a href="/EnableCaching">@EnableCaching </a></td><td>开启缓存注解功能，通常加在启动类上</td></tr><tr><td><a href="/Cacheable">@Cacheable </a></td><td>在方法执行前先查询缓存中是否有数据，如果有数据，则直接返回缓存数据；如果没有缓存数据，调用方法并将方法返回值放到缓存中</td></tr><tr><td><a href="/CachePut">@CachePut </a></td><td>将方法的返回值放到缓存中</td></tr><tr><td><a href="/CacheEvict">@CacheEvict </a></td><td>将一条或多条数据从缓存中删除</td></tr><tr><td><a href="/Caching">@Caching </a></td><td>缓存的结合体，可以组合以上注解在一个方法中使用，比如有新增，有删除</td></tr></tbody></table><p>在spring boot项目中，使用缓存技术只需在项目中导入相关缓存技术的依赖包，并在启动类上使用@EnableCaching开启缓存支持即可。</p><p>例如，使用Redis作为缓存技术，只需要导入Spring data Redis的maven坐标即可。</p><h3 id="_5-3-入门案例" tabindex="-1"><a class="header-anchor" href="#_5-3-入门案例" aria-hidden="true">#</a> 5.3 入门案例</h3><h4 id="_5-3-1-环境准备" tabindex="-1"><a class="header-anchor" href="#_5-3-1-环境准备" aria-hidden="true">#</a> 5.3.1 环境准备</h4><p>**导入基础工程:**底层已使用Redis缓存实现</p><p>基础环境的代码，在我们今天的资料中已经准备好了， 大家只需要将这个工程导入进来就可以了。导入进来的工程结构如下：</p><figure><img src="'+w+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>数据库准备:</strong></p><p>创建名为cache_db数据库，执行以下sql脚本来创建用户表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token string">&quot;user&quot;</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;id&quot;</span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token string">&quot;name&quot;</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token string">&quot;age&quot;</span> <span class="token keyword">int</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">3</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_0900_ai_ci<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引导类上加<code>@EnableCaching</code>用于开启缓存</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableCaching</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableCaching</span><span class="token comment">//开启缓存注解功能</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CacheDemoApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CacheDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;项目启动成功...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-2-cacheput注解" tabindex="-1"><a class="header-anchor" href="#_5-3-2-cacheput注解" aria-hidden="true">#</a> 5.3.2 @CachePut注解</h4><p>**<a href="/CachePut">@CachePut </a> 说明： **</p><ul><li></li></ul><p>作用: 将方法返回值，放入缓存</p><ul><li></li></ul><p>value: 缓存的名称, 每个缓存名称下面可以有很多key</p><ul><li></li></ul><p>key: 缓存的key  ----------&gt; 支持Spring的表达式语言SPEL语法</p><p>**在save方法上加注解<a href="/CachePut">@CachePut </a> **</p><p>当前UserController的save方法是用来保存用户信息的，我们希望在该用户信息保存到数据库的同时，也往缓存中缓存一份数据，我们可以在save方法上添加注解 <code>@CachePut</code>，用法如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	* CachePut：将方法返回值放入缓存
	* value：缓存的名称，每个缓存名称下面可以有多个key
	* key：缓存的key
	*/</span>
	<span class="token annotation punctuation">@PostMapping</span>
    <span class="token annotation punctuation">@CachePut</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token string">&quot;#user.id&quot;</span><span class="token punctuation">)</span><span class="token comment">//key的生成：userCache::1</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">{</span>
        userMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> user<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**说明：**key的写法如下</p><ul><li></li></ul>`,269),N={href:"http://user.id",target:"_blank",rel:"noopener noreferrer"},C=n("ul",null,[n("li")],-1),x={href:"http://result.id",target:"_blank",rel:"noopener noreferrer"},I=n("ul",null,[n("li")],-1),S={href:"http://p0.id",target:"_blank",rel:"noopener noreferrer"},A=n("ul",null,[n("li")],-1),E={href:"http://a0.id",target:"_blank",rel:"noopener noreferrer"},L=p(`<ul><li></li></ul><p>#root.args[0].id:#root.args[0]指的是方法中的第一个参数，id指的是第一个参数的id属性,也就是使用第一个参数的id属性作为key ;</p><p><strong>启动服务,通过swagger接口文档测试，访问UserController的save()方法</strong></p><p>因为id是自增，所以不需要设置id属性</p><p>我们现在分别查看用户表和缓存中的数据，如果都能保存，则说明集成成功</p><h4 id="_5-3-3-cacheable注解" tabindex="-1"><a class="header-anchor" href="#_5-3-3-cacheable注解" aria-hidden="true">#</a> 5.3.3 @Cacheable注解</h4><p>作用: 在方法执行前，spring先查看缓存中是否有数据，如果有数据，则直接返回缓存数据；若没有数据，调用方法并将方法返回值放到缓存中</p><ul><li></li></ul><p>value: 缓存的名称，每个缓存名称下面可以有多个key</p><ul><li></li></ul><p>key: 缓存的key  ----------&gt; 支持Spring的表达式语言SPEL语法</p><p>在UserController上找到getById，添加注解<code>@Cacheable</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	* Cacheable：在方法执行前spring先查看缓存中是否有数据，如果有数据，则直接返回缓存数据；若没有数据，	  *调用方法并将方法返回值放到缓存中
	* value：缓存的名称，每个缓存名称下面可以有多个key
	* key：缓存的key
	*/</span>
	<span class="token annotation punctuation">@GetMapping</span>
    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>cacheNames <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token string">&quot;#id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> user<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重启服务,通过swagger接口文档测试，访问UserController的getById()方法</strong></p><p>第一次访问，会请求我们controller的方法，查询数据库。后面再查询相同的id，就直接从Redis中查询数据，不用再查询数据库了，就说明缓存生效了。</p><p>测试步骤：</p><ul><li>提前在redis中手动删除掉id=\${id}的用户数据</li><li>查看控制台sql语句：说明从数据库查询的用户数据</li><li>查看Redis中的缓存数据：说明已成功缓存</li><li>再次查询相同id的数据时，直接从redis中直接获取，不再查询数据库。</li></ul><p>多条件使用案例</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token string">&quot;#userDto.hashCode()&quot;</span><span class="token punctuation">,</span>unless <span class="token operator">=</span> <span class="token string">&quot;#result.size() == 0&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token class-name">UserDto</span> userDto<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> userDto<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">,</span> userDto<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果返回结果为空，则不缓存<code>unless = &quot;#result == null&quot;</code>或<code>unless = &quot;#result.size() == 0&quot;</code></p><h4 id="_5-3-4-cacheevict注解" tabindex="-1"><a class="header-anchor" href="#_5-3-4-cacheevict注解" aria-hidden="true">#</a> 5.3.4 @CacheEvict注解</h4><ul><li></li></ul><p>作用: 清理指定缓存</p><ul><li></li></ul><p>value: 缓存的名称，每个缓存名称下面可以有多个key</p><ul><li></li></ul><p>key: 缓存的key  ----------&gt; 支持Spring的表达式语言SPEL语法</p><p>在 delete 方法上加注解<code>@CacheEvict</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token annotation punctuation">@DeleteMapping</span>
    <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>cacheNames <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>key <span class="token operator">=</span> <span class="token string">&quot;#id&quot;</span><span class="token punctuation">)</span><span class="token comment">//删除某个key对应的缓存数据</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        userMapper<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/delAll&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>cacheNames <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//删除userCache下所有的缓存数据</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        userMapper<span class="token punctuation">.</span><span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启服务,通过swagger接口文档测试，访问UserController的deleteAll()方法</p><p>查看数据库和缓存是否删除了数据</p><h4 id="_5-3-5-caching注解" tabindex="-1"><a class="header-anchor" href="#_5-3-5-caching注解" aria-hidden="true">#</a> 5.3.5 @Caching注解</h4><p>作用: 组装其他缓存注解</p><ul><li>cacheable     组装一个或多个@Cacheable注解</li><li>put    组装一个或多个@CachePut注解</li><li>evict    组装一个或多个@CacheEvict注解</li></ul><p>我们可以修改getById方法，下面就使用@Caching组装使用了多种注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Caching</span><span class="token punctuation">(</span>
        cacheable <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>key <span class="token operator">=</span> <span class="token string">&quot;#id&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        put <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@CachePut</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>key <span class="token operator">=</span> <span class="token string">&quot;#result.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token annotation punctuation">@CachePut</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userCache&quot;</span><span class="token punctuation">,</span>key <span class="token operator">=</span> <span class="token string">&quot;#result.age&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;用户不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> user<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当调用getById方法之后，首先到缓存中根据id查询数据，如果查询不成功还是会到数据库中找数据，同时会再往redis中set两个缓存，key分别是name和age</p><h3 id="_5-4-部门模块添加缓存" tabindex="-1"><a class="header-anchor" href="#_5-4-部门模块添加缓存" aria-hidden="true">#</a> 5.4 部门模块添加缓存</h3><p>我们现在已经熟悉了spring cache的基本使用方式了，现在我们就可以把它集成我们项目中的部门模块</p><h4 id="_5-4-1-环境集成" tabindex="-1"><a class="header-anchor" href="#_5-4-1-环境集成" aria-hidden="true">#</a> 5.4.1 环境集成</h4><p>参考spring cache入门案例</p><h4 id="_5-4-2-代码优化" tabindex="-1"><a class="header-anchor" href="#_5-4-2-代码优化" aria-hidden="true">#</a> 5.4.2 代码优化</h4><p>我们可以把所有spring cache的注解都在deptService中去定义，最终代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyl<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description：部门表服务实现类
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeptServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">DeptService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">DeptMapper</span> deptMapper<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span> 对象信息
     * <span class="token keyword">@return</span> DeptVo
     * @Description 创建部门表
     */</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Caching</span><span class="token punctuation">(</span>evict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">LIST</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">TREE</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">createDept</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span> 对象信息
     * <span class="token keyword">@return</span> Boolean
     * @Description 修改部门表
     */</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token annotation punctuation">@Caching</span><span class="token punctuation">(</span>evict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">LIST</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">TREE</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">updateDept</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span> 查询条件
     * <span class="token keyword">@description</span> 多条件查询部门表列表
     * <span class="token keyword">@return</span>: List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DeptVo</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">LIST</span><span class="token punctuation">,</span>key <span class="token operator">=</span><span class="token string">&quot;#deptDto.hashCode()&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">findDeptList</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">findDeptInDeptNos</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> deptNos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts <span class="token operator">=</span> deptMapper<span class="token punctuation">.</span><span class="token function">findDeptInDeptNos</span><span class="token punctuation">(</span>deptNos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">BeanConv</span><span class="token punctuation">.</span><span class="token function">toBeanList</span><span class="token punctuation">(</span>depts<span class="token punctuation">,</span> <span class="token class-name">DeptVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeptVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">findDeptVoListInRoleId</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> roleIdSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> deptMapper<span class="token punctuation">.</span><span class="token function">findDeptVoListInRoleId</span><span class="token punctuation">(</span>roleIdSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token annotation punctuation">@Caching</span><span class="token punctuation">(</span>evict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">LIST</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">TREE</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">deleteDeptById</span><span class="token punctuation">(</span><span class="token class-name">String</span> deptId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 启用-禁用部门
     *
     * <span class="token keyword">@param</span> <span class="token parameter">deptDto</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Caching</span><span class="token punctuation">(</span>evict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">LIST</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">TREE</span><span class="token punctuation">,</span>allEntries <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">isEnable</span><span class="token punctuation">(</span><span class="token class-name">DeptDto</span> deptDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 组织部门树形
     * <span class="token keyword">@return</span>: deptDto
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">DeptCacheConstant</span><span class="token punctuation">.</span><span class="token constant">TREE</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">TreeVo</span> <span class="token function">deptTreeVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        先到缓存中查询数据
            没有就到数据库中查询数据，同时缓存到redis
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-作业" tabindex="-1"><a class="header-anchor" href="#_6-作业" aria-hidden="true">#</a> 6 作业</h2><h3 id="_6-1-部门管理" tabindex="-1"><a class="header-anchor" href="#_6-1-部门管理" aria-hidden="true">#</a> 6.1 部门管理</h3><p>需要完成的接口</p><ul><li>部门修改</li><li>启用-禁用</li><li>部门删除</li></ul><h3 id="_6-2-岗位管理" tabindex="-1"><a class="header-anchor" href="#_6-2-岗位管理" aria-hidden="true">#</a> 6.2 岗位管理</h3><p>需要完成的接口：</p><ul><li></li></ul><p>岗位添加</p><ul><li></li></ul><p>岗位修改</p><ul><li></li></ul><p>岗位分页查询</p><p>注意：在查询岗位的时候，需要展示岗位所在的部门名称，需关联部门表</p><ul><li></li></ul><p>岗位删除</p>`,59);function R(B,V){const a=o("ExternalLinkIcon");return c(),l("div",null,[j,n("p",null,[s("#"),n("a",N,[s("user.id"),t(a)]),s(" : #user指的是方法形参的名称, id指的是user的id属性 , 也就是使用user的id属性作为key ;")]),C,n("p",null,[s("#"),n("a",x,[s("result.id"),t(a)]),s(" : #result代表方法返回值，该表达式 代表以返回对象的id属性作为key ；")]),I,n("p",null,[s("#"),n("a",S,[s("p0.id"),t(a)]),s("：#p0指的是方法中的第一个参数，id指的是第一个参数的id属性,也就是使用第一个参数的id属性作为key")]),A,n("p",null,[s("#"),n("a",E,[s("a0.id"),t(a)]),s("：#a0指的是方法中的第一个参数，id指的是第一个参数的id属性,也就是使用第一个参数的id属性作为key")]),L])}const z=e(T,[["render",R],["__file","day04-权限认证-基础.html.vue"]]);export{z as default};
