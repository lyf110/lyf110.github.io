import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,b as c,d as l,e as s}from"./app-5f6064b2.js";const i="/assets/202212101001721-22411748.png",u="/assets/202212101709139-67b81e40.png",r="/assets/202212101710853-fea6ea09.png",k="/assets/202212101711666-94f6704d.png",d="/assets/202212101711488-cec6fcc7.png",m="/assets/image-20230403160432012-4832e12e.png",v="/assets/image-20230403160449586-c2deed2a.png",b="/assets/image-20230403160503729-d73dacf7.png",g="/assets/image-20230403160551301-6aceff5d.png",w="/assets/image-20230403160619888-8f8b9085.png",h="/assets/image-20230403160634114-8f947290.png",y="/assets/image-20230403160652661-4b6c6376.png",f="/assets/image-20230403160805761-5c63a36d.png",q="/assets/202212141201187-92089590.png",S="/assets/image-20230403160855552-e4301add.png",M="/assets/202212141703463-172dadc1.png",R="/assets/202212141712909-06c2c1d5.png",C="/assets/202212141725335-d2c86b01.png",A="/assets/202212141734943-03ad244f.png",x="/assets/202212141841847-bc865bd5.png",H="/assets/202212141942870-731c2cc6.png",j={},B=s(`<h1 id="_20-requestmappinghandlermapping-与-requestmappinghandleradapter" tabindex="-1"><a class="header-anchor" href="#_20-requestmappinghandlermapping-与-requestmappinghandleradapter" aria-hidden="true">#</a> 20 RequestMappingHandlerMapping 与 RequestMappingHandlerAdapter</h1><p>RequestMappingHandlerMapping 与 RequestMappingHandlerAdapter 俩是一对，分别用来</p><ul><li>处理 @RequestMapping 映射</li><li>调用控制器方法、并处理方法参数与方法返回值</li></ul><h2 id="_20-1-演示1-dispatcherservlet-初始化" tabindex="-1"><a class="header-anchor" href="#_20-1-演示1-dispatcherservlet-初始化" aria-hidden="true">#</a> 20.1 演示1 - DispatcherServlet 初始化</h2><h3 id="_20-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_20-1-1-代码参考" aria-hidden="true">#</a> 20.1.1 代码参考</h3><h4 id="_1、dispatcherservlet-是在第一次被访问时执行初始化-验证" tabindex="-1"><a class="header-anchor" href="#_1、dispatcherservlet-是在第一次被访问时执行初始化-验证" aria-hidden="true">#</a> 1、DispatcherServlet 是在第一次被访问时执行初始化 验证</h4><h5 id="_1-1、webconfig" tabindex="-1"><a class="header-anchor" href="#_1-1、webconfig" aria-hidden="true">#</a> 1.1、WebConfig</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ComponentScan</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/9 18:45
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;com.itheima.a20&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 注入一个Tomcat内嵌工厂
     *
     * <span class="token keyword">@return</span> ServletWebServerFactory
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServletWebServerFactory</span> <span class="token function">servletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 注入DispatchServlet，web程序的入口
     *
     * <span class="token keyword">@return</span> DispatcherServlet
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 将DispatchServlet注入到WEB 容器中
     *
     * <span class="token keyword">@return</span> DispatcherServletRegistrationBean
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">registrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Controller</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2、测试代码" tabindex="-1"><a class="header-anchor" href="#_1-2、测试代码" aria-hidden="true">#</a> 1.2、测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestDispatchServlet
 * <span class="token keyword">@description</span> 测试DispatchServlet流程
 * <span class="token keyword">@since</span> 2022/12/9 18:42
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDispatchServlet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3、启动日志" tabindex="-1"><a class="header-anchor" href="#_1-3、启动日志" aria-hidden="true">#</a> 1.3、启动日志</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18.421</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat initialized <span class="token keyword">with</span> <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">8080</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol init
信息<span class="token punctuation">:</span> Initializing ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-8080&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardService startInternal
信息<span class="token punctuation">:</span> Starting service <span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngine startInternal
信息<span class="token punctuation">:</span> Starting Servlet engine<span class="token punctuation">:</span> <span class="token punctuation">[</span>Apache Tomcat<span class="token operator">/</span><span class="token number">9.0</span><span class="token punctuation">.</span><span class="token number">62</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring embedded WebApplicationContext
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18.751</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>ServletWebServerApplicationContext <span class="token operator">-</span> Root WebApplicationContext<span class="token punctuation">:</span> initialization completed in <span class="token number">1189</span> ms 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol start
信息<span class="token punctuation">:</span> Starting ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-8080&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">18.866</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat started on <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">8080</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token keyword">context</span> path &#39;&#39; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3、在浏览器输入http-localhost-8080-hello-之后的日志" tabindex="-1"><a class="header-anchor" href="#_1-3、在浏览器输入http-localhost-8080-hello-之后的日志" aria-hidden="true">#</a> 1.3、在浏览器输入<code>http://localhost:8080/hello</code> 之后的日志</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code>十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.269</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Initializing Servlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.270</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No MultipartResolver &#39;multipartResolver&#39; declared 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.273</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No LocaleResolver &#39;localeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>AcceptHeaderLocaleResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.274</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ThemeResolver &#39;themeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>FixedThemeResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.660</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerMappings declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.716</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerAdapters declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.723</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerExceptionResolvers declared in servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.725</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No RequestToViewNameTranslator &#39;viewNameTranslator&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>DefaultRequestToViewNameTranslator<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.733</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ViewResolvers declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.736</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No FlashMapManager &#39;flashMapManager&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>SessionFlashMapManager<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.736</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> enableLoggingRequestDetails<span class="token operator">=</span>&#39;false&#39;<span class="token punctuation">:</span> request parameters <span class="token keyword">and</span> headers will be masked to prevent unsafe logging of potentially sensitive data 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.736</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed initialization in <span class="token number">466</span> ms 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.751</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> GET <span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> parameters<span class="token operator">={}</span><span class="token punctuation">,</span> headers<span class="token operator">={</span>masked<span class="token operator">}</span> in DispatcherServlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.760</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No view rendering<span class="token punctuation">,</span> <span class="token keyword">null</span> ModelAndView returned<span class="token punctuation">.</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.760</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed <span class="token number">200</span> OK<span class="token punctuation">,</span> headers<span class="token operator">={}</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.797</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> GET <span class="token string">&quot;/favicon.ico&quot;</span><span class="token punctuation">,</span> parameters<span class="token operator">={}</span><span class="token punctuation">,</span> headers<span class="token operator">={</span>masked<span class="token operator">}</span> in DispatcherServlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>WARN <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.803</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>PageNotFound        <span class="token operator">-</span> No mapping <span class="token keyword">for</span> GET <span class="token operator">/</span>favicon<span class="token punctuation">.</span>ico 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">24.804</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed <span class="token number">404</span> NOT_FOUND<span class="token punctuation">,</span> headers<span class="token operator">={}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>可以看出明显的有信息: Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;</p><p>因此，DispatchServlet是在第一次使用到时才会创建</p></blockquote><h4 id="_2、dispatcherservlet-也可以通过配置修改为-tomcat-启动后就初始化" tabindex="-1"><a class="header-anchor" href="#_2、dispatcherservlet-也可以通过配置修改为-tomcat-启动后就初始化" aria-hidden="true">#</a> 2、DispatcherServlet 也可以通过配置修改为 Tomcat 启动后就初始化</h4><h5 id="_2-1、在webconfig中修改dispatcherservletregistrationbean的代码" tabindex="-1"><a class="header-anchor" href="#_2-1、在webconfig中修改dispatcherservletregistrationbean的代码" aria-hidden="true">#</a> 2.1、在WebConfig中修改DispatcherServletRegistrationBean的代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token doc-comment comment">/**
     * 将DispatchServlet注入到WEB 容器中
     *
     * <span class="token keyword">@return</span> DispatcherServletRegistrationBean
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">registrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 默认值是-1，我们将其修改为1</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2、启动日志" tabindex="-1"><a class="header-anchor" href="#_2-2、启动日志" aria-hidden="true">#</a> 2.2、启动日志</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59.530</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat initialized <span class="token keyword">with</span> <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">8080</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol init
信息<span class="token punctuation">:</span> Initializing ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-8080&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardService startInternal
信息<span class="token punctuation">:</span> Starting service <span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngine startInternal
信息<span class="token punctuation">:</span> Starting Servlet engine<span class="token punctuation">:</span> <span class="token punctuation">[</span>Apache Tomcat<span class="token operator">/</span><span class="token number">9.0</span><span class="token punctuation">.</span><span class="token number">62</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring embedded WebApplicationContext
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59.752</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>ServletWebServerApplicationContext <span class="token operator">-</span> Root WebApplicationContext<span class="token punctuation">:</span> initialization completed in <span class="token number">1139</span> ms 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol start
信息<span class="token punctuation">:</span> Starting ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-8080&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59.838</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Initializing Servlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59.839</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No MultipartResolver &#39;multipartResolver&#39; declared 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59.843</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No LocaleResolver &#39;localeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>AcceptHeaderLocaleResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">59.844</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ThemeResolver &#39;themeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>FixedThemeResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.320</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerMappings declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.370</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerAdapters declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.378</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerExceptionResolvers declared in servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.379</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No RequestToViewNameTranslator &#39;viewNameTranslator&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>DefaultRequestToViewNameTranslator<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.385</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ViewResolvers declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.387</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No FlashMapManager &#39;flashMapManager&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>SessionFlashMapManager<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.387</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> enableLoggingRequestDetails<span class="token operator">=</span>&#39;false&#39;<span class="token punctuation">:</span> request parameters <span class="token keyword">and</span> headers will be masked to prevent unsafe logging of potentially sensitive data 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.387</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed initialization in <span class="token number">549</span> ms 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">00.389</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat started on <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">8080</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token keyword">context</span> path &#39;&#39; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>可以看出，DispatcherServlet在容器启动时就初始化了</p></blockquote><h4 id="_3、将代码中一些易变的地方-通过读取配置文件的形式来赋值" tabindex="-1"><a class="header-anchor" href="#_3、将代码中一些易变的地方-通过读取配置文件的形式来赋值" aria-hidden="true">#</a> 3、将代码中一些易变的地方，通过读取配置文件的形式来赋值</h4><h5 id="_3-1、application-properties" tabindex="-1"><a class="header-anchor" href="#_3-1、application-properties" aria-hidden="true">#</a> 3.1、application.properties</h5><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 修改端口号，改为9090</span>
<span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">9090</span>
<span class="token key attr-name">goods.name</span><span class="token punctuation">=</span><span class="token value attr-value">小米12</span>
<span class="token key attr-name">spring.datasource.druid.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://127.0.0.1:3306/test?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span>
<span class="token key attr-name">spring.datasource.druid.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>
<span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token key attr-name">server.servlet.session.timeout</span><span class="token punctuation">=</span><span class="token value attr-value">10s</span>
<span class="token comment"># 配置DispatchServlet初始化时机</span>
<span class="token key attr-name">spring.mvc.servlet.load-on-startup</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2、webconfig" tabindex="-1"><a class="header-anchor" href="#_3-2、webconfig" aria-hidden="true">#</a> 3.2、WebConfig</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">EnableAutoConfiguration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">ServerProperties</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">WebMvcProperties</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">EnableConfigurationProperties</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ComponentScan</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PropertySource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/9 18:45
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;com.itheima.a20&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;classpath:application.properties&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 加载application.properties</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">WebMvcProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ServerProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 导入自动配置类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 注入一个Tomcat内嵌工厂
     *
     * <span class="token keyword">@return</span> ServletWebServerFactory
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServletWebServerFactory</span> <span class="token function">servletWebServerFactory</span><span class="token punctuation">(</span><span class="token class-name">ServerProperties</span> serverProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span>serverProperties<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 注入DispatchServlet，web程序的入口
     *
     * <span class="token keyword">@return</span> DispatcherServlet
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 将DispatchServlet注入到WEB 容器中
     *
     * <span class="token keyword">@return</span> DispatcherServletRegistrationBean
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">registrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">,</span> <span class="token class-name">WebMvcProperties</span> webMvcProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 默认值是-1，我们将其修改为1</span>
        <span class="token comment">// registrationBean.setLoadOnStartup(1); 这是硬编码的形式，我们需要将其改为读配置类的形式</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span>webMvcProperties<span class="token punctuation">.</span><span class="token function">getServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLoadOnStartup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Controller</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3、启动日志" tabindex="-1"><a class="header-anchor" href="#_3-3、启动日志" aria-hidden="true">#</a> 3.3、启动日志</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">13.704</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat initialized <span class="token keyword">with</span> <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">9090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">13</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol init
信息<span class="token punctuation">:</span> Initializing ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-9090&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">13</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardService startInternal
信息<span class="token punctuation">:</span> Starting service <span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">13</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngine startInternal
信息<span class="token punctuation">:</span> Starting Servlet engine<span class="token punctuation">:</span> <span class="token punctuation">[</span>Apache Tomcat<span class="token operator">/</span><span class="token number">9.0</span><span class="token punctuation">.</span><span class="token number">62</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">13</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring embedded WebApplicationContext
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">13.943</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>ServletWebServerApplicationContext <span class="token operator">-</span> Root WebApplicationContext<span class="token punctuation">:</span> initialization completed in <span class="token number">1314</span> ms 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol start
信息<span class="token punctuation">:</span> Starting ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-9090&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.065</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Initializing Servlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.066</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No MultipartResolver &#39;multipartResolver&#39; declared 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.067</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No LocaleResolver &#39;localeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>AcceptHeaderLocaleResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.068</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ThemeResolver &#39;themeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>FixedThemeResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.325</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerMappings declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.377</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerAdapters declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.385</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerExceptionResolvers declared in servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.386</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No RequestToViewNameTranslator &#39;viewNameTranslator&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>DefaultRequestToViewNameTranslator<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.393</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ViewResolvers declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.395</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No FlashMapManager &#39;flashMapManager&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>SessionFlashMapManager<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.396</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> enableLoggingRequestDetails<span class="token operator">=</span>&#39;false&#39;<span class="token punctuation">:</span> request parameters <span class="token keyword">and</span> headers will be masked to prevent unsafe logging of potentially sensitive data 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.396</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed initialization in <span class="token number">331</span> ms 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">:</span><span class="token number">14.397</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat started on <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">9090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token keyword">context</span> path &#39;&#39; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li><p>可以看到启动日志变为了9090</p></li><li><p>DispatchServlet也在Tomcat启动时就进行了初始化</p></li><li><p>所以我们可以将一些代码中易变的地方，写在配置文件中，然后通过读取配置文件来进行赋值</p></li></ul></blockquote><h4 id="_4、requestmappinghandlermapping" tabindex="-1"><a class="header-anchor" href="#_4、requestmappinghandlermapping" aria-hidden="true">#</a> 4、RequestMappingHandlerMapping</h4><h5 id="_4-1、requestmappinghandlermapping-如果我们没有创建这个类的化-那么会创建默认的requestmappinghandlermapping" tabindex="-1"><a class="header-anchor" href="#_4-1、requestmappinghandlermapping-如果我们没有创建这个类的化-那么会创建默认的requestmappinghandlermapping" aria-hidden="true">#</a> 4.1、RequestMappingHandlerMapping 如果我们没有创建这个类的化，那么会创建默认的RequestMappingHandlerMapping</h5><p>这个类在org.springframework.web.servlet.DispatcherServlet.properties有配置</p><p>如果用 DispatcherServlet 初始化时默认添加的组件, 并不会作为 bean, 给测试带来困扰</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># Default implementation classes for DispatcherServlet&#39;s strategy interfaces.</span>
<span class="token comment"># Used as fallback when no matching beans are found in the DispatcherServlet context.</span>
<span class="token comment"># Not meant to be customized by application developers.</span>

<span class="token key attr-name">org.springframework.web.servlet.LocaleResolver</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver</span>

<span class="token key attr-name">org.springframework.web.servlet.ThemeResolver</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.theme.FixedThemeResolver</span>

<span class="token key attr-name">org.springframework.web.servlet.HandlerMapping</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,\\
	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping,\\
	org.springframework.web.servlet.function.support.RouterFunctionMapping</span>

<span class="token key attr-name">org.springframework.web.servlet.HandlerAdapter</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,\\
	org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,\\
	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter,\\
	org.springframework.web.servlet.function.support.HandlerFunctionAdapter</span>


<span class="token key attr-name">org.springframework.web.servlet.HandlerExceptionResolver</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver,\\
	org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver,\\
	org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver</span>

<span class="token key attr-name">org.springframework.web.servlet.RequestToViewNameTranslator</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator</span>

<span class="token key attr-name">org.springframework.web.servlet.ViewResolver</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.view.InternalResourceViewResolver</span>

<span class="token key attr-name">org.springframework.web.servlet.FlashMapManager</span><span class="token punctuation">=</span><span class="token value attr-value">org.springframework.web.servlet.support.SessionFlashMapManager</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="image-20221210100131126" tabindex="0" loading="lazy"><figcaption>image-20221210100131126</figcaption></figure><h5 id="_4-2、我们在webconfig中自定义一个requestmappinghandlermapping" tabindex="-1"><a class="header-anchor" href="#_4-2、我们在webconfig中自定义一个requestmappinghandlermapping" aria-hidden="true">#</a> 4.2、我们在WebConfig中自定义一个RequestMappingHandlerMapping</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 如果用 DispatcherServlet 初始化时默认添加的组件, 并不会作为 bean, 给测试带来困扰
     * ⬅️1. 加入RequestMappingHandlerMapping
     *
     * <span class="token keyword">@return</span> RequestMappingHandlerMapping
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerMapping</span> <span class="token function">requestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-3、定义一个hellocontroller" tabindex="-1"><a class="header-anchor" href="#_4-3、定义一个hellocontroller" aria-hidden="true">#</a> 4.3、定义一个HelloController</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>yaml<span class="token punctuation">.</span>snakeyaml<span class="token punctuation">.</span></span><span class="token class-name">Yaml</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> HelloController
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/10 10:04
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Controller</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test1&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test1()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test2&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test2({})&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test3&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test3({})&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test4&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Yaml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-4、测试代码" tabindex="-1"><a class="header-anchor" href="#_4-4、测试代码" aria-hidden="true">#</a> 4.4、测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestDispatchServlet
 * <span class="token keyword">@description</span> 测试DispatchServlet流程
 * <span class="token keyword">@since</span> 2022/12/9 18:42
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDispatchServlet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1 作用 解析 @RequestMapping 以及派生注解，生成路径与控制器方法的映射关系, 在初始化时就生成</span>
        <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 获取所有的Handler 方法</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestMappingInfo</span><span class="token punctuation">,</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">&gt;</span></span> handlerMethods <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandlerMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}={}&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-5、测试结果" tabindex="-1"><a class="header-anchor" href="#_4-5、测试结果" aria-hidden="true">#</a> 4.5、测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.037</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat initialized <span class="token keyword">with</span> <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">9090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol init
信息<span class="token punctuation">:</span> Initializing ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-9090&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardService startInternal
信息<span class="token punctuation">:</span> Starting service <span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngine startInternal
信息<span class="token punctuation">:</span> Starting Servlet engine<span class="token punctuation">:</span> <span class="token punctuation">[</span>Apache Tomcat<span class="token operator">/</span><span class="token number">9.0</span><span class="token punctuation">.</span><span class="token number">62</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring embedded WebApplicationContext
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.323</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>ServletWebServerApplicationContext <span class="token operator">-</span> Root WebApplicationContext<span class="token punctuation">:</span> initialization completed in <span class="token number">1292</span> ms 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol start
信息<span class="token punctuation">:</span> Starting ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-9090&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.450</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Initializing Servlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.450</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No MultipartResolver &#39;multipartResolver&#39; declared 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.453</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No LocaleResolver &#39;localeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>AcceptHeaderLocaleResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.453</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ThemeResolver &#39;themeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>FixedThemeResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.726</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerAdapters declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.736</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerExceptionResolvers declared in servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.737</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No RequestToViewNameTranslator &#39;viewNameTranslator&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>DefaultRequestToViewNameTranslator<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.743</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ViewResolvers declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.745</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No FlashMapManager &#39;flashMapManager&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>SessionFlashMapManager<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.745</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> enableLoggingRequestDetails<span class="token operator">=</span>&#39;false&#39;<span class="token punctuation">:</span> request parameters <span class="token keyword">and</span> headers will be masked to prevent unsafe logging of potentially sensitive data 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.745</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed initialization in <span class="token number">295</span> ms 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.746</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat started on <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">9090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token keyword">context</span> path &#39;&#39; 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.761</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>PUT <span class="token punctuation">[</span><span class="token operator">/</span>test3<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test3</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>GET <span class="token punctuation">[</span><span class="token operator">/</span>test1<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>POST <span class="token punctuation">[</span><span class="token operator">/</span>test2<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test2</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span> <span class="token punctuation">[</span><span class="token operator">/</span>test4<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>RequestMappingHandlerMapping相关的日志</li></ul><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.761</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>PUT <span class="token punctuation">[</span><span class="token operator">/</span>test3<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test3</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>GET <span class="token punctuation">[</span><span class="token operator">/</span>test1<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>POST <span class="token punctuation">[</span><span class="token operator">/</span>test2<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test2</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">02.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span> <span class="token punctuation">[</span><span class="token operator">/</span>test4<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>生成路径与控制器方法的映射关系</p></blockquote><h4 id="_5、测试requestmappinghandleradapter" tabindex="-1"><a class="header-anchor" href="#_5、测试requestmappinghandleradapter" aria-hidden="true">#</a> 5、测试RequestMappingHandlerAdapter</h4><h5 id="_5-1、myrequestmappinghandleradapter" tabindex="-1"><a class="header-anchor" href="#_5-1、myrequestmappinghandleradapter" aria-hidden="true">#</a> 5.1、MyRequestMappingHandlerAdapter</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>adapter</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerAdapter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> MyRequestMappingHandlerAdapter
 * <span class="token keyword">@description</span> MyRequestMappingHandlerAdapter继承RequestMappingHandlerAdapter，
 * 并重写invokeHandlerMethod，将其访问控制符修改为public
 * 以便我们的后续访问
 * <span class="token keyword">@since</span> 2022/12/10 10:27
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRequestMappingHandlerAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RequestMappingHandlerAdapter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">HandlerMethod</span> handlerMethod<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handlerMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-2、在webconfig中注入自定义的adapter" tabindex="-1"><a class="header-anchor" href="#_5-2、在webconfig中注入自定义的adapter" aria-hidden="true">#</a> 5.2、在WebConfig中注入自定义的Adapter</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 2. 继续加入RequestMappingHandlerAdapter, 会替换掉 DispatcherServlet 默认的 4 个 HandlerAdapter
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 这里注入自定义的MyRequestMappingHandlerAdapter是为了调用
     * org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.method.HandlerMethod)
     * 中受保护的方法
     *
     * <span class="token keyword">@return</span> RequestMappingHandlerAdapter
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MyRequestMappingHandlerAdapter</span> <span class="token function">myRequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handlerAdapter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3、测试代码" tabindex="-1"><a class="header-anchor" href="#_5-3、测试代码" aria-hidden="true">#</a> 5.3、测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>adapter<span class="token punctuation">.</span></span><span class="token class-name">MyRequestMappingHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerExecutionChain</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestDispatchServlet
 * <span class="token keyword">@description</span> 测试DispatchServlet流程
 * <span class="token keyword">@since</span> 2022/12/9 18:42
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDispatchServlet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1 作用 解析 @RequestMapping 以及派生注解，生成路径与控制器方法的映射关系, 在初始化时就生成</span>
        <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 获取所有的Handler 方法</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestMappingInfo</span><span class="token punctuation">,</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">&gt;</span></span> handlerMethods <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandlerMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}={}&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3 请求来了，获取控制器方法，返回处理器链执行对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;你好啊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HandlerExecutionChain</span> handlerExecutionChain <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> handlerExecutionChain<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 RequestMappingHandlerAdapter 处理 处理器链执行对象</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> handlerExecutionChain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> handlerExecutionChain<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5 处理响应结果</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentAsByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;response result is {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-4、测试结果" tabindex="-1"><a class="header-anchor" href="#_5-4、测试结果" aria-hidden="true">#</a> 5.4、测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.025</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat initialized <span class="token keyword">with</span> <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">9090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol init
信息<span class="token punctuation">:</span> Initializing ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-9090&quot;</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardService startInternal
信息<span class="token punctuation">:</span> Starting service <span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngine startInternal
信息<span class="token punctuation">:</span> Starting Servlet engine<span class="token punctuation">:</span> <span class="token punctuation">[</span>Apache Tomcat<span class="token operator">/</span><span class="token number">9.0</span><span class="token punctuation">.</span><span class="token number">62</span><span class="token punctuation">]</span>
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring embedded WebApplicationContext
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.299</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>ServletWebServerApplicationContext <span class="token operator">-</span> Root WebApplicationContext<span class="token punctuation">:</span> initialization completed in <span class="token number">1522</span> ms 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.643</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">.</span>MyRequestMappingHandlerAdapter <span class="token operator">-</span> ControllerAdvice beans<span class="token punctuation">:</span> none 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol start
信息<span class="token punctuation">:</span> Starting ProtocolHandler <span class="token punctuation">[</span><span class="token string">&quot;http-nio-9090&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.702</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Initializing Servlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.702</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No MultipartResolver &#39;multipartResolver&#39; declared 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.704</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No LocaleResolver &#39;localeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>AcceptHeaderLocaleResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.705</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ThemeResolver &#39;themeResolver&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>FixedThemeResolver<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.713</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No HandlerExceptionResolvers declared in servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
十二月 <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07</span> 上午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationContext log
信息<span class="token punctuation">:</span> Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.714</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No RequestToViewNameTranslator &#39;viewNameTranslator&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>DefaultRequestToViewNameTranslator<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.720</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No ViewResolvers declared <span class="token keyword">for</span> servlet &#39;dispatcherServlet&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> strategies from DispatcherServlet<span class="token punctuation">.</span>properties 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.722</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> No FlashMapManager &#39;flashMapManager&#39;<span class="token punctuation">:</span> using <span class="token keyword">default</span> <span class="token punctuation">[</span>SessionFlashMapManager<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.723</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> enableLoggingRequestDetails<span class="token operator">=</span>&#39;false&#39;<span class="token punctuation">:</span> request parameters <span class="token keyword">and</span> headers will be masked to prevent unsafe logging of potentially sensitive data 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.723</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Completed initialization in <span class="token number">21</span> ms 
<span class="token punctuation">[</span>INFO <span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.724</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>e<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer    <span class="token operator">-</span> Tomcat started on <span class="token function">port</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">9090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token keyword">context</span> path &#39;&#39; 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.741</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>PUT <span class="token punctuation">[</span><span class="token operator">/</span>test3<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test3</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.743</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>GET <span class="token punctuation">[</span><span class="token operator">/</span>test1<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.743</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span>POST <span class="token punctuation">[</span><span class="token operator">/</span>test2<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test2</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.743</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> <span class="token operator">{</span> <span class="token punctuation">[</span><span class="token operator">/</span>test4<span class="token punctuation">]</span><span class="token operator">}=</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.762</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> HandlerExecutionChain <span class="token keyword">with</span> <span class="token punctuation">[</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController#<span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">and</span> <span class="token number">0</span> interceptors 
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.773</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController  <span class="token operator">-</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.774</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> response result is 你好啊 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>简易结果</li></ul><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.773</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController  <span class="token operator">-</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">07.774</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> response result is 你好啊 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>我们调用到了test1，也拿到了我们写入的响应结果</p></blockquote><h3 id="_20-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_20-1-2-收获💡" aria-hidden="true">#</a> 20.1.2 收获💡</h3><ol><li>DispatcherServlet 是在第一次被访问时执行初始化, 也可以通过配置修改为 Tomcat 启动后就初始化</li><li>在初始化时会从 Spring 容器中找一些 Web 需要的组件, 如 HandlerMapping、HandlerAdapter 等，并逐一调用它们的初始化</li><li>RequestMappingHandlerMapping 初始化时，会收集所有 @RequestMapping 映射信息，封装为 Map，其中 <ul><li>key 是 RequestMappingInfo 类型，包括请求路径、请求方法等信息</li><li>value 是 HandlerMethod 类型，包括控制器方法对象、控制器对象</li><li>有了这个 Map，就可以在请求到达时，快速完成映射，找到 HandlerMethod 并与匹配的拦截器一起返回给 DispatcherServlet</li></ul></li><li>RequestMappingHandlerAdapter 初始化时，会准备 HandlerMethod 调用时需要的各个组件，如： <ul><li>HandlerMethodArgumentResolver 解析控制器方法参数</li><li>HandlerMethodReturnValueHandler 处理控制器方法返回值</li></ul></li></ol><h2 id="_20-2-演示2-自定义参数与返回值处理器" tabindex="-1"><a class="header-anchor" href="#_20-2-演示2-自定义参数与返回值处理器" aria-hidden="true">#</a> 20.2 演示2 - 自定义参数与返回值处理器</h2><h3 id="_20-2-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_20-2-1-代码参考" aria-hidden="true">#</a> 20.2.1 代码参考</h3><h4 id="_1、参数解析器" tabindex="-1"><a class="header-anchor" href="#_1、参数解析器" aria-hidden="true">#</a> 1、参数解析器</h4><h5 id="_1-1、-token" tabindex="-1"><a class="header-anchor" href="#_1-1、-token" aria-hidden="true">#</a> 1.1、@Token</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>annotation</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ElementType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Retention</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RetentionPolicy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> Token
 * <span class="token keyword">@description</span> 例如经常需要用到请求头中的 token 信息, 用下面注解来标注由哪个参数来获取它
 * token=令牌
 * <span class="token keyword">@since</span> 2022/12/10 10:41
 */</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">)</span> <span class="token comment">// 表示此参数是加在方法参数上的</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span> <span class="token comment">// 运行期有效</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Token</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2、tokenargumentresolver" tabindex="-1"><a class="header-anchor" href="#_1-2、tokenargumentresolver" aria-hidden="true">#</a> 1.2、TokenArgumentResolver</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>resolver</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Token</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MethodParameter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinderFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">NativeWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TokenArgumentResolver
 * <span class="token keyword">@description</span> Token参数解析器
 * <span class="token keyword">@since</span> 2022/12/10 10:46
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TokenArgumentResolver</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerMethodArgumentResolver</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 判断方法参数上是否有此注解
     *
     * <span class="token keyword">@param</span> <span class="token parameter">parameter</span> 方法参数
     * <span class="token keyword">@return</span> true 有此注解，false：无此注解
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supportsParameter</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Token</span> token <span class="token operator">=</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Token</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> token <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析Token
     *
     * <span class="token keyword">@param</span> <span class="token parameter">parameter</span>     参数
     * <span class="token keyword">@param</span> <span class="token parameter">mavContainer</span>  容器
     * <span class="token keyword">@param</span> <span class="token parameter">webRequest</span>    webRequest
     * <span class="token keyword">@param</span> <span class="token parameter">binderFactory</span> binderFactory
     * <span class="token keyword">@return</span> Object
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">resolveArgument</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span> <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">,</span> <span class="token class-name">WebDataBinderFactory</span> binderFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> webRequest<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、返回值处理器" tabindex="-1"><a class="header-anchor" href="#_2、返回值处理器" aria-hidden="true">#</a> 2、返回值处理器</h4><h5 id="_2-1、-yml" tabindex="-1"><a class="header-anchor" href="#_2-1、-yml" aria-hidden="true">#</a> 2.1、@Yml</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>annotation</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ElementType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Retention</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RetentionPolicy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> Yml
 * <span class="token keyword">@description</span> 将方法的返回值，变成yml进行返回
 * <span class="token keyword">@since</span> 2022/12/10 10:44
 */</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Yml</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2、ymlreturnvaluehandler" tabindex="-1"><a class="header-anchor" href="#_2-2、ymlreturnvaluehandler" aria-hidden="true">#</a> 2.2、YmlReturnValueHandler</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Yml</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MethodParameter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">NativeWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodReturnValueHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>yaml<span class="token punctuation">.</span>snakeyaml<span class="token punctuation">.</span></span><span class="token class-name">Yaml</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> YmlReturnValueHandler
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/10 10:51
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YmlReturnValueHandler</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerMethodReturnValueHandler</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 判断方法参数上是否有此注解
     *
     * <span class="token keyword">@param</span> <span class="token parameter">returnType</span> 方法的返回值参数
     * <span class="token keyword">@return</span> true 有此注解，false：无此注解
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supportsReturnType</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Yml</span> yml <span class="token operator">=</span> returnType<span class="token punctuation">.</span><span class="token function">getMethodAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Yml</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> yml <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleReturnValue</span><span class="token punctuation">(</span><span class="token class-name">Object</span> returnValue<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span> <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 将响应结果，转成yaml形式</span>
        <span class="token class-name">String</span> yamlStr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Yaml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2 将转好的yaml字符串写入响应中</span>
        <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> webRequest<span class="token punctuation">.</span><span class="token function">getNativeResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>yamlStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 告诉mvc容器，响应已经完成</span>
        mavContainer<span class="token punctuation">.</span><span class="token function">setRequestHandled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、测试参数解析器和返回值处理器" tabindex="-1"><a class="header-anchor" href="#_3、测试参数解析器和返回值处理器" aria-hidden="true">#</a> 3、测试参数解析器和返回值处理器</h4><h5 id="_3-1、hellocontroller" tabindex="-1"><a class="header-anchor" href="#_3-1、hellocontroller" aria-hidden="true">#</a> 3.1、HelloController</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test3&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Token</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test3({})&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test4&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Yml</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2、webconfig-1" tabindex="-1"><a class="header-anchor" href="#_3-2、webconfig-1" aria-hidden="true">#</a> 3.2、WebConfig</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 2. 继续加入RequestMappingHandlerAdapter, 会替换掉 DispatcherServlet 默认的 4 个 HandlerAdapter
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 这里注入自定义的MyRequestMappingHandlerAdapter是为了调用
     * org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.web.method.HandlerMethod)
     * 中受保护的方法
     *
     * <span class="token keyword">@return</span> RequestMappingHandlerAdapter
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MyRequestMappingHandlerAdapter</span> <span class="token function">myRequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将token解析器和yaml解析器都添加到MyRequestMappingHandlerAdapter中</span>
        <span class="token comment">// token解析器</span>
        <span class="token class-name">TokenArgumentResolver</span> tokenArgumentResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TokenArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// yaml解析器</span>
        <span class="token class-name">YmlReturnValueHandler</span> ymlReturnValueHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YmlReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">setCustomArgumentResolvers</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>tokenArgumentResolver<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">setCustomReturnValueHandlers</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>ymlReturnValueHandler<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handlerAdapter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3、解析token" tabindex="-1"><a class="header-anchor" href="#_3-3、解析token" aria-hidden="true">#</a> 3.3、解析token</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 解析token
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> applicationContext
     * <span class="token keyword">@param</span> <span class="token parameter">requestMapping</span>     requestMapping
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resolverToken</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;token 解析开始&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 请求来了，获取控制器方法，返回处理器链执行对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">PUT</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.1 获取执行器链对象</span>
        <span class="token class-name">HandlerExecutionChain</span> chain <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 RequestMappingHandlerAdapter 处理 处理器链执行对象</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> chain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> chain<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 处理响应结果</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;token 解析结束&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-4、解析yml" tabindex="-1"><a class="header-anchor" href="#_3-4、解析yml" aria-hidden="true">#</a> 3.4、解析yml</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 解析yml
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> applicationContext
     * <span class="token keyword">@param</span> <span class="token parameter">requestMapping</span>     requestMapping
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resolverYml</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;yml 解析开始&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 获取执行器链对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HandlerExecutionChain</span> chain <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> chain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 解析执行器链对象</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> chain<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5 解析响应结果</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentAsByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;解析结果: {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;yml 解析结束&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-5、完整的测试代码" tabindex="-1"><a class="header-anchor" href="#_3-5、完整的测试代码" aria-hidden="true">#</a> 3.5、完整的测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>adapter<span class="token punctuation">.</span></span><span class="token class-name">MyRequestMappingHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerExecutionChain</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UUID</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestDispatchServlet
 * <span class="token keyword">@description</span> 测试DispatchServlet流程
 * <span class="token keyword">@since</span> 2022/12/9 18:42
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDispatchServlet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1 作用 解析 @RequestMapping 以及派生注解，生成路径与控制器方法的映射关系, 在初始化时就生成</span>
        <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 获取所有的Handler 方法</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestMappingInfo</span><span class="token punctuation">,</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">&gt;</span></span> handlerMethods <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandlerMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}={}&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 解析token</span>
        <span class="token function">resolverToken</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> requestMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 解析yml</span>
        <span class="token function">resolverYml</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> requestMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析yml
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> applicationContext
     * <span class="token keyword">@param</span> <span class="token parameter">requestMapping</span>     requestMapping
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resolverYml</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;yml 解析开始&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 获取执行器链对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HandlerExecutionChain</span> chain <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> chain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 解析执行器链对象</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> chain<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5 解析响应结果</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentAsByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;解析结果: {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;yml 解析结束&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析token
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> applicationContext
     * <span class="token keyword">@param</span> <span class="token parameter">requestMapping</span>     requestMapping
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resolverToken</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;token 解析开始&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 请求来了，获取控制器方法，返回处理器链执行对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">PUT</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.1 获取执行器链对象</span>
        <span class="token class-name">HandlerExecutionChain</span> chain <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 RequestMappingHandlerAdapter 处理 处理器链执行对象</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> chain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> chain<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 处理响应结果</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;token 解析结束&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMapping<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 3 请求来了，获取控制器方法，返回处理器链执行对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;你好啊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HandlerExecutionChain</span> handlerExecutionChain <span class="token operator">=</span> requestMapping<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> handlerExecutionChain<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 RequestMappingHandlerAdapter 处理 处理器链执行对象</span>
        <span class="token class-name">MyRequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">MyRequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> handlerExecutionChain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> handlerExecutionChain<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5 处理响应结果</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentAsByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;response result is {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-6、测试结果-截取关键日志" tabindex="-1"><a class="header-anchor" href="#_3-6、测试结果-截取关键日志" aria-hidden="true">#</a> 3.6、测试结果(截取关键日志)</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>token 解析开始<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">:</span><span class="token number">50.059</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController  <span class="token operator">-</span> <span class="token function">test3</span><span class="token punctuation">(</span>ce2ad4cd<span class="token operator">-</span><span class="token number">4</span>a3f<span class="token operator">-</span><span class="token number">4</span>da2<span class="token operator">-</span><span class="token number">8</span>d43<span class="token operator">-</span>ad97923166cb<span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>token 解析结束<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>yml 解析开始<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">:</span><span class="token number">50.060</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController  <span class="token operator">-</span> test4 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">:</span><span class="token number">50.111</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>TestDispatchServlet <span class="token operator">-</span> 解析结果<span class="token punctuation">:</span> <span class="token operator">!!</span>com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a20<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>HelloController$User <span class="token operator">{</span>age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> 张三<span class="token operator">}</span>
 
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>yml 解析结束<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_20-2-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_20-2-2-收获💡" aria-hidden="true">#</a> 20.2.2 收获💡</h3><ol><li>体会参数解析器的作用</li><li>体会返回值处理器的作用</li></ol><h1 id="_21-参数解析器" tabindex="-1"><a class="header-anchor" href="#_21-参数解析器" aria-hidden="true">#</a> 21 参数解析器</h1><h2 id="_21-1-演示-常见参数解析器" tabindex="-1"><a class="header-anchor" href="#_21-1-演示-常见参数解析器" aria-hidden="true">#</a> 21.1 演示 - 常见参数解析器</h2><h3 id="_21-1-1-spring中常见的参数解析器" tabindex="-1"><a class="header-anchor" href="#_21-1-1-spring中常见的参数解析器" aria-hidden="true">#</a> 21.1.1 Spring中常见的参数解析器</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestParamMethodArgumentResolver</span><span class="token annotation punctuation">@abbc908</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestParamMapMethodArgumentResolver</span><span class="token annotation punctuation">@44afefd5</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PathVariableMethodArgumentResolver</span><span class="token annotation punctuation">@9a7a808</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PathVariableMapMethodArgumentResolver</span><span class="token annotation punctuation">@72209d93</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>MatrixVariableMethodArgumentResolver</span><span class="token annotation punctuation">@2687f956</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>MatrixVariableMapMethodArgumentResolver</span><span class="token annotation punctuation">@1ded7b14</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletModelAttributeMethodProcessor</span><span class="token annotation punctuation">@29be7749</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestResponseBodyMethodProcessor</span><span class="token annotation punctuation">@5f84abe8</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestPartMethodArgumentResolver</span><span class="token annotation punctuation">@4650a407</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestHeaderMethodArgumentResolver</span><span class="token annotation punctuation">@30135202</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestHeaderMapMethodArgumentResolver</span><span class="token annotation punctuation">@6a4d7f76</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletCookieValueMethodArgumentResolver</span><span class="token annotation punctuation">@10ec523c</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ExpressionValueMethodArgumentResolver</span><span class="token annotation punctuation">@53dfacba</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>SessionAttributeMethodArgumentResolver</span><span class="token annotation punctuation">@79767781</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestAttributeMethodArgumentResolver</span><span class="token annotation punctuation">@78411116</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletRequestMethodArgumentResolver</span><span class="token annotation punctuation">@aced190</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletResponseMethodArgumentResolver</span><span class="token annotation punctuation">@245a060f</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>HttpEntityMethodProcessor</span><span class="token annotation punctuation">@6edaa77a</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RedirectAttributesMethodArgumentResolver</span><span class="token annotation punctuation">@1e63d216</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ModelMethodProcessor</span><span class="token annotation punctuation">@62ddd21b</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>MapMethodProcessor</span><span class="token annotation punctuation">@16c3ca31</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ErrorsMethodArgumentResolver</span><span class="token annotation punctuation">@2d195ee4</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>SessionStatusMethodArgumentResolver</span><span class="token annotation punctuation">@2d6aca33</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>UriComponentsBuilderMethodArgumentResolver</span><span class="token annotation punctuation">@21ab988f</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PrincipalMethodArgumentResolver</span><span class="token annotation punctuation">@29314cc9</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestParamMethodArgumentResolver</span><span class="token annotation punctuation">@4e38d975</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletModelAttributeMethodProcessor</span><span class="token annotation punctuation">@35f8a9d3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_21-1-2-代码参考" tabindex="-1"><a class="header-anchor" href="#_21-1-2-代码参考" aria-hidden="true">#</a> 21.1.2 代码参考</h3><h4 id="_1、webconfig" tabindex="-1"><a class="header-anchor" href="#_1、webconfig" aria-hidden="true">#</a> 1、WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/10 15:09
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、核心代码" tabindex="-1"><a class="header-anchor" href="#_2、核心代码" aria-hidden="true">#</a> 2、核心代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">DefaultListableBeanFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">DefaultParameterNameDiscoverer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MethodParameter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockPart</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">AntPathMatcher</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExpressionValueMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestHeaderMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParamMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodArgumentResolverComposite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span></span><span class="token class-name">MultipartFile</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">StandardServletMultipartResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">Cookie</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UUID</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestArgumentResolver
 * <span class="token keyword">@description</span> 测试各类参数解析器
 * Spring中常见的参数解析器
 * 目标: 解析控制器方法的参数值
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 常见的参数处理器如下:
 * org.springframework.web.method.annotation.RequestParamMethodArgumentResolver@abbc908
 * org.springframework.web.method.annotation.RequestParamMapMethodArgumentResolver@44afefd5
 * org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver@9a7a808
 * org.springframework.web.servlet.mvc.method.annotation.PathVariableMapMethodArgumentResolver@72209d93
 * org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver@2687f956
 * org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver@1ded7b14
 * org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor@29be7749
 * org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor@5f84abe8
 * org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver@4650a407
 * org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver@30135202
 * org.springframework.web.method.annotation.RequestHeaderMapMethodArgumentResolver@6a4d7f76
 * org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver@10ec523c
 * org.springframework.web.method.annotation.ExpressionValueMethodArgumentResolver@53dfacba
 * org.springframework.web.servlet.mvc.method.annotation.SessionAttributeMethodArgumentResolver@79767781
 * org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver@78411116
 * org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver@aced190
 * org.springframework.web.servlet.mvc.method.annotation.ServletResponseMethodArgumentResolver@245a060f
 * org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor@6edaa77a
 * org.springframework.web.servlet.mvc.method.annotation.RedirectAttributesMethodArgumentResolver@1e63d216
 * org.springframework.web.method.annotation.ModelMethodProcessor@62ddd21b
 * org.springframework.web.method.annotation.MapMethodProcessor@16c3ca31
 * org.springframework.web.method.annotation.ErrorsMethodArgumentResolver@2d195ee4
 * org.springframework.web.method.annotation.SessionStatusMethodArgumentResolver@2d6aca33
 * org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver@21ab988f
 * org.springframework.web.servlet.mvc.method.annotation.PrincipalMethodArgumentResolver@29314cc9
 * org.springframework.web.method.annotation.RequestParamMethodArgumentResolver@4e38d975
 * org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor@35f8a9d3
 * <span class="token keyword">@since</span> 2022/12/10 14:32
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestArgumentResolver</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 准备容器</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取beanFactory</span>
        <span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 构建请求</span>
        <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token function">mockRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 要点1. 控制器方法被封装为 HandlerMethod</span>
        <span class="token class-name">HandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token function">initHandlerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 要点2. 准备对象绑定与类型转换</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> dataBinderFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 要点3. 准备 ModelAndViewContainer 用来存储中间 Model 结果</span>
        <span class="token class-name">ModelAndViewContainer</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndViewContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 要点4. 准备好万能解析器</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> resolver <span class="token operator">=</span> <span class="token function">getHandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 要点5. 解析每个参数值</span>
        <span class="token function">resolverParameters</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> handlerMethod<span class="token punctuation">,</span> dataBinderFactory<span class="token punctuation">,</span> container<span class="token punctuation">,</span> resolver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">request</span>                 模拟请求
     * <span class="token keyword">@param</span> <span class="token parameter">handlerMethod</span>           控制器方法
     * <span class="token keyword">@param</span> <span class="token parameter">dataBinderFactory</span>       对象绑定与类型转换工厂
     * <span class="token keyword">@param</span> <span class="token parameter">container</span>               model容器，ModelAndViewContainer 用来存储中间 Model 结果
     * <span class="token keyword">@param</span> <span class="token parameter">resolver</span>，万能解析器，用于解析各种参数
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resolverParameters</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
                                           <span class="token class-name">HandlerMethod</span> handlerMethod<span class="token punctuation">,</span>
                                           <span class="token class-name">ServletRequestDataBinderFactory</span> dataBinderFactory<span class="token punctuation">,</span>
                                           <span class="token class-name">ModelAndViewContainer</span> container<span class="token punctuation">,</span>
                                           <span class="token class-name">HandlerMethodArgumentResolverComposite</span> resolver<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 遍历参数集合</span>
        <span class="token comment">// 拿到所有的参数信息</span>
        <span class="token class-name">MethodParameter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methodParameters <span class="token operator">=</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> methodParameter <span class="token operator">:</span> methodParameters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> supportsParameter <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">supportsParameter</span><span class="token punctuation">(</span>methodParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">/*
            [DEBUG] 16:00:28.158 [main] c.itheima.a21.TestArgumentResolver  - 0 String null -&gt; 张三
            Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
                at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:177)
                at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:154)
                at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:99)
                at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
                at com.itheima.a21.TestArgumentResolver.main(TestArgumentResolver.java:165)

                这里添加参数名称解析器
             */</span>
            methodParameter<span class="token punctuation">.</span><span class="token function">initParameterNameDiscovery</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>supportsParameter<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 支持此参数的，我们将value解析出来</span>
                <span class="token comment">/*
                    Exception in thread &quot;main&quot; java.lang.IllegalStateException: ModelAttributeMethodProcessor requires ModelAndViewContainer
                        at org.springframework.util.Assert.state(Assert.java:76)
                        at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:129)
                        at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
                        at com.itheima.a21.TestArgumentResolver.main(TestArgumentResolver.java:138)

                        所以需要准备一个ModelAndViewContainer
                 */</span>
                <span class="token class-name">Object</span> value <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">resolveArgument</span><span class="token punctuation">(</span>methodParameter<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> dataBinderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{} {} {} -&gt; {}&quot;</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{} {} {}&quot;</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HandlerMethod</span> <span class="token function">initHandlerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span> <span class="token punctuation">{</span>
        <span class="token class-name">HandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MyController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>
                <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">MultipartFile</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">HttpServletRequest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handlerMethod<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 准备万能解析器
     *
     * <span class="token keyword">@param</span> <span class="token parameter">beanFactory</span> beanFactory
     * <span class="token keyword">@return</span> 万能解析器
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span> <span class="token function">getHandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
        目前存在的问题，一种类型参数需要一种类型解析器，这样需要添加多个参数解析器，解析的时候也需要一个一个判断
        那么是否存在一种万能解析器呢？
        可以满足所有的参数解析需求
        这里就存在一种组合器的设计模式
     */</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 我们只需要往这个万能的解析器中添加对应类型的解析器，这个万能解析器就能正常的工作了</span>
        resolver<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
                <span class="token comment">// 解析@RequestParam</span>
                <span class="token comment">// 第一个参数是bean工厂，第二个参数 false 表示必须有 @RequestParam</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析@PathVariable</span>
                <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析@RequestHeader</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析@CookieValue</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析El表达式</span>
                <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析HttpServletRequest对象</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析带有@ModelAttribute注解的对象, false表示必须要带此注解</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析@RequestBody</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 解析带有@ModelAttribute注解的对象, true表示必须此注解可以省略</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                <span class="token comment">// 这个如果放在new ServletModelAttributeMethodProcessor(true), 后面的话，会因为先解析ModelAttribute，而导致后面的@RequestBody解析失效</span>
                <span class="token comment">// new RequestResponseBodyMethodProcessor(Collections.singletonList(new MappingJackson2HttpMessageConverter()))</span>

                <span class="token comment">// 解析最后不带@RequestParam注解的参数，注意此解析器必须放在最后</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 准备请求参数
     *
     * <span class="token keyword">@return</span> HttpServletRequest
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpServletRequest</span> <span class="token function">mockRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置name1</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;name1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置name2</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;name2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 构建MultipartFile对象</span>
        request<span class="token punctuation">.</span><span class="token function">addPart</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MockPart</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;abc.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;正在学习Spring&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 模拟RestFul请求</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AntPathMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">extractUriTemplateVariables</span><span class="token punctuation">(</span><span class="token string">&quot;/test/{id}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/test/1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">HandlerMapping</span><span class="token punctuation">.</span><span class="token constant">URI_TEMPLATE_VARIABLES_ATTRIBUTE</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置Content-Type</span>
        request<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 请求内容格式为json</span>
        <span class="token comment">// 设置cookie</span>
        request<span class="token punctuation">.</span><span class="token function">setCookies</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置name和age</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置容器内容</span>
        <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token string">&quot;{\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;    \\&quot;name\\&quot; : \\&quot;lisi\\&quot;,\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;    \\&quot;age\\&quot; : 18\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;}&quot;</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
        不能直接返回Request, 因为有文件上传参数，需要使用Multipart
        Exception in thread &quot;main&quot; org.springframework.web.multipart.MultipartException: Current request is not a multipart request
            at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:210)
            at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
            at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
            at com.itheima.a21.TestArgumentResolver.main(TestArgumentResolver.java:107)
         */</span>
        <span class="token comment">// return request;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StandardServletMultipartResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolveMultipart</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span>
                <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;name1&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name1<span class="token punctuation">,</span>            <span class="token comment">// name1=张三</span>
                <span class="token class-name">String</span> name2<span class="token punctuation">,</span>                                   <span class="token comment">// name2=李四</span>
                <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span>                   <span class="token comment">// age=18</span>
                <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;home1&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;\${JAVA_HOME}&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> home1<span class="token punctuation">,</span> <span class="token comment">// Spring获取数据</span>
                <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span>       <span class="token comment">// 文件上传</span>
                <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">,</span>                     <span class="token comment">// /test/1234 /test/{id}</span>
                <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> header<span class="token punctuation">,</span>   <span class="token comment">// 获取请求头中的Content-Type</span>
                <span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">,</span>             <span class="token comment">// 获取Cookie中的token字段</span>
                <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${JAVA_HOME}&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> home2<span class="token punctuation">,</span>            <span class="token comment">// Spring 获取数据 \${} #{}</span>
                <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>                     <span class="token comment">// 解析request, response,session等对象</span>
                <span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">)</span> <span class="token class-name">User</span> user1<span class="token punctuation">,</span>            <span class="token comment">// name=zs&amp;age=18</span>
                <span class="token class-name">User</span> user2<span class="token punctuation">,</span>                                     <span class="token comment">// name=zs&amp;age=18</span>
                <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user3                         <span class="token comment">// json, name=lisi&amp;age=18</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、测试结果" tabindex="-1"><a class="header-anchor" href="#_3、测试结果" aria-hidden="true">#</a> 3、测试结果</h4><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.756</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">0</span> String name1 <span class="token operator">-&gt;</span> 张三 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.763</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">1</span> String name2 <span class="token operator">-&gt;</span> 李四 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.768</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">2</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.770</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">3</span> String home1 <span class="token operator">-&gt;</span> C<span class="token punctuation">:</span>\\DISH\\APP\\JAVA\\Java\\jdk1<span class="token number">.8</span><span class="token punctuation">.</span><span class="token number">0_144</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.770</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">4</span> MultipartFile file <span class="token operator">-&gt;</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span>StandardMultipartHttpServletRequest$StandardMultipartFile@<span class="token number">1722011</span>b 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.772</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">5</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">1234</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.774</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">6</span> String header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.777</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">7</span> String token <span class="token operator">-&gt;</span> cfeae2c6<span class="token operator">-</span><span class="token number">1476</span><span class="token operator">-</span><span class="token number">4</span>faf<span class="token operator">-</span><span class="token number">93</span>fc<span class="token operator">-</span><span class="token number">4</span>a3543c6e5e2 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.778</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">8</span> String home2 <span class="token operator">-&gt;</span> C<span class="token punctuation">:</span>\\DISH\\APP\\JAVA\\Java\\jdk1<span class="token number">.8</span><span class="token punctuation">.</span><span class="token number">0_144</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.778</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">9</span> HttpServletRequest request <span class="token operator">-&gt;</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span>StandardMultipartHttpServletRequest@<span class="token number">11</span>bb571c 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.802</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">10</span> User user1 <span class="token operator">-&gt;</span> TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.806</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">11</span> User user2 <span class="token operator">-&gt;</span> TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">01.879</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> <span class="token number">12</span> User user3 <span class="token operator">-&gt;</span> TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>lisi<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、修改下打印结果代码" tabindex="-1"><a class="header-anchor" href="#_4、修改下打印结果代码" aria-hidden="true">#</a> 4、修改下打印结果代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">request</span>                 模拟请求
     * <span class="token keyword">@param</span> <span class="token parameter">handlerMethod</span>           控制器方法
     * <span class="token keyword">@param</span> <span class="token parameter">dataBinderFactory</span>       对象绑定与类型转换工厂
     * <span class="token keyword">@param</span> <span class="token parameter">container</span>               model容器，ModelAndViewContainer 用来存储中间 Model 结果
     * <span class="token keyword">@param</span> <span class="token parameter">resolver</span>，万能解析器，用于解析各种参数
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">resolverParameters</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
                                           <span class="token class-name">HandlerMethod</span> handlerMethod<span class="token punctuation">,</span>
                                           <span class="token class-name">ServletRequestDataBinderFactory</span> dataBinderFactory<span class="token punctuation">,</span>
                                           <span class="token class-name">ModelAndViewContainer</span> container<span class="token punctuation">,</span>
                                           <span class="token class-name">HandlerMethodArgumentResolverComposite</span> resolver<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 遍历参数集合</span>
        <span class="token comment">// 拿到所有的参数信息</span>
        <span class="token class-name">MethodParameter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methodParameters <span class="token operator">=</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> methodParameter <span class="token operator">:</span> methodParameters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> supportsParameter <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">supportsParameter</span><span class="token punctuation">(</span>methodParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">/*
            [DEBUG] 16:00:28.158 [main] c.itheima.a21.TestArgumentResolver  - 0 String null -&gt; 张三
            Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
                at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:177)
                at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:154)
                at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:99)
                at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
                at com.itheima.a21.TestArgumentResolver.main(TestArgumentResolver.java:165)

                这里添加参数名称解析器
             */</span>
            methodParameter<span class="token punctuation">.</span><span class="token function">initParameterNameDiscovery</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>supportsParameter<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 支持此参数的，我们将value解析出来</span>
                <span class="token comment">/*
                    Exception in thread &quot;main&quot; java.lang.IllegalStateException: ModelAttributeMethodProcessor requires ModelAndViewContainer
                        at org.springframework.util.Assert.state(Assert.java:76)
                        at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:129)
                        at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
                        at com.itheima.a21.TestArgumentResolver.main(TestArgumentResolver.java:138)

                        所以需要准备一个ModelAndViewContainer
                 */</span>
                <span class="token class-name">Object</span> value <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">resolveArgument</span><span class="token punctuation">(</span>methodParameter<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> dataBinderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> annotationNames <span class="token operator">=</span> <span class="token function">getAnnotationSimpleNames</span><span class="token punctuation">(</span>methodParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\\n索引: {}, \\n注解类型: {} \\n参数类型: {}, \\n参数名: {}, \\n解析出的结果: {}, \\n容器中的模型: {}\\n&quot;</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> annotationNames<span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> container<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\\n索引: {}, \\n类型: {}, \\n参数名: {}\\n&quot;</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getAnnotationSimpleNames</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> methodParameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> annotations <span class="token operator">=</span> methodParameter<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> annotationNameBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>annotations <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> annotations<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> annotations<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    annotationNameBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>annotations<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">annotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    annotationNameBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>annotations<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">annotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> annotationNameBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-1、新打印的结果" tabindex="-1"><a class="header-anchor" href="#_4-1、新打印的结果" aria-hidden="true">#</a> 4.1、新打印的结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.802</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @RequestParam 
参数类型<span class="token punctuation">:</span> String<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> name1<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> 张三<span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.812</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span>  
参数类型<span class="token punctuation">:</span> String<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> name2<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> 李四<span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.818</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @RequestParam 
参数类型<span class="token punctuation">:</span> <span class="token keyword">int</span><span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> age<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.819</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @RequestParam 
参数类型<span class="token punctuation">:</span> String<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> home1<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> C<span class="token punctuation">:</span>\\DISH\\APP\\JAVA\\Java\\jdk1<span class="token number">.8</span><span class="token punctuation">.</span><span class="token number">0_144</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.820</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @RequestParam 
参数类型<span class="token punctuation">:</span> MultipartFile<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> file<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span>StandardMultipartHttpServletRequest$StandardMultipartFile@<span class="token number">1722011</span>b<span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.823</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @PathVariable 
参数类型<span class="token punctuation">:</span> <span class="token keyword">int</span><span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> id<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.825</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @RequestHeader 
参数类型<span class="token punctuation">:</span> String<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> header<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> application<span class="token operator">/</span>json<span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.829</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @CookieValue 
参数类型<span class="token punctuation">:</span> String<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> token<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> <span class="token number">7</span>d183278<span class="token operator">-</span><span class="token number">8782</span><span class="token operator">-</span><span class="token number">45e7</span><span class="token operator">-</span>bfbe<span class="token operator">-</span>de056e56fe92<span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.831</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @Value 
参数类型<span class="token punctuation">:</span> String<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> home2<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> C<span class="token punctuation">:</span>\\DISH\\APP\\JAVA\\Java\\jdk1<span class="token number">.8</span><span class="token punctuation">.</span><span class="token number">0_144</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.832</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span>  
参数类型<span class="token punctuation">:</span> HttpServletRequest<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> request<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span>StandardMultipartHttpServletRequest@<span class="token number">6</span>fa34d52<span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.853</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @ModelAttribute 
参数类型<span class="token punctuation">:</span> User<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> user1<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{</span>user1<span class="token operator">=</span>TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BindingResult<span class="token punctuation">.</span>user1<span class="token operator">=</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BeanPropertyBindingResult<span class="token punctuation">:</span> <span class="token number">0</span> errors<span class="token operator">}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.856</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span>  
参数类型<span class="token punctuation">:</span> User<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> user2<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{</span>user1<span class="token operator">=</span>TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BindingResult<span class="token punctuation">.</span>user1<span class="token operator">=</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BeanPropertyBindingResult<span class="token punctuation">:</span> <span class="token number">0</span> errors<span class="token punctuation">,</span> user<span class="token operator">=</span>TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BindingResult<span class="token punctuation">.</span>user<span class="token operator">=</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BeanPropertyBindingResult<span class="token punctuation">:</span> <span class="token number">0</span> errors<span class="token operator">}</span>
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">11.923</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a21<span class="token punctuation">.</span>TestArgumentResolver  <span class="token operator">-</span> 
索引<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span> 
注解类型<span class="token punctuation">:</span> @RequestBody 
参数类型<span class="token punctuation">:</span> User<span class="token punctuation">,</span> 
参数名<span class="token punctuation">:</span> user3<span class="token punctuation">,</span> 
解析出的结果<span class="token punctuation">:</span> TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>lisi<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
容器中的模型<span class="token punctuation">:</span> <span class="token operator">{</span>user1<span class="token operator">=</span>TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BindingResult<span class="token punctuation">.</span>user1<span class="token operator">=</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BeanPropertyBindingResult<span class="token punctuation">:</span> <span class="token number">0</span> errors<span class="token punctuation">,</span> user<span class="token operator">=</span>TestArgumentResolver<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>zs<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BindingResult<span class="token punctuation">.</span>user<span class="token operator">=</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BeanPropertyBindingResult<span class="token punctuation">:</span> <span class="token number">0</span> errors<span class="token operator">}</span>
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_21-1-3-收获💡" tabindex="-1"><a class="header-anchor" href="#_21-1-3-收获💡" aria-hidden="true">#</a> 21.1.3 收获💡</h3><ol><li>初步了解 RequestMappingHandlerAdapter 的调用过程 <ol><li>控制器方法被封装为 HandlerMethod</li><li>准备对象绑定与类型转换</li><li>准备 ModelAndViewContainer 用来存储中间 Model 结果</li><li>解析每个参数值</li></ol></li><li>解析参数依赖的就是各种参数解析器，它们都有两个重要方法 <ul><li>supportsParameter 判断是否支持方法参数</li><li>resolveArgument 解析方法参数</li></ul></li><li>常见参数的解析 <ul><li>@RequestParam</li><li>省略 @RequestParam</li><li>@RequestParam(defaultValue)</li><li>MultipartFile</li><li>@PathVariable</li><li>@RequestHeader</li><li>@CookieValue</li><li>@Value</li><li>HttpServletRequest 等</li><li>@ModelAttribute</li><li>省略 @ModelAttribute</li><li>@RequestBody</li></ul></li><li>组合模式在 Spring 中的体现</li><li>@RequestParam, @CookieValue 等注解中的参数名、默认值, 都可以写成活的, 即从 \${ } #{ }中获取</li></ol><h1 id="_22-参数名解析" tabindex="-1"><a class="header-anchor" href="#_22-参数名解析" aria-hidden="true">#</a> 22 参数名解析</h1><h2 id="_22-1-演示-两种方法获取参数名" tabindex="-1"><a class="header-anchor" href="#_22-1-演示-两种方法获取参数名" aria-hidden="true">#</a> 22.1 演示 - 两种方法获取参数名</h2><h3 id="_22-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_22-1-1-代码参考" aria-hidden="true">#</a> 22.1.1 代码参考</h3><h4 id="_1-我们在项目的目录下-src同级目录-新建一个a22-com-itheima-a22目录" tabindex="-1"><a class="header-anchor" href="#_1-我们在项目的目录下-src同级目录-新建一个a22-com-itheima-a22目录" aria-hidden="true">#</a> 1. 我们在项目的目录下，src同级目录，新建一个<code>a22/com/itheima/a22</code>目录，</h4><figure><img src="`+u+'" alt="image-20221210170956088" tabindex="0" loading="lazy"><figcaption>image-20221210170956088</figcaption></figure><figure><img src="'+r+'" alt="image-20221210171033818" tabindex="0" loading="lazy"><figcaption>image-20221210171033818</figcaption></figure><figure><img src="'+k+'" alt="image-20221210171105253" tabindex="0" loading="lazy"><figcaption>image-20221210171105253</figcaption></figure><figure><img src="'+d+`" alt="image-20221210171150162" tabindex="0" loading="lazy"><figcaption>image-20221210171150162</figcaption></figure><h4 id="_2-测试普通类" tabindex="-1"><a class="header-anchor" href="#_2-测试普通类" aria-hidden="true">#</a> 2. 测试普通类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> Bean1
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/10 16:40
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bean1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-1-然后使用javac对其进行编译-然后我们再看反编译的字节码文件" tabindex="-1"><a class="header-anchor" href="#_2-1-然后使用javac对其进行编译-然后我们再看反编译的字节码文件" aria-hidden="true">#</a> 2.1. 然后使用javac对其进行编译，然后我们再看反编译的字节码文件</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bean1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">int</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-1-1-再使用javap-c-v-查看反编译的字节码" tabindex="-1"><a class="header-anchor" href="#_2-1-1-再使用javap-c-v-查看反编译的字节码" aria-hidden="true">#</a> 2.1.1. 再使用javap -c -v 查看反编译的字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">PS</span> <span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token constant">DISH</span>\\<span class="token class-name">JavaCode</span>\\java\\gitee\\liuyangfang\\java<span class="token operator">-</span>face\\spring<span class="token operator">-</span>demo\\a22\\com\\itheima\\a22<span class="token operator">&gt;</span> javap <span class="token operator">-</span>c <span class="token operator">-</span>v <span class="token punctuation">.</span>\\<span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">C</span><span class="token operator">:</span><span class="token operator">/</span><span class="token constant">DISH</span><span class="token operator">/</span><span class="token class-name">JavaCode</span><span class="token operator">/</span>java<span class="token operator">/</span>gitee<span class="token operator">/</span>liuyangfang<span class="token operator">/</span>java<span class="token operator">-</span>face<span class="token operator">/</span>spring<span class="token operator">-</span>demo<span class="token operator">/</span>a22<span class="token operator">/</span>com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token class-name">Last</span> modified <span class="token number">2022</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span> size <span class="token number">270</span> bytes
  <span class="token constant">MD5</span> checksum <span class="token number">726d</span><span class="token number">4d</span>bfeedfb919b4d338edc749c362
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;Bean1.java&quot;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>Bean1</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SUPER</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
   #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">3.</span>#<span class="token number">12</span>         <span class="token comment">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
   #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">13</span>            <span class="token comment">// com/itheima/a22/Bean1</span>
   #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">14</span>            <span class="token comment">// java/lang/Object</span>
   #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span>
   #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
   #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Code</span>
   #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LineNumberTable</span>
   #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               foo
   #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
  #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
  #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Bean1</span><span class="token punctuation">.</span>java
  #<span class="token number">12</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">4</span><span class="token operator">:</span>#<span class="token number">5</span>          <span class="token comment">// &quot;&lt;init&gt;&quot;:()V</span>
  #<span class="token number">13</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span>
  #<span class="token number">14</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
         <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">12</span><span class="token operator">:</span> <span class="token number">0</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">3</span>
         <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">15</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;Bean1.java&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_1-1-2-结果" tabindex="-1"><a class="header-anchor" href="#_1-1-2-结果" aria-hidden="true">#</a> 1.1.2 结果</h6><blockquote><p>反编译后方法的参数名没有保留原始的名称</p></blockquote><h5 id="_2-2-我们使用javac-parameters再次编译" tabindex="-1"><a class="header-anchor" href="#_2-2-我们使用javac-parameters再次编译" aria-hidden="true">#</a> 2.2. 我们使用<code>javac -parameters</code>再次编译</h5><h6 id="_2-2-1-idea反编译字节码" tabindex="-1"><a class="header-anchor" href="#_2-2-1-idea反编译字节码" aria-hidden="true">#</a> 2.2.1. idea反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bean1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-2-2-javap-c-v-反编译字节码" tabindex="-1"><a class="header-anchor" href="#_2-2-2-javap-c-v-反编译字节码" aria-hidden="true">#</a> 2.2.2. javap -c -v 反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">PS</span> <span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token constant">DISH</span>\\<span class="token class-name">JavaCode</span>\\java\\gitee\\liuyangfang\\java<span class="token operator">-</span>face\\spring<span class="token operator">-</span>demo\\a22\\com\\itheima\\a22<span class="token operator">&gt;</span> javap <span class="token operator">-</span>c <span class="token operator">-</span>v <span class="token punctuation">.</span>\\<span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">C</span><span class="token operator">:</span><span class="token operator">/</span><span class="token constant">DISH</span><span class="token operator">/</span><span class="token class-name">JavaCode</span><span class="token operator">/</span>java<span class="token operator">/</span>gitee<span class="token operator">/</span>liuyangfang<span class="token operator">/</span>java<span class="token operator">-</span>face<span class="token operator">/</span>spring<span class="token operator">-</span>demo<span class="token operator">/</span>a22<span class="token operator">/</span>com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token class-name">Last</span> modified <span class="token number">2022</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span> size <span class="token number">317</span> bytes
  <span class="token constant">MD5</span> checksum d2fbcdf7e9e895e8d6084744442d57c3
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;Bean1.java&quot;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>Bean1</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SUPER</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
   #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">3.</span>#<span class="token number">15</span>         <span class="token comment">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
   #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">16</span>            <span class="token comment">// com/itheima/a22/Bean1</span>
   #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">17</span>            <span class="token comment">// java/lang/Object</span>
   #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span>
   #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
   #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Code</span>
   #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LineNumberTable</span>
   #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               foo
   #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
  #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MethodParameters</span>
  #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               name
  #<span class="token number">12</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               age
  #<span class="token number">13</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
  #<span class="token number">14</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Bean1</span><span class="token punctuation">.</span>java
  #<span class="token number">15</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">4</span><span class="token operator">:</span>#<span class="token number">5</span>          <span class="token comment">// &quot;&lt;init&gt;&quot;:()V</span>
  #<span class="token number">16</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span>
  #<span class="token number">17</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
         <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">12</span><span class="token operator">:</span> <span class="token number">0</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">3</span>
         <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">15</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token class-name">MethodParameters</span><span class="token operator">:</span>
      <span class="token class-name">Name</span>                           <span class="token class-name">Flags</span>
      name
      age
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;Bean1.java&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-3-我们在编译时添加-g" tabindex="-1"><a class="header-anchor" href="#_2-3-我们在编译时添加-g" aria-hidden="true">#</a> 2.3. 我们在编译时添加 -g</h5><h6 id="_2-3-1-idea反编译字节码" tabindex="-1"><a class="header-anchor" href="#_2-3-1-idea反编译字节码" aria-hidden="true">#</a> 2.3.1 idea反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bean1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-3-2-javap-c-v-反编译字节码" tabindex="-1"><a class="header-anchor" href="#_2-3-2-javap-c-v-反编译字节码" aria-hidden="true">#</a> 2.3.2 javap -c -v 反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">PS</span> <span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token constant">DISH</span>\\<span class="token class-name">JavaCode</span>\\java\\gitee\\liuyangfang\\java<span class="token operator">-</span>face\\spring<span class="token operator">-</span>demo\\a22\\com\\itheima\\a22<span class="token operator">&gt;</span> javap <span class="token operator">-</span>c <span class="token operator">-</span>v <span class="token punctuation">.</span>\\<span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">C</span><span class="token operator">:</span><span class="token operator">/</span><span class="token constant">DISH</span><span class="token operator">/</span><span class="token class-name">JavaCode</span><span class="token operator">/</span>java<span class="token operator">/</span>gitee<span class="token operator">/</span>liuyangfang<span class="token operator">/</span>java<span class="token operator">-</span>face<span class="token operator">/</span>spring<span class="token operator">-</span>demo<span class="token operator">/</span>a22<span class="token operator">/</span>com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token class-name">Last</span> modified <span class="token number">2022</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span> size <span class="token number">418</span> bytes
  <span class="token constant">MD5</span> checksum dffc573cfd79c77f15f3774671abfe11
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;Bean1.java&quot;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>Bean1</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SUPER</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
   #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">3.</span>#<span class="token number">19</span>         <span class="token comment">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
   #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">20</span>            <span class="token comment">// com/itheima/a22/Bean1</span>
   #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">21</span>            <span class="token comment">// java/lang/Object</span>
   #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span>
   #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
   #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Code</span>
   #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LineNumberTable</span>
   #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LocalVariableTable</span>
   #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token keyword">this</span>
  #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Lcom</span><span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span><span class="token punctuation">;</span>
  #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               foo
  #<span class="token number">12</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
  #<span class="token number">13</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               name
  #<span class="token number">14</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
  #<span class="token number">15</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               age
  #<span class="token number">16</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">I</span>
  #<span class="token number">17</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
  #<span class="token number">18</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Bean1</span><span class="token punctuation">.</span>java
  #<span class="token number">19</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">4</span><span class="token operator">:</span>#<span class="token number">5</span>          <span class="token comment">// &quot;&lt;init&gt;&quot;:()V</span>
  #<span class="token number">20</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span>
  #<span class="token number">21</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>Bean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
         <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">12</span><span class="token operator">:</span> <span class="token number">0</span>
      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>
        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>
            <span class="token number">0</span>       <span class="token number">5</span>     <span class="token number">0</span>  <span class="token keyword">this</span>   <span class="token class-name">Lcom</span><span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">3</span>
         <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">15</span><span class="token operator">:</span> <span class="token number">0</span>
      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>
        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>
            <span class="token number">0</span>       <span class="token number">1</span>     <span class="token number">0</span>  <span class="token keyword">this</span>   <span class="token class-name">Lcom</span><span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">Bean1</span><span class="token punctuation">;</span>
            <span class="token number">0</span>       <span class="token number">1</span>     <span class="token number">1</span>  name   <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
            <span class="token number">0</span>       <span class="token number">1</span>     <span class="token number">2</span>   age   <span class="token class-name">I</span>
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;Bean1.java&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-编译接口" tabindex="-1"><a class="header-anchor" href="#_3-编译接口" aria-hidden="true">#</a> 3. 编译接口</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> MyInterface
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@date</span> 2022/12/10 16:55
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyInterface</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-1-javac-直接编译" tabindex="-1"><a class="header-anchor" href="#_3-1-javac-直接编译" aria-hidden="true">#</a> 3.1 javac 直接编译</h5><h6 id="_3-1-1-idea反编译字节码" tabindex="-1"><a class="header-anchor" href="#_3-1-1-idea反编译字节码" aria-hidden="true">#</a> 3.1.1 idea反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyInterface</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">int</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_3-1-2-javap-c-v-反编译字节码" tabindex="-1"><a class="header-anchor" href="#_3-1-2-javap-c-v-反编译字节码" aria-hidden="true">#</a> 3.1.2 javap -c -v 反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">PS</span> <span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token constant">DISH</span>\\<span class="token class-name">JavaCode</span>\\java\\gitee\\liuyangfang\\java<span class="token operator">-</span>face\\spring<span class="token operator">-</span>demo\\a22\\com\\itheima\\a22<span class="token operator">&gt;</span> javap <span class="token operator">-</span>c <span class="token operator">-</span>v <span class="token punctuation">.</span>\\<span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">C</span><span class="token operator">:</span><span class="token operator">/</span><span class="token constant">DISH</span><span class="token operator">/</span><span class="token class-name">JavaCode</span><span class="token operator">/</span>java<span class="token operator">/</span>gitee<span class="token operator">/</span>liuyangfang<span class="token operator">/</span>java<span class="token operator">-</span>face<span class="token operator">/</span>spring<span class="token operator">-</span>demo<span class="token operator">/</span>a22<span class="token operator">/</span>com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token class-name">Last</span> modified <span class="token number">2022</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span> size <span class="token number">158</span> bytes
  <span class="token constant">MD5</span> checksum decc7ffc758783df7b9215f7029ebba5
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;MyInterface.java&quot;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>MyInterface</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_INTERFACE</span><span class="token punctuation">,</span> <span class="token constant">ACC_ABSTRACT</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
  #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">7</span>              <span class="token comment">// com/itheima/a22/MyInterface</span>
  #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">8</span>              <span class="token comment">// java/lang/Object</span>
  #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               foo
  #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
  #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
  #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MyInterface</span><span class="token punctuation">.</span>java
  #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">MyInterface</span>
  #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_ABSTRACT</span>
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;MyInterface.java&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-javac-parameters-编译" tabindex="-1"><a class="header-anchor" href="#_3-2-javac-parameters-编译" aria-hidden="true">#</a> 3.2 javac -parameters 编译</h5><h6 id="_3-2-1-idea-反编译字节码" tabindex="-1"><a class="header-anchor" href="#_3-2-1-idea-反编译字节码" aria-hidden="true">#</a> 3.2.1 idea 反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyInterface</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_3-2-2-javap-c-v-反编译字节码" tabindex="-1"><a class="header-anchor" href="#_3-2-2-javap-c-v-反编译字节码" aria-hidden="true">#</a> 3.2.2 javap -c -v 反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">PS</span> <span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token constant">DISH</span>\\<span class="token class-name">JavaCode</span>\\java\\gitee\\liuyangfang\\java<span class="token operator">-</span>face\\spring<span class="token operator">-</span>demo\\a22\\com\\itheima\\a22<span class="token operator">&gt;</span> javap <span class="token operator">-</span>c <span class="token operator">-</span>v <span class="token punctuation">.</span>\\<span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">C</span><span class="token operator">:</span><span class="token operator">/</span><span class="token constant">DISH</span><span class="token operator">/</span><span class="token class-name">JavaCode</span><span class="token operator">/</span>java<span class="token operator">/</span>gitee<span class="token operator">/</span>liuyangfang<span class="token operator">/</span>java<span class="token operator">-</span>face<span class="token operator">/</span>spring<span class="token operator">-</span>demo<span class="token operator">/</span>a22<span class="token operator">/</span>com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token class-name">Last</span> modified <span class="token number">2022</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span> size <span class="token number">205</span> bytes
  <span class="token constant">MD5</span> checksum <span class="token number">43690d</span><span class="token number">4f</span>b1734e71f3ae7576731a8c30
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;MyInterface.java&quot;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>MyInterface</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_INTERFACE</span><span class="token punctuation">,</span> <span class="token constant">ACC_ABSTRACT</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
   #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">10</span>            <span class="token comment">// com/itheima/a22/MyInterface</span>
   #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">11</span>            <span class="token comment">// java/lang/Object</span>
   #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               foo
   #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
   #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MethodParameters</span>
   #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               name
   #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               age
   #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
   #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MyInterface</span><span class="token punctuation">.</span>java
  #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">MyInterface</span>
  #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_ABSTRACT</span>
    <span class="token class-name">MethodParameters</span><span class="token operator">:</span>
      <span class="token class-name">Name</span>                           <span class="token class-name">Flags</span>
      name
      age
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;MyInterface.java&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3-javac-g-编译" tabindex="-1"><a class="header-anchor" href="#_3-3-javac-g-编译" aria-hidden="true">#</a> 3.3 javac -g 编译</h5><h6 id="_3-3-1-idea反编译字节码" tabindex="-1"><a class="header-anchor" href="#_3-3-1-idea反编译字节码" aria-hidden="true">#</a> 3.3.1 idea反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyInterface</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">int</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_3-3-2-javap-c-v-反编译字节码" tabindex="-1"><a class="header-anchor" href="#_3-3-2-javap-c-v-反编译字节码" aria-hidden="true">#</a> 3.3.2 javap -c -v 反编译字节码</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">PS</span> <span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token constant">DISH</span>\\<span class="token class-name">JavaCode</span>\\java\\gitee\\liuyangfang\\java<span class="token operator">-</span>face\\spring<span class="token operator">-</span>demo\\a22\\com\\itheima\\a22<span class="token operator">&gt;</span> javap <span class="token operator">-</span>c <span class="token operator">-</span>v <span class="token punctuation">.</span>\\<span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">C</span><span class="token operator">:</span><span class="token operator">/</span><span class="token constant">DISH</span><span class="token operator">/</span><span class="token class-name">JavaCode</span><span class="token operator">/</span>java<span class="token operator">/</span>gitee<span class="token operator">/</span>liuyangfang<span class="token operator">/</span>java<span class="token operator">-</span>face<span class="token operator">/</span>spring<span class="token operator">-</span>demo<span class="token operator">/</span>a22<span class="token operator">/</span>com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token class-name">Last</span> modified <span class="token number">2022</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span> size <span class="token number">158</span> bytes
  <span class="token constant">MD5</span> checksum decc7ffc758783df7b9215f7029ebba5
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;MyInterface.java&quot;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span></span>MyInterface</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_INTERFACE</span><span class="token punctuation">,</span> <span class="token constant">ACC_ABSTRACT</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
  #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">7</span>              <span class="token comment">// com/itheima/a22/MyInterface</span>
  #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">8</span>              <span class="token comment">// java/lang/Object</span>
  #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               foo
  #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
  #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
  #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MyInterface</span><span class="token punctuation">.</span>java
  #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>itheima<span class="token operator">/</span>a22<span class="token operator">/</span><span class="token class-name">MyInterface</span>
  #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_ABSTRACT</span>
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;MyInterface.java&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-代码测试" tabindex="-1"><a class="header-anchor" href="#_4-代码测试" aria-hidden="true">#</a> 4. 代码测试</h4><h5 id="_4-1-测试普通类" tabindex="-1"><a class="header-anchor" href="#_4-1-测试普通类" aria-hidden="true">#</a> 4.1. 测试普通类</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a08<span class="token punctuation">.</span>sub<span class="token punctuation">.</span></span><span class="token class-name">E</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">LocalVariableTableParameterNameDiscoverer</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Parameter</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestParameters
 * <span class="token keyword">@description</span> 获取方法的参数名称
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 目标: 如何获取方法参数名, 注意把 a22 目录添加至模块的类路径
 * 1. a22 不在 src 是避免 idea 自动编译它下面的类
 * 2. spring boot 在编译时会加 -parameters
 * 3. 大部分 IDE 编译时都会加 -g
 * <span class="token keyword">@since</span> 2022/12/10 17:14
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestParameters</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">printParameters</span><span class="token punctuation">(</span><span class="token class-name">Bean1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printParameters</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchMethodException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 通过反射来获取方法参数名</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;反射获取开始&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Parameter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameters <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parameters <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> parameters<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Parameter</span> parameter <span class="token operator">:</span> parameters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>parameter<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;反射获取结束&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\\n\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2 通过本地变量表 LocalVariableTable</span>
        <span class="token class-name">LocalVariableTableParameterNameDiscoverer</span> discoverer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocalVariableTableParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;通过本地变量表 LocalVariableTable开始&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterNames <span class="token operator">=</span> discoverer<span class="token punctuation">.</span><span class="token function">getParameterNames</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parameterNames <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> parameterNames<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> parameterName <span class="token operator">:</span> parameterNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>parameterName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;通过本地变量表 LocalVariableTable结束&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
            
    	<span class="token comment">/*
            学到了什么
                a. 如果编译时添加了 -parameters 可以生成参数表, 反射时就可以拿到参数名
                b. 如果编译时添加了 -g 可以生成调试信息, 但分为两种情况
                    1. 普通类, 会包含局部变量表, 用 asm 可以拿到参数名
                    2. 接口, 不会包含局部变量表, 无法获得参数名 (这也是 MyBatis 在实现 Mapper 接口时为何要提供 @Param 注解来辅助获得参数名)
         */</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-1-1-普通javac" tabindex="-1"><a class="header-anchor" href="#_4-1-1-普通javac" aria-hidden="true">#</a> 4.1.1 普通javac</h6><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
arg0
arg1
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>



<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-1-2-javac-parameters" tabindex="-1"><a class="header-anchor" href="#_4-1-2-javac-parameters" aria-hidden="true">#</a> 4.1.2 javac -parameters</h6><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
name
age
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>



<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-1-3-javac-g" tabindex="-1"><a class="header-anchor" href="#_4-1-3-javac-g" aria-hidden="true">#</a> 4.1.3 javac -g</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>反射获取开始<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>
arg0
arg1
<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>反射获取结束<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>



<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>通过本地变量表 <span class="token class-name">LocalVariableTable</span>开始<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>
name
age
<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>通过本地变量表 <span class="token class-name">LocalVariableTable</span>结束<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-2-测试接口" tabindex="-1"><a class="header-anchor" href="#_4-2-测试接口" aria-hidden="true">#</a> 4.2 测试接口</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">printParameters</span><span class="token punctuation">(</span><span class="token class-name">MyInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-2-1-javac" tabindex="-1"><a class="header-anchor" href="#_4-2-1-javac" aria-hidden="true">#</a> 4.2.1 javac</h6><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
arg0
arg1
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>



<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-2-2-javac-parameters" tabindex="-1"><a class="header-anchor" href="#_4-2-2-javac-parameters" aria-hidden="true">#</a> 4.2.2 javac -parameters</h6><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
name
age
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>



<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-2-3-javac-g" tabindex="-1"><a class="header-anchor" href="#_4-2-3-javac-g" aria-hidden="true">#</a> 4.2.3 javac -g</h6><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
arg0
arg1
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>反射获取结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>



<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable开始<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>通过本地变量表 LocalVariableTable结束<span class="token operator">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_22-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_22-1-2-收获💡" aria-hidden="true">#</a> 22.1.2 收获💡</h3><ol><li>如果编译时添加了 -parameters 可以生成参数表, 反射时就可以拿到参数名</li><li>如果编译时添加了 -g 可以生成调试信息, 但分为两种情况 <ul><li>普通类, 会包含局部变量表, 用 asm 可以拿到参数名</li><li>接口, 不会包含局部变量表, 无法获得参数名 <ul><li>这也是 MyBatis 在实现 Mapper 接口时为何要提供 @Param 注解来辅助获得参数名</li></ul></li></ul></li></ol><h1 id="_23-对象绑定与类型转换" tabindex="-1"><a class="header-anchor" href="#_23-对象绑定与类型转换" aria-hidden="true">#</a> 23 对象绑定与类型转换</h1><h2 id="_23-1-底层第一套转换接口与实现-spring实现" tabindex="-1"><a class="header-anchor" href="#_23-1-底层第一套转换接口与实现-spring实现" aria-hidden="true">#</a> 23.1 底层第一套转换接口与实现（Spring实现）</h2><figure><img src="`+m+'" alt="image-20230403160432012" tabindex="0" loading="lazy"><figcaption>image-20230403160432012</figcaption></figure><ul><li>Printer 把其它类型转为 String</li><li>Parser 把 String 转为其它类型</li><li>Formatter 综合 Printer 与 Parser 功能</li><li>Converter 把类型 S 转为类型 T</li><li>Printer、Parser、Converter 经过适配转换成 GenericConverter 放入 Converters 集合</li><li>FormattingConversionService 利用其它们实现转换</li></ul><h2 id="_23-2-底层第二套转换接口-jdk实现" tabindex="-1"><a class="header-anchor" href="#_23-2-底层第二套转换接口-jdk实现" aria-hidden="true">#</a> 23.2 底层第二套转换接口（JDK实现）</h2><figure><img src="'+v+'" alt="image-20230403160449586" tabindex="0" loading="lazy"><figcaption>image-20230403160449586</figcaption></figure><ul><li>PropertyEditor 把 String 与其它类型相互转换</li><li>PropertyEditorRegistry 可以注册多个 PropertyEditor 对象</li><li>与第一套接口直接可以通过 FormatterPropertyEditorAdapter 来进行适配</li></ul><h2 id="_23-3-高层接口与实现" tabindex="-1"><a class="header-anchor" href="#_23-3-高层接口与实现" aria-hidden="true">#</a> 23.3 高层接口与实现</h2><figure><img src="'+b+`" alt="image-20230403160503729" tabindex="0" loading="lazy"><figcaption>image-20230403160503729</figcaption></figure><ul><li>它们都实现了 TypeConverter 这个高层转换接口，在转换时，会用到 TypeConverterDelegate 委派ConversionService 与 PropertyEditorRegistry 真正执行转换（Facade 门面模式） <ul><li>首先看是否有自定义转换器, @InitBinder 添加的即属于这种 (用了适配器模式把 Formatter 转为需要的 PropertyEditor)</li><li>再看有没有 ConversionService 转换</li><li>再利用默认的 PropertyEditor 转换</li><li>最后有一些特殊处理</li></ul></li><li>SimpleTypeConverter 仅做类型转换</li><li>BeanWrapperImpl 为 bean 的属性赋值，当需要时做类型转换，走 Property</li><li>DirectFieldAccessor 为 bean 的属性赋值，当需要时做类型转换，走 Field</li><li>ServletRequestDataBinder 为 bean 的属性执行绑定，当需要时做类型转换，根据 directFieldAccess 选择走 Property 还是 Field，具备校验与获取校验结果功能</li></ul><h2 id="_23-4-演示1-类型转换与数据绑定" tabindex="-1"><a class="header-anchor" href="#_23-4-演示1-类型转换与数据绑定" aria-hidden="true">#</a> 23.4 演示1 - 类型转换与数据绑定</h2><h3 id="_23-4-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_23-4-1-代码参考" aria-hidden="true">#</a> 23.4.1 代码参考</h3><h4 id="_1-simpletypeconverter-简单类型转换" tabindex="-1"><a class="header-anchor" href="#_1-simpletypeconverter-简单类型转换" aria-hidden="true">#</a> 1 SimpleTypeConverter（简单类型转换）</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a23</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">SimpleTypeConverter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestSimpleConverter
 * <span class="token keyword">@description</span> SimpleTypeConverter 仅做类型转换
 * <span class="token keyword">@since</span> 2022/12/11 11:20
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSimpleConverter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SimpleTypeConverter</span> typeConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleTypeConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Integer</span> result1 <span class="token operator">=</span> typeConverter<span class="token punctuation">.</span><span class="token function">convertIfNecessary</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;result1: {}&quot;</span><span class="token punctuation">,</span> result1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Date</span> date <span class="token operator">=</span> typeConverter<span class="token punctuation">.</span><span class="token function">convertIfNecessary</span><span class="token punctuation">(</span><span class="token string">&quot;1993/04/15&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;date: {}&quot;</span><span class="token punctuation">,</span> date<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-1-测试结果" tabindex="-1"><a class="header-anchor" href="#_1-1-测试结果" aria-hidden="true">#</a> 1.1 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">14.861</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a23<span class="token punctuation">.</span>TestSimpleConverter <span class="token operator">-</span> result1<span class="token punctuation">:</span> <span class="token number">123</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">14.986</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a23<span class="token punctuation">.</span>TestSimpleConverter <span class="token operator">-</span> date<span class="token punctuation">:</span> Thu Apr <span class="token number">15</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">1993</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-beanwrapperimpl-为-bean-的属性赋值-当需要时做类型转换-走-property-getter-setter" tabindex="-1"><a class="header-anchor" href="#_2-beanwrapperimpl-为-bean-的属性赋值-当需要时做类型转换-走-property-getter-setter" aria-hidden="true">#</a> 2 BeanWrapperImpl 为 bean 的属性赋值，当需要时做类型转换，走 Property (getter setter)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">BeanWrapperImpl</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestBeanWrapper
 * <span class="token keyword">@description</span>  BeanWrapperImpl 为 bean 的属性赋值，当需要时做类型转换，走 Property (getter setter)
 * <span class="token keyword">@since</span> 2022/12/11 11:32
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBeanWrapper</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyBean</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanWrapperImpl</span> beanWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanWrapperImpl</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanWrapper<span class="token punctuation">.</span><span class="token function">setPropertyValue</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanWrapper<span class="token punctuation">.</span><span class="token function">setPropertyValue</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanWrapper<span class="token punctuation">.</span><span class="token function">setPropertyValue</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1993/04/15&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyBean</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-1-测试结果" tabindex="-1"><a class="header-anchor" href="#_2-1-测试结果" aria-hidden="true">#</a> 2.1 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">52.350</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>TestBeanWrapper     <span class="token operator">-</span> target<span class="token punctuation">:</span> TestBeanWrapper<span class="token punctuation">.</span><span class="token function">MyBean</span><span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">=</span>zhangsan<span class="token punctuation">,</span> birthday<span class="token operator">=</span>Thu Apr <span class="token number">15</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">1993</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-directfieldaccessor-为-bean-的属性赋值-当需要时做类型转换-走-field-反射直接获取field" tabindex="-1"><a class="header-anchor" href="#_3-directfieldaccessor-为-bean-的属性赋值-当需要时做类型转换-走-field-反射直接获取field" aria-hidden="true">#</a> 3 DirectFieldAccessor 为 bean 的属性赋值，当需要时做类型转换，走 Field (反射直接获取Field)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">ToString</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">DirectFieldAccessor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestDirectFieldAccessor
 * <span class="token keyword">@description</span> 为 bean 的属性赋值，当需要时做类型转换，走 Field (反射直接获取Field)
 * <span class="token keyword">@since</span> 2022/12/11 11:36
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDirectFieldAccessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyBean</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DirectFieldAccessor</span> directFieldAccessor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DirectFieldAccessor</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        directFieldAccessor<span class="token punctuation">.</span><span class="token function">setPropertyValue</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        directFieldAccessor<span class="token punctuation">.</span><span class="token function">setPropertyValue</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        directFieldAccessor<span class="token punctuation">.</span><span class="token function">setPropertyValue</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2022/12/11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ToString</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyBean</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-1-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-1-测试结果" aria-hidden="true">#</a> 3.1 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token number">54</span><span class="token punctuation">:</span><span class="token number">22.706</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>TestDirectFieldAccessor     <span class="token operator">-</span> target<span class="token punctuation">:</span> TestDirectFieldAccessor<span class="token punctuation">.</span><span class="token function">MyBean</span><span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">=</span>lisi<span class="token punctuation">,</span> birthday<span class="token operator">=</span>Sun Dec <span class="token number">11</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2022</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-servletrequestdatabinder-为-bean-的属性执行绑定-当需要时做类型转换-根据-directfieldaccess-选择走-property-还是-field-具备校验与获取校验结果功能" tabindex="-1"><a class="header-anchor" href="#_4-servletrequestdatabinder-为-bean-的属性执行绑定-当需要时做类型转换-根据-directfieldaccess-选择走-property-还是-field-具备校验与获取校验结果功能" aria-hidden="true">#</a> 4 ServletRequestDataBinder 为 bean 的属性执行绑定，当需要时做类型转换，根据 directFieldAccess 选择走 Property 还是 Field，具备校验与获取校验结果功能</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Setter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">ToString</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">MutablePropertyValues</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">DataBinder</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestDataBinder
 * <span class="token keyword">@description</span> ServletRequestDataBinder 为 bean 的属性执行绑定，当需要时做类型转换，
 * 根据 directFieldAccess 选择走 Property 还是 Field，具备校验与获取校验结果功能
 * <span class="token keyword">@since</span> 2022/12/11 11:55
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDataBinder</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;默认为Property start&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyBean1</span> target1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyBean1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DataBinder</span> dataBinder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataBinder</span><span class="token punctuation">(</span>target1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MutablePropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutablePropertyValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        propertyValues<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        propertyValues<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        propertyValues<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2022/12/11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        dataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target1: {}&quot;</span><span class="token punctuation">,</span> target1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;默认为Property end&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;设置为 Field start&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyBean2</span> target2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyBean2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DataBinder</span> dataBinder2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataBinder</span><span class="token punctuation">(</span>target2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataBinder2<span class="token punctuation">.</span><span class="token function">initDirectFieldAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataBinder2<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target2: {}&quot;</span><span class="token punctuation">,</span> target2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;设置为 Field end&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ToString</span>
    <span class="token annotation punctuation">@Getter</span>
    <span class="token annotation punctuation">@Setter</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyBean1</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ToString</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyBean2</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_4-1-测试结果" tabindex="-1"><a class="header-anchor" href="#_4-1-测试结果" aria-hidden="true">#</a> 4.1 测试结果</h6><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>默认为Property start<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">03</span><span class="token punctuation">:</span><span class="token number">39.563</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>TestDataBinder      <span class="token operator">-</span> target1<span class="token punctuation">:</span> TestDataBinder<span class="token punctuation">.</span><span class="token function">MyBean1</span><span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">=</span>lisi<span class="token punctuation">,</span> birthday<span class="token operator">=</span>Sun Dec <span class="token number">11</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2022</span><span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>默认为Property <span class="token keyword">end</span><span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>设置为 Field start<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">03</span><span class="token punctuation">:</span><span class="token number">39.578</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>TestDataBinder      <span class="token operator">-</span> target2<span class="token punctuation">:</span> TestDataBinder<span class="token punctuation">.</span><span class="token function">MyBean2</span><span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">=</span>lisi<span class="token punctuation">,</span> birthday<span class="token operator">=</span>Sun Dec <span class="token number">11</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2022</span><span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>设置为 Field <span class="token keyword">end</span><span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>两者的主要区别是有无getset方法</p><p>走默认的Property 需要属性提供getter 和 setter方法</p><p>而走Field 则无需getter 和 setter方法而是直接访问Field</p></blockquote><h4 id="_5-web环境下的databinder" tabindex="-1"><a class="header-anchor" href="#_5-web环境下的databinder" aria-hidden="true">#</a> 5 Web环境下的DataBinder</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestParameterPropertyValues</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestServletDataBinder
 * <span class="token keyword">@description</span> 测试Web环境下的数据绑定
 * <span class="token keyword">@since</span> 2022/12/11 12:45
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServletDataBinder</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Target1</span> target1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Target1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// web 环境下数据绑定</span>
        <span class="token class-name">ServletRequestDataBinder</span> dataBinder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinder</span><span class="token punctuation">(</span>target1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletRequest</span> httpServletRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpServletRequest<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpServletRequest<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpServletRequest<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1999/12/12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ServletRequestParameterPropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestParameterPropertyValues</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletRequestWrapper</span><span class="token punctuation">(</span>httpServletRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> target1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Target1</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-1-测试结果" tabindex="-1"><a class="header-anchor" href="#_5-1-测试结果" aria-hidden="true">#</a> 5.1 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">51.542</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>TestServletDataBinder <span class="token operator">-</span> TestServletDataBinder<span class="token punctuation">.</span><span class="token function">Target1</span><span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">=</span>张三<span class="token punctuation">,</span> birthday<span class="token operator">=</span>Sun Dec <span class="token number">12</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">1999</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_23-4-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_23-4-2-收获💡" aria-hidden="true">#</a> 23.4.2 收获💡</h3><p>基本的类型转换与数据绑定用法</p><ul><li>SimpleTypeConverter</li><li>BeanWrapperImpl</li><li>DirectFieldAccessor</li><li>ServletRequestDataBinder</li></ul><h2 id="_23-5-演示2-数据绑定工厂" tabindex="-1"><a class="header-anchor" href="#_23-5-演示2-数据绑定工厂" aria-hidden="true">#</a> 23.5 演示2 - 数据绑定工厂</h2><h3 id="_23-5-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_23-5-1-代码参考" aria-hidden="true">#</a> 23.5.1 代码参考</h3><h4 id="_1-准备代码" tabindex="-1"><a class="header-anchor" href="#_1-准备代码" aria-hidden="true">#</a> 1 准备代码</h4><h5 id="_1-1-user" tabindex="-1"><a class="header-anchor" href="#_1-1-user" aria-hidden="true">#</a> 1.1 User</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Address</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> User
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/11 14:50
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Address</span> address<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-address" tabindex="-1"><a class="header-anchor" href="#_1-2-address" aria-hidden="true">#</a> 1.2 Address</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> Address
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/11 14:51
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-原始工厂" tabindex="-1"><a class="header-anchor" href="#_2-原始工厂" aria-hidden="true">#</a> 2 原始工厂</h4><h5 id="_2-1-测试代码" tabindex="-1"><a class="header-anchor" href="#_2-1-测试代码" aria-hidden="true">#</a> 2.1 测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestParameterPropertyValues</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestDataBinderFactory</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestServletDataBinderFactoryV1
 * <span class="token keyword">@description</span> 原始工厂
 * <span class="token keyword">@since</span> 2022/12/11 14:52
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServletDataBinderFactoryV1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备请求对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2009|09|01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;address.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;江西&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 准备目标对象</span>
        <span class="token class-name">User</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 将请求对象封装成ServletRequestParameterPropertyValues</span>
        <span class="token class-name">ServletRequestParameterPropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestParameterPropertyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 创建原始工厂，未添加任何方法和初始化器</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 创建绑定器对象</span>
        <span class="token class-name">WebDataBinder</span> webDataBinder <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createBinder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6 将PropertyValues与数据绑定器对象进行绑定</span>
        webDataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 7 处理结果</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_2-2-测试结果" aria-hidden="true">#</a> 2.2 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">02</span><span class="token punctuation">:</span><span class="token number">28.729</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>TestServletDataBinderFactoryV1 <span class="token operator">-</span> target<span class="token punctuation">:</span> <span class="token function">User</span><span class="token punctuation">(</span>birthday<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token function">Address</span><span class="token punctuation">(</span>name<span class="token operator">=</span>江西<span class="token punctuation">)</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>不能解析特殊的时间格式，</p><p>但是能解析嵌套对象的属性</p></blockquote><h4 id="_3-使用-initbinder" tabindex="-1"><a class="header-anchor" href="#_3-使用-initbinder" aria-hidden="true">#</a> 3 使用 @InitBinder</h4><h5 id="_3-1-mydatebinder" tabindex="-1"><a class="header-anchor" href="#_3-1-mydatebinder" aria-hidden="true">#</a> 3.1 MyDateBinder</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>binder</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">CustomDateFormatter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">InitBinder</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> MyDateBinder
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/11 15:11
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDateBinder</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@InitBinder</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dateResolver</span><span class="token punctuation">(</span><span class="token class-name">WebDataBinder</span> webDataBinder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 添加自定义的日期解析器</span>
        webDataBinder<span class="token punctuation">.</span><span class="token function">addCustomFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy|MM|dd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;使用@InitBinder进行解析&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-customdateformatter" tabindex="-1"><a class="header-anchor" href="#_3-2-customdateformatter" aria-hidden="true">#</a> 3.2 CustomDateFormatter</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>format</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">Formatter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">ParseException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Locale</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> CustomDateFormatter
 * <span class="token keyword">@description</span> 自定义的日期类型解析器
 * <span class="token keyword">@since</span> 2022/12/11 15:05
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomDateFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">Formatter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Date</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 日期解析格式，构造时传入
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> pattern<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 调试信息，构造时传入
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> descInfo<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token class-name">String</span> pattern<span class="token punctuation">,</span> <span class="token class-name">String</span> descInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pattern <span class="token operator">=</span> pattern<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>descInfo <span class="token operator">=</span> descInfo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ParseException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;parse enter..., {}&quot;</span><span class="token punctuation">,</span> descInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SimpleDateFormat</span> simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">Date</span> object<span class="token punctuation">,</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SimpleDateFormat</span> simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3-测试代码" tabindex="-1"><a class="header-anchor" href="#_3-3-测试代码" aria-hidden="true">#</a> 3.3 测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>binder<span class="token punctuation">.</span></span><span class="token class-name">MyDateBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestParameterPropertyValues</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">InvocableHandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestDataBinderFactory</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestServletDataBinderFactoryV2
 * <span class="token keyword">@description</span> 使用 @InitBinder对象
 * <span class="token keyword">@since</span> 2022/12/11 15:03
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServletDataBinderFactoryV2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备请求对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2009|09|01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;address.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;江西&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 准备目标对象</span>
        <span class="token class-name">User</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 将请求对象封装成ServletRequestParameterPropertyValues</span>
        <span class="token class-name">ServletRequestParameterPropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestParameterPropertyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.1 封装binderMethod</span>
        <span class="token class-name">InvocableHandlerMethod</span> method <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">MyDateBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MyDateBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;dateResolver&quot;</span><span class="token punctuation">,</span> <span class="token class-name">WebDataBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 创建原始工厂，添加@InitBinder标注的方法</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> factory
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 创建绑定器对象</span>
        <span class="token class-name">WebDataBinder</span> webDataBinder <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createBinder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6 将PropertyValues与数据绑定器对象进行绑定</span>
        webDataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 7 处理结果</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-4-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-4-测试结果" aria-hidden="true">#</a> 3.4 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token number">23.950</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>format<span class="token punctuation">.</span>CustomDateFormatter  <span class="token operator">-</span> parse enter<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> 使用@InitBinder进行解析 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token number">23.960</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>TestServletDataBinderFactoryV2 <span class="token operator">-</span> target<span class="token punctuation">:</span> <span class="token function">User</span><span class="token punctuation">(</span>birthday<span class="token operator">=</span>Tue Sep <span class="token number">01</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2009</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token function">Address</span><span class="token punctuation">(</span>name<span class="token operator">=</span>江西<span class="token punctuation">)</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-使用convertservice" tabindex="-1"><a class="header-anchor" href="#_4-使用convertservice" aria-hidden="true">#</a> 4 使用ConvertService</h4><h5 id="_4-1-测试代码" tabindex="-1"><a class="header-anchor" href="#_4-1-测试代码" aria-hidden="true">#</a> 4.1 测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">CustomDateFormatter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>format<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">FormattingConversionService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestParameterPropertyValues</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableWebBindingInitializer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestDataBinderFactory</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestServletDataBinderFactoryV3
 * <span class="token keyword">@description</span> 使用ConversionService
 * <span class="token keyword">@since</span> 2022/12/11 14:52
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServletDataBinderFactoryV3</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备请求对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2009|09|01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;address.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;江西&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 准备目标对象</span>
        <span class="token class-name">User</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 将请求对象封装成ServletRequestParameterPropertyValues</span>
        <span class="token class-name">ServletRequestParameterPropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestParameterPropertyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.1 构建一个ConversionService</span>
        <span class="token class-name">FormattingConversionService</span> conversionService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormattingConversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.2 核心步骤</span>
        conversionService<span class="token punctuation">.</span><span class="token function">addFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy|MM|dd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;使用ConversionService进行解析&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.3 准备WebBindingInitializer</span>
        <span class="token class-name">ConfigurableWebBindingInitializer</span> initializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurableWebBindingInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initializer<span class="token punctuation">.</span><span class="token function">setConversionService</span><span class="token punctuation">(</span>conversionService<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 创建原始工厂，添加初始化器</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> initializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 创建绑定器对象</span>
        <span class="token class-name">WebDataBinder</span> webDataBinder <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createBinder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6 将PropertyValues与数据绑定器对象进行绑定</span>
        webDataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 7 处理结果</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_4-2-测试结果" aria-hidden="true">#</a> 4.2 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">09.980</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>format<span class="token punctuation">.</span>CustomDateFormatter  <span class="token operator">-</span> parse enter<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> 使用ConversionService进行解析 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">09.991</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>t<span class="token punctuation">.</span>TestServletDataBinderFactoryV3 <span class="token operator">-</span> target<span class="token punctuation">:</span> <span class="token function">User</span><span class="token punctuation">(</span>birthday<span class="token operator">=</span>Tue Sep <span class="token number">01</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2009</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token function">Address</span><span class="token punctuation">(</span>name<span class="token operator">=</span>江西<span class="token punctuation">)</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-使用-initbinder和convertservice" tabindex="-1"><a class="header-anchor" href="#_5-使用-initbinder和convertservice" aria-hidden="true">#</a> 5 使用@InitBinder和ConvertService</h4><h5 id="_5-1-测试代码" tabindex="-1"><a class="header-anchor" href="#_5-1-测试代码" aria-hidden="true">#</a> 5.1 测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>binder<span class="token punctuation">.</span></span><span class="token class-name">MyDateBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">CustomDateFormatter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>format<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">FormattingConversionService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestParameterPropertyValues</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableWebBindingInitializer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">InvocableHandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestDataBinderFactory</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestServletDataBinderFactoryV4
 * <span class="token keyword">@description</span> 使用@InitBinder和ConvertService
 * <span class="token keyword">@since</span> 2022/12/11 14:52
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServletDataBinderFactoryV4</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备请求对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2009|09|01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;address.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;江西&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 准备目标对象</span>
        <span class="token class-name">User</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 将请求对象封装成ServletRequestParameterPropertyValues</span>
        <span class="token class-name">ServletRequestParameterPropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestParameterPropertyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.1 构建@InitBinder</span>
        <span class="token class-name">InvocableHandlerMethod</span> method <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">MyDateBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MyDateBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;dateResolver&quot;</span><span class="token punctuation">,</span> <span class="token class-name">WebDataBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.2 准备ConvertService</span>
        <span class="token class-name">FormattingConversionService</span> conversionService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormattingConversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        conversionService<span class="token punctuation">.</span><span class="token function">addFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy|MM|dd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;使用ConvertService进行解析&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ConfigurableWebBindingInitializer</span> initializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurableWebBindingInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initializer<span class="token punctuation">.</span><span class="token function">setConversionService</span><span class="token punctuation">(</span>conversionService<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 创建原始工厂，同时添加解析方法和初始化器</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">,</span> initializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// 5 创建绑定器对象</span>
        <span class="token class-name">WebDataBinder</span> webDataBinder <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createBinder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6 将PropertyValues与数据绑定器对象进行绑定</span>
        webDataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 7 处理结果</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_5-2-测试结果" aria-hidden="true">#</a> 5.2 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">28.014</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>format<span class="token punctuation">.</span>CustomDateFormatter  <span class="token operator">-</span> parse enter<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> 使用@InitBinder进行解析 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">:</span><span class="token number">28.026</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>t<span class="token punctuation">.</span>TestServletDataBinderFactoryV4 <span class="token operator">-</span> target<span class="token punctuation">:</span> <span class="token function">User</span><span class="token punctuation">(</span>birthday<span class="token operator">=</span>Tue Sep <span class="token number">01</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2009</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token function">Address</span><span class="token punctuation">(</span>name<span class="token operator">=</span>江西<span class="token punctuation">)</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>两者都配置的话，会使用@InitBinder</p></blockquote><h4 id="_6-使用默认-conversionservice-转换" tabindex="-1"><a class="header-anchor" href="#_6-使用默认-conversionservice-转换" aria-hidden="true">#</a> 6 使用默认 ConversionService 转换</h4><h5 id="_6-1-修改user在birthday属性上添加-datetimeformat-pattern-yyyy-mm-dd" tabindex="-1"><a class="header-anchor" href="#_6-1-修改user在birthday属性上添加-datetimeformat-pattern-yyyy-mm-dd" aria-hidden="true">#</a> 6.1 修改User在birthday属性上添加<code>@DateTimeFormat(pattern = &quot;yyyy|MM|dd&quot;)</code></h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Address</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>format<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">DateTimeFormat</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> User
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/11 14:50
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy|MM|dd&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Address</span> address<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-2-测试代码" tabindex="-1"><a class="header-anchor" href="#_6-2-测试代码" aria-hidden="true">#</a> 6.2 测试代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>convert<span class="token punctuation">.</span></span><span class="token class-name">ConversionService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>format<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">DefaultFormattingConversionService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestParameterPropertyValues</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableWebBindingInitializer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestDataBinderFactory</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestServletDataBinderFactoryV5
 * <span class="token keyword">@description</span> 使用默认的ConvertService
 * <span class="token keyword">@since</span> 2022/12/11 14:52
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServletDataBinderFactoryV5</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备请求对象</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2009|09|01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;address.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;江西&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 准备目标对象</span>
        <span class="token class-name">User</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 将请求对象封装成ServletRequestParameterPropertyValues</span>
        <span class="token class-name">ServletRequestParameterPropertyValues</span> propertyValues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestParameterPropertyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.1 准备默认的ConvertService</span>
        <span class="token comment">// ps: 非SpringBoot项目使用DefaultFormattingConversionService</span>
        <span class="token comment">// SpringBoot 项目使用ApplicationConversionService</span>
        <span class="token class-name">ConversionService</span> conversionService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultFormattingConversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ConfigurableWebBindingInitializer</span> initializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurableWebBindingInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initializer<span class="token punctuation">.</span><span class="token function">setConversionService</span><span class="token punctuation">(</span>conversionService<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 创建原始工厂，未添加任何方法和初始化器</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> initializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 创建绑定器对象</span>
        <span class="token class-name">WebDataBinder</span> webDataBinder <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createBinder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6 将PropertyValues与数据绑定器对象进行绑定</span>
        webDataBinder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>propertyValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 7 处理结果</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;target: {}&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-3-测试结果" tabindex="-1"><a class="header-anchor" href="#_6-3-测试结果" aria-hidden="true">#</a> 6.3 测试结果</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">40</span><span class="token punctuation">:</span><span class="token number">22.514</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>f<span class="token punctuation">.</span>t<span class="token punctuation">.</span>TestServletDataBinderFactoryV5 <span class="token operator">-</span> target<span class="token punctuation">:</span> <span class="token function">User</span><span class="token punctuation">(</span>birthday<span class="token operator">=</span>Tue Sep <span class="token number">01</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> CST <span class="token number">2009</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token function">Address</span><span class="token punctuation">(</span>name<span class="token operator">=</span>江西<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_23-5-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_23-5-2-收获💡" aria-hidden="true">#</a> 23.5.2 收获💡</h3><p>ServletRequestDataBinderFactory 的用法和扩展点</p><ol><li>可以解析控制器的 @InitBinder 标注方法作为扩展点，添加自定义转换器 <ul><li>控制器私有范围</li></ul></li><li>可以通过 ConfigurableWebBindingInitializer 配置 ConversionService 作为扩展点，添加自定义转换器 <ul><li>公共范围</li></ul></li><li>同时加了 @InitBinder 和 ConversionService 的转换优先级 <ol><li>优先采用 @InitBinder 的转换器</li><li>其次使用 ConversionService 的转换器</li><li>使用默认转换器</li><li>特殊处理（例如有参构造）</li></ol></li></ol><h2 id="_23-6-演示3-获取泛型参数" tabindex="-1"><a class="header-anchor" href="#_23-6-演示3-获取泛型参数" aria-hidden="true">#</a> 23.6 演示3 - 获取泛型参数</h2><h3 id="_23-6-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_23-6-1-代码参考" aria-hidden="true">#</a> 23.6.1 代码参考</h3><h4 id="_1-测试代码" tabindex="-1"><a class="header-anchor" href="#_1-测试代码" aria-hidden="true">#</a> 1 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>sub</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">GenericTypeResolver</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">ParameterizedType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Type</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestGenericType
 * <span class="token keyword">@description</span> 获取泛型信息
 * <span class="token keyword">@since</span> 2022/12/11 13:39
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestGenericType</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;通过jdk api 获取 start&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printParameterizedTypeInfo</span><span class="token punctuation">(</span><span class="token class-name">StudentDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printParameterizedTypeInfo</span><span class="token punctuation">(</span><span class="token class-name">EmployeeDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printParameterizedTypeInfo</span><span class="token punctuation">(</span><span class="token class-name">TeacherDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;通过jdk api 获取 end&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;通过spring api 获取 end&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// resolveTypeArgument 只能获取只有一个泛型的类</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz1 <span class="token operator">=</span> <span class="token class-name">GenericTypeResolver</span><span class="token punctuation">.</span><span class="token function">resolveTypeArgument</span><span class="token punctuation">(</span><span class="token class-name">StudentDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">BaseDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz2 <span class="token operator">=</span> <span class="token class-name">GenericTypeResolver</span><span class="token punctuation">.</span><span class="token function">resolveTypeArgument</span><span class="token punctuation">(</span><span class="token class-name">EmployeeDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">BaseDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz3 <span class="token operator">=</span> <span class="token class-name">GenericTypeResolver</span><span class="token punctuation">.</span><span class="token function">resolveTypeArgument</span><span class="token punctuation">(</span><span class="token class-name">TeacherDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">BaseDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;通过spring api 获取 end&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printParameterizedTypeInfo</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Type</span> genericSuperclass <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getGenericSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>genericSuperclass <span class="token keyword">instanceof</span> <span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> genericSuperclass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 不存在任何泛型&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">BaseDao</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">T</span> <span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">StudentDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDao</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDao</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TeacherDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDao</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Teacher</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">double</span> score<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Teacher</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> grade<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-测试结果" tabindex="-1"><a class="header-anchor" href="#_2-测试结果" aria-hidden="true">#</a> 2 测试结果</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>通过jdk api 获取 start<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>
<span class="token punctuation">[</span><span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>sub<span class="token punctuation">.</span></span>TestGenericType</span>$<span class="token class-name">Student</span><span class="token punctuation">]</span>


<span class="token class-name">EmployeeDao</span><span class="token punctuation">,</span> 不存在任何泛型


<span class="token punctuation">[</span><span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>sub<span class="token punctuation">.</span></span>TestGenericType</span>$<span class="token class-name">Teacher</span><span class="token punctuation">]</span>
<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>通过jdk api 获取 end<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>
<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>通过spring api 获取 end<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>sub<span class="token punctuation">.</span></span>TestGenericType</span>$<span class="token class-name">Student</span>


<span class="token keyword">null</span>


<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>sub<span class="token punctuation">.</span></span>TestGenericType</span>$<span class="token class-name">Teacher</span>
<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>通过spring api 获取 end<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_23-6-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_23-6-2-收获💡" aria-hidden="true">#</a> 23.6.2 收获💡</h3><ol><li>java api 获取泛型参数</li><li>spring api 获取泛型参数</li></ol><h1 id="_24-controlleradvice-之-initbinder" tabindex="-1"><a class="header-anchor" href="#_24-controlleradvice-之-initbinder" aria-hidden="true">#</a> 24 @ControllerAdvice 之 @InitBinder</h1><h2 id="_24-1-演示-准备-initbinder" tabindex="-1"><a class="header-anchor" href="#_24-1-演示-准备-initbinder" aria-hidden="true">#</a> 24.1 演示 - 准备 @InitBinder</h2><p><strong>准备 @InitBinder</strong> 在整个 HandlerAdapter 调用过程中所处的位置</p><figure><img src="`+g+`" alt="image-20230403160551301" tabindex="0" loading="lazy"><figcaption>image-20230403160551301</figcaption></figure><ul><li>RequestMappingHandlerAdapter 在图中缩写为 HandlerAdapter</li><li>HandlerMethodArgumentResolverComposite 在图中缩写为 ArgumentResolvers</li><li>HandlerMethodReturnValueHandlerComposite 在图中缩写为 ReturnValueHandlers</li></ul><h2 id="_24-2-代码测试" tabindex="-1"><a class="header-anchor" href="#_24-2-代码测试" aria-hidden="true">#</a> 24.2 代码测试</h2><h3 id="_24-2-1-webconfig" tabindex="-1"><a class="header-anchor" href="#_24-2-1-webconfig" aria-hidden="true">#</a> 24.2.1 WebConfig</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a24<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a22<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">CustomDateFormatter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ControllerAdvice</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">InitBinder</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/13 9:30
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PATTERN</span> <span class="token operator">=</span> <span class="token string">&quot;yyyy|MM|dd&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ControllerAdvice</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyControllerAdvice</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@InitBinder</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">binder3</span><span class="token punctuation">(</span><span class="token class-name">WebDataBinder</span> webDataBinder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webDataBinder<span class="token punctuation">.</span><span class="token function">addCustomFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token constant">PATTERN</span><span class="token punctuation">,</span> <span class="token string">&quot;binder3 执行了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller1</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@InitBinder</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">binder1</span><span class="token punctuation">(</span><span class="token class-name">WebDataBinder</span> webDataBinder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webDataBinder<span class="token punctuation">.</span><span class="token function">addCustomFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token constant">PATTERN</span><span class="token punctuation">,</span> <span class="token string">&quot;binder1 执行了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller2</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@InitBinder</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">binder21</span><span class="token punctuation">(</span><span class="token class-name">WebDataBinder</span> webDataBinder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webDataBinder<span class="token punctuation">.</span><span class="token function">addCustomFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token constant">PATTERN</span><span class="token punctuation">,</span> <span class="token string">&quot;binder21 执行了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@InitBinder</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">binder22</span><span class="token punctuation">(</span><span class="token class-name">WebDataBinder</span> webDataBinder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webDataBinder<span class="token punctuation">.</span><span class="token function">addCustomFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomDateFormatter</span><span class="token punctuation">(</span><span class="token constant">PATTERN</span><span class="token punctuation">,</span> <span class="token string">&quot;binder22 执行了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-2-2-测试代码" tabindex="-1"><a class="header-anchor" href="#_24-2-2-测试代码" aria-hidden="true">#</a> 24.2.2 测试代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a24</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a24<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">ControllerAdviceBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerAdapter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestControllerAdviceInitBinder
 * <span class="token keyword">@description</span> 测试@ControllerAdvice标注类上的@InitBinder注解
 * <span class="token keyword">@since</span> 2022/12/13 9:35
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestControllerAdviceInitBinder</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
         <span class="token comment">/*
            @InitBinder 的来源有两个
            1. @ControllerAdvice 中 @InitBinder 标注的方法，由 RequestMappingHandlerAdapter 在初始化时解析并记录
            2. @Controller 中 @InitBinder 标注的方法，由 RequestMappingHandlerAdapter 会在控制器方法首次执行时解析并记录
         */</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1 创建RequestMappingHandlerAdapter对象</span>
        <span class="token class-name">RequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 设置RequestMappingHandlerAdapter的容器</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">setApplicationContext</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 初始化RequestMappingHandlerAdapter</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;1 初始化RequestMappingHandlerAdapter 时&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">showBindMethods</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 拿到数据绑定工厂，模拟调用Controller1的foo方法</span>
        <span class="token class-name">Method</span> dataBinderFactoryMethod <span class="token operator">=</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getDataBinderFactory&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataBinderFactoryMethod<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataBinderFactoryMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>Controller1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>Controller1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;2 拿到数据绑定工厂，模拟调用Controller1的foo方法时&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">showBindMethods</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5 模拟并调用bar方法</span>
        dataBinderFactoryMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>Controller2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>Controller2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;3 拿到数据绑定工厂，模拟调用Controller2的bar方法时&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">showBindMethods</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
         <span class="token comment">/*
            学到了什么
                a. Method 对象的获取利用了缓存来进行加速
                b. 绑定器工厂的扩展点(advice 之一), 通过 @InitBinder 扩展类型转换器
         */</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 存储全局的 @InitBinder 方法
     * private final Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControllerAdviceBean,</span> <span class="token attr-name">Set&lt;Method</span><span class="token punctuation">&gt;</span></span>&gt; initBinderAdviceCache = new LinkedHashMap&lt;&gt;();
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 存储控制器的@InitBinder方法
     * private final Map&lt;Class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>?</span><span class="token punctuation">&gt;</span></span>, Set<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Method</span><span class="token punctuation">&gt;</span></span>&gt; initBinderCache = new ConcurrentHashMap&lt;&gt;(64);
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showBindMethods</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span> handlerAdapter<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">NoSuchFieldException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Field</span> initBinderAdviceCache <span class="token operator">=</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;initBinderAdviceCache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initBinderAdviceCache<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ControllerAdviceBean</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> globalInitBinderMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ControllerAdviceBean</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> initBinderAdviceCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;全局的 @InitBinder 方法{}&quot;</span><span class="token punctuation">,</span> globalInitBinderMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>ms <span class="token operator">-&gt;</span> ms<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Field</span> initBinderCache <span class="token operator">=</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;initBinderCache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initBinderCache<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> controllerMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> initBinderCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;控制器的 @InitBinder 方法{}&quot;</span><span class="token punctuation">,</span> controllerMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>ms <span class="token operator">-&gt;</span> ms<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-2-3-测试结果" tabindex="-1"><a class="header-anchor" href="#_24-2-3-测试结果" aria-hidden="true">#</a> 24.2.3 测试结果</h3><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.736</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> <span class="token number">1</span> 初始化RequestMappingHandlerAdapter 时 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.742</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> 全局的 @InitBinder 方法<span class="token punctuation">[</span>binder3<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.744</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> 控制器的 @InitBinder 方法<span class="token punctuation">[</span><span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.750</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> <span class="token number">2</span> 拿到数据绑定工厂，模拟调用Controller1的foo方法时 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.750</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> 全局的 @InitBinder 方法<span class="token punctuation">[</span>binder3<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.750</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> 控制器的 @InitBinder 方法<span class="token punctuation">[</span>binder1<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.750</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> <span class="token number">3</span> 拿到数据绑定工厂，模拟调用Controller2的bar方法时 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.750</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> 全局的 @InitBinder 方法<span class="token punctuation">[</span>binder3<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">08.751</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceInitBinder <span class="token operator">-</span> 控制器的 @InitBinder 方法<span class="token punctuation">[</span>binder22<span class="token punctuation">,</span> binder21<span class="token punctuation">,</span> binder1<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_24-3-收获💡" tabindex="-1"><a class="header-anchor" href="#_24-3-收获💡" aria-hidden="true">#</a> 24.3 收获💡</h2><ol><li>RequestMappingHandlerAdapter 初始化时会解析 @ControllerAdvice 中的 @InitBinder 方法</li><li>RequestMappingHandlerAdapter 会以类为单位，在该类首次使用时，解析此类的 @InitBinder 方法</li><li>以上两种 @InitBinder 的解析结果都会缓存来避免重复解析</li><li>控制器方法调用时，会综合利用本类的 @InitBinder 方法和 @ControllerAdvice 中的 @InitBinder 方法创建绑定工厂</li></ol><h1 id="_25-控制器方法执行流程" tabindex="-1"><a class="header-anchor" href="#_25-控制器方法执行流程" aria-hidden="true">#</a> 25 控制器方法执行流程</h1><h2 id="_25-1-图1" tabindex="-1"><a class="header-anchor" href="#_25-1-图1" aria-hidden="true">#</a> 25.1 图1</h2><figure><img src="`+w+'" alt="image-20230403160619888" tabindex="0" loading="lazy"><figcaption>image-20230403160619888</figcaption></figure><p>HandlerMethod 需要</p><ul><li>bean 即是哪个 Controller</li><li>method 即是 Controller 中的哪个方法</li></ul><p>ServletInvocableHandlerMethod 需要</p><ul><li>WebDataBinderFactory 负责对象绑定、类型转换</li><li>ParameterNameDiscoverer 负责参数名解析</li><li>HandlerMethodArgumentResolverComposite 负责解析参数</li><li>HandlerMethodReturnValueHandlerComposite 负责处理返回值</li></ul><h2 id="_25-2-图2" tabindex="-1"><a class="header-anchor" href="#_25-2-图2" aria-hidden="true">#</a> 25.2 图2</h2><figure><img src="'+h+'" alt="image-20230403160634114" tabindex="0" loading="lazy"><figcaption>image-20230403160634114</figcaption></figure><h2 id="_25-3-图3" tabindex="-1"><a class="header-anchor" href="#_25-3-图3" aria-hidden="true">#</a> 25.3 图3</h2><figure><img src="'+y+`" alt="image-20230403160652661" tabindex="0" loading="lazy"><figcaption>image-20230403160652661</figcaption></figure><h1 id="_26-controlleradvice-之-modelattribute" tabindex="-1"><a class="header-anchor" href="#_26-controlleradvice-之-modelattribute" aria-hidden="true">#</a> 26 @ControllerAdvice 之 @ModelAttribute</h1><h2 id="_26-1-演示-准备-modelattribute" tabindex="-1"><a class="header-anchor" href="#_26-1-演示-准备-modelattribute" aria-hidden="true">#</a> 26.1 演示 - 准备 @ModelAttribute</h2><h3 id="_26-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_26-1-1-代码参考" aria-hidden="true">#</a> 26.1.1 代码参考</h3><h4 id="_1-webconfig" tabindex="-1"><a class="header-anchor" href="#_1-webconfig" aria-hidden="true">#</a> 1 WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a25_a26<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ControllerAdvice</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">InitBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ModelAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseStatus</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/13 10:39
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@ControllerAdvice</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyControllerAdvice</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">aa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller1</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;bb&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">bb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;bb&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ResponseStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span> <span class="token comment">// 表示响应正常返回</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;foo invoke...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-测试方法" tabindex="-1"><a class="header-anchor" href="#_2-测试方法" aria-hidden="true">#</a> 2 测试方法</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a25_a26</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a25_a26<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">DefaultParameterNameDiscoverer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">WebDataBinderFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExpressionValueMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ModelFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestHeaderMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParamMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodArgumentResolverComposite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestModelAttribute
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/13 10:45
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestModelAttribute</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1 准备RequestMappingHandlerAdapter</span>
        <span class="token class-name">RequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">setApplicationContext</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 准备数据绑定工厂</span>
        <span class="token class-name">ServletRequestDataBinderFactory</span> dataBinderFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 准备模型工厂</span>
        <span class="token class-name">Method</span> getModelFactory <span class="token operator">=</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getModelFactory&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">WebDataBinderFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        getModelFactory<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.1 准备HandlerMethod</span>
        <span class="token class-name">ServletInvocableHandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>Controller1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>Controller1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置数据绑定工厂</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setDataBinderFactory</span><span class="token punctuation">(</span>dataBinderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置参数名解析器</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置方法组合解析器</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setHandlerMethodArgumentResolvers</span><span class="token punctuation">(</span><span class="token function">getArgumentResolvers</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.2 获取模型工厂</span>
        <span class="token class-name">ModelFactory</span> modelFactory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ModelFactory</span><span class="token punctuation">)</span> getModelFactory<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>handlerAdapter<span class="token punctuation">,</span> handlerMethod<span class="token punctuation">,</span> dataBinderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 准备Model容器</span>
        <span class="token comment">// 4.1 准备模拟请求</span>
        <span class="token class-name">MockHttpServletRequest</span> mockHttpServletRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mockHttpServletRequest<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;刘德华&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mockHttpServletRequest<span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;61&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletWebRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>mockHttpServletRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.2 准备模型容器</span>
        <span class="token class-name">ModelAndViewContainer</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndViewContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        modelFactory<span class="token punctuation">.</span><span class="token function">initModel</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> container<span class="token punctuation">,</span> handlerMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4.3 执行handle</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4.4 获取模型数据</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;model: {}&quot;</span><span class="token punctuation">,</span> container<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        applicationContext<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 获取参数解析器组合解析器
     *
     * <span class="token keyword">@param</span> <span class="token parameter">context</span> context
     * <span class="token keyword">@return</span> HandlerMethodArgumentResolverComposite
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span> <span class="token function">getArgumentResolvers</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> composite<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-测试结果" tabindex="-1"><a class="header-anchor" href="#_3-测试结果" aria-hidden="true">#</a> 3 测试结果</h4><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">55</span><span class="token punctuation">:</span><span class="token number">09.889</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a25_a26<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig  <span class="token operator">-</span> foo invoke<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">09</span><span class="token punctuation">:</span><span class="token number">55</span><span class="token punctuation">:</span><span class="token number">09.896</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a25_a26<span class="token punctuation">.</span>TestModelAttribute      <span class="token operator">-</span> model<span class="token punctuation">:</span> <span class="token operator">{</span>aa<span class="token operator">=</span>aa<span class="token punctuation">,</span> bb<span class="token operator">=</span>bb<span class="token punctuation">,</span> user<span class="token operator">=</span>WebConfig<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>刘德华<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">,</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BindingResult<span class="token punctuation">.</span>user<span class="token operator">=</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>BeanPropertyBindingResult<span class="token punctuation">:</span> <span class="token number">0</span> errors<span class="token operator">}</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>准备 @ModelAttribute</strong> 在整个 HandlerAdapter 调用过程中所处的位置</p><figure><img src="`+f+'" alt="image-20230403160805761" tabindex="0" loading="lazy"><figcaption>image-20230403160805761</figcaption></figure><h2 id="_26-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_26-2-收获💡" aria-hidden="true">#</a> 26.2 收获💡</h2><ol><li>RequestMappingHandlerAdapter 初始化时会解析 @ControllerAdvice 中的 @ModelAttribute 方法</li><li>RequestMappingHandlerAdapter 会以类为单位，在该类首次使用时，解析此类的 @ModelAttribute 方法</li><li>以上两种 @ModelAttribute 的解析结果都会缓存来避免重复解析</li><li>控制器方法调用时，会综合利用本类的 @ModelAttribute 方法和 @ControllerAdvice 中的 @ModelAttribute 方法创建模型工厂</li></ol><h1 id="_27-返回值处理器" tabindex="-1"><a class="header-anchor" href="#_27-返回值处理器" aria-hidden="true">#</a> 27 返回值处理器</h1><h2 id="_27-1-演示-常见返回值处理器" tabindex="-1"><a class="header-anchor" href="#_27-1-演示-常见返回值处理器" aria-hidden="true">#</a> 27.1 演示 - 常见返回值处理器</h2><h3 id="_27-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_27-1-1-代码参考" aria-hidden="true">#</a> 27.1.1 代码参考</h3><h4 id="_1-模板资源" tabindex="-1"><a class="header-anchor" href="#_1-模板资源" aria-hidden="true">#</a> 1 模板资源</h4><figure><img src="'+q+`" alt="image-20221214120058387" tabindex="0" loading="lazy"><figcaption>image-20221214120058387</figcaption></figure><h5 id="_1-1-test3-ftl" tabindex="-1"><a class="header-anchor" href="#_1-1-test3-ftl" aria-hidden="true">#</a> 1.1 test3.ftl</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>test3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello! \${user.name} \${user.age}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-test4-ftl" tabindex="-1"><a class="header-anchor" href="#_1-2-test4-ftl" aria-hidden="true">#</a> 1.2 test4.ftl</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>test4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello! \${user.name} \${user.age}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-view1-ftl" tabindex="-1"><a class="header-anchor" href="#_1-3-view1-ftl" aria-hidden="true">#</a> 1.3 view1.ftl</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>view1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello! \${name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-4-view2-ftl" tabindex="-1"><a class="header-anchor" href="#_1-4-view2-ftl" aria-hidden="true">#</a> 1.4 view2.ftl</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>view2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-webconfig" tabindex="-1"><a class="header-anchor" href="#_2-webconfig" aria-hidden="true">#</a> 2 WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">AbstractUrlBasedView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span>freemarker<span class="token punctuation">.</span></span><span class="token class-name">FreeMarkerConfigurer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span>freemarker<span class="token punctuation">.</span></span><span class="token class-name">FreeMarkerView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span>freemarker<span class="token punctuation">.</span></span><span class="token class-name">FreeMarkerViewResolver</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 10:14
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">FreeMarkerConfigurer</span> <span class="token function">freeMarkerConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FreeMarkerConfigurer</span> configurer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FreeMarkerConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configurer<span class="token punctuation">.</span><span class="token function">setDefaultEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configurer<span class="token punctuation">.</span><span class="token function">setTemplateLoaderPath</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:templates&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> configurer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span> <span class="token comment">// FreeMarkerView 在借助 Spring 初始化时，会要求 web 环境才会走 setConfiguration, 这里想办法去掉了 web 环境的约束</span>
    <span class="token keyword">public</span> <span class="token class-name">FreeMarkerViewResolver</span> <span class="token function">viewResolver</span><span class="token punctuation">(</span><span class="token class-name">FreeMarkerConfigurer</span> configurer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FreeMarkerViewResolver</span> resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FreeMarkerViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">protected</span> <span class="token class-name">AbstractUrlBasedView</span> <span class="token function">instantiateView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">FreeMarkerView</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FreeMarkerView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isContextRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                view<span class="token punctuation">.</span><span class="token function">setConfiguration</span><span class="token punctuation">(</span>configurer<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> view<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">setPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">setSuffix</span><span class="token punctuation">(</span><span class="token string">&quot;.ftl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">setExposeSpringMacroHelpers</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-测试代码" tabindex="-1"><a class="header-anchor" href="#_3-测试代码" aria-hidden="true">#</a> 3 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MethodParameter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpHeaders</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ModelAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodReturnValueHandlerComposite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">DefaultRequestToViewNameTranslator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span>freemarker<span class="token punctuation">.</span></span><span class="token class-name">FreeMarkerViewResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UrlPathHelper</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestReturnValueHandler
 * <span class="token keyword">@description</span> 测试返回值处理器
 * <span class="token keyword">@since</span> 2022/12/14 10:16
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestReturnValueHandler</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1. 测试返回值类型为 ModelAndView</span>
        <span class="token comment">// test1(applicationContext);</span>

        <span class="token comment">// 2. 测试返回值类型为 String 时, 把它当做视图名</span>
        <span class="token comment">// test2(applicationContext);</span>
        <span class="token comment">// 3. 测试返回值添加了 @ModelAttribute 注解时, 此时需找到默认视图名</span>
        <span class="token function">test3</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4. 测试返回值不加 @ModelAttribute 注解且返回非简单类型时, 此时需找到默认视图名</span>
        <span class="token comment">// test4(applicationContext);</span>
        <span class="token comment">// 5. 测试返回值类型为 ResponseEntity 时, 此时不走视图流程</span>
        <span class="token comment">// test5(applicationContext);</span>
        <span class="token comment">// 6. 测试返回值类型为 HttpHeaders 时, 此时不走视图流程</span>
        <span class="token comment">// test6(applicationContext);</span>
        <span class="token comment">// 7. 测试返回值添加了 @ResponseBody 注解时, 此时不走视图流程</span>
        <span class="token comment">// test7(applicationContext);</span>

        <span class="token comment">// 释放资源</span>
        applicationContext<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ServletWebRequest</span> <span class="token function">getServletWebRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> methodName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setRequestURI</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">UrlPathHelper</span><span class="token punctuation">.</span>defaultInstance<span class="token punctuation">.</span><span class="token function">resolveAndCacheLookupPath</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletWebRequest</span> webRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> webRequest<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">String</span> methodName<span class="token punctuation">,</span> <span class="token class-name">ServletWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备控制器</span>
        <span class="token class-name">Controller</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2 获取要执行的控制器方法</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">Controller</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3 执行控制器方法</span>
        <span class="token class-name">Object</span> returnValue <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4 获取返回值类型</span>
        <span class="token class-name">HandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span>controller<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MethodParameter</span> returnType <span class="token operator">=</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5 准备请求和Model容器</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>webRequest <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ModelAndViewContainer</span> mavContainer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndViewContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6 获取组合器</span>
        <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span> handlerComposite <span class="token operator">=</span> <span class="token function">getHandlerMethodReturnValueHandlerComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 7 判断组合器是否支持此类型的解析</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>handlerComposite<span class="token punctuation">.</span><span class="token function">supportsReturnType</span><span class="token punctuation">(</span>returnType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 8 处理返回值</span>
            handlerComposite<span class="token punctuation">.</span><span class="token function">handleReturnValue</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mavContainer<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mavContainer<span class="token punctuation">.</span><span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 增加一层判断，看请求是否已经处理完成</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mavContainer<span class="token punctuation">.</span><span class="token function">isRequestHandled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 请求还未处理完成</span>
                <span class="token function">renderView</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 请求已经被标注已经完成了</span>
                <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">)</span> webRequest<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;response is null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 打印响应头</span>
                <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headerNames <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>headerNames<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> headerName <span class="token operator">:</span> headerNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>headerName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>headerName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">lineSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;响应头:\\n {}&quot;</span><span class="token punctuation">,</span> sb<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 打印响应内容</span>
                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;响应体内容: {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getContentAsByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">,</span> <span class="token class-name">String</span> methodName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> methodName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> <span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> <span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
            [DEBUG] 10:58:59.521 [main] c.i.a27.test.TestReturnValueHandler - test3()
            {user=TestReturnValueHandler.User(name=李四, age=20)}
            null
            [DEBUG] 10:58:59.791 [main] c.i.a27.test.TestReturnValueHandler - &gt;&gt;&gt;&gt;&gt;&gt; 渲染视图
            Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Neither a pre-parsed RequestPath nor a pre-resolved String lookupPath is available.
                at org.springframework.web.util.ServletRequestPathUtils.getCachedPath(ServletRequestPathUtils.java:144)
                at org.springframework.web.util.ServletRequestPathUtils.getCachedPathValue(ServletRequestPathUtils.java:161)
                at org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator.getViewName(DefaultRequestToViewNameTranslator.java:178)
                at com.itheima.a27.test.TestReturnValueHandler.renderView(TestReturnValueHandler.java:136)
                at com.itheima.a27.test.TestReturnValueHandler.defaultReturnValueHandler(TestReturnValueHandler.java:89)
                at com.itheima.a27.test.TestReturnValueHandler.test3(TestReturnValueHandler.java:104)
                at com.itheima.a27.test.TestReturnValueHandler.main(TestReturnValueHandler.java:54)

                这是因为test3 没有对应的请求路径，也就是没有视图名称
                     @ModelAttribute
                    @RequestMapping(&quot;/test3&quot;)
                    public User test3() {
                        log.debug(&quot;test3()&quot;);
                        return new User(&quot;李四&quot;, 20);
                    }

                解决方法:
                request.setRequestURI(&quot;/test3&quot;);
                UrlPathHelper.defaultInstance.resolveAndCacheLookupPath(request);

         */</span>
        <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token string">&quot;test3&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletWebRequest</span> webRequest <span class="token operator">=</span> <span class="token function">getServletWebRequest</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> methodName<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token string">&quot;test4&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletWebRequest</span> webRequest <span class="token operator">=</span> <span class="token function">getServletWebRequest</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> methodName<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token string">&quot;test5&quot;</span><span class="token punctuation">;</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> <span class="token string">&quot;test6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">defaultReturnValueHandler</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> <span class="token string">&quot;test7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 渲染视图
     *
     * <span class="token keyword">@param</span> <span class="token parameter">context</span>    bean容器
     * <span class="token keyword">@param</span> <span class="token parameter">container</span>  模型容器
     * <span class="token keyword">@param</span> <span class="token parameter">webRequest</span> web请求
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;all&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">renderView</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> context<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> container<span class="token punctuation">,</span>
                                   <span class="token class-name">ServletWebRequest</span> webRequest<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt; 渲染视图&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FreeMarkerViewResolver</span> resolver <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">FreeMarkerViewResolver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> viewName <span class="token operator">=</span> container<span class="token punctuation">.</span><span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> container<span class="token punctuation">.</span><span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">DefaultRequestToViewNameTranslator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getViewName</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;没有获取到视图名, 采用默认视图名: {}&quot;</span><span class="token punctuation">,</span> viewName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 每次渲染时, 会产生新的视图对象, 它并非被 Spring 所管理, 但确实借助了 Spring 容器来执行初始化</span>
        <span class="token class-name">View</span> view <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">resolveViewName</span><span class="token punctuation">(</span>viewName<span class="token punctuation">,</span> <span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        view<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> webRequest<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> webRequest<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">)</span> webRequest<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContentAsByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 获取返回值处理器组合器
     *
     * <span class="token keyword">@return</span> HandlerMethodReturnValueHandlerComposite
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span> <span class="token function">getHandlerMethodReturnValueHandlerComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandlers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                <span class="token comment">// 分别获取其模型和视图名，放入 ModelAndViewContainer</span>
                <span class="token keyword">new</span> <span class="token class-name">ModelAndViewMethodReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 返回值类型为 String 时，把它当做视图名，放入 ModelAndViewContainer</span>
                <span class="token keyword">new</span> <span class="token class-name">ViewNameMethodReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 返回值添加了 @ModelAttribute 注解时，将返回值作为模型，放入 ModelAndViewContainer</span>
                <span class="token comment">// 此时需找到默认视图名</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 返回值类型为 ResponseEntity 时</span>
                <span class="token comment">// 此时走 MessageConverter，并设置 ModelAndViewContainer.requestHandled 为 true</span>
                <span class="token keyword">new</span> <span class="token class-name">HttpEntityMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                <span class="token comment">// 返回值类型为 HttpHeaders 时</span>
                <span class="token comment">// 会设置 ModelAndViewContainer.requestHandled 为 true</span>
                <span class="token keyword">new</span> <span class="token class-name">HttpHeadersReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 返回值添加了 @ResponseBody 注解时</span>
                <span class="token comment">// 此时走 MessageConverter，并设置 ModelAndViewContainer.requestHandled 为 true</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                <span class="token comment">// 返回值省略 @ModelAttribute 注解且返回非简单类型时，将返回值作为模型，放入 ModelAndViewContainer</span>
                <span class="token comment">// 此时需找到默认视图名</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> composite<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test1()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ModelAndView</span> mav <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">&quot;view1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mav<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> mav<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test2()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;view2&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ModelAttribute</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test3&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test3()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test4()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test5()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">HttpHeaders</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test6()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Server&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;itheima2022&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> headers<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;test7()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;钱七&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 必须用 public 修饰, 否则 freemarker 渲染其 name, age 属性时失败</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-测试结果" tabindex="-1"><a class="header-anchor" href="#_4-测试结果" aria-hidden="true">#</a> 4 测试结果</h4><h5 id="_4-1-test1-测试返回值类型为-modelandview" tabindex="-1"><a class="header-anchor" href="#_4-1-test1-测试返回值类型为-modelandview" aria-hidden="true">#</a> 4.1 test1 测试返回值类型为 ModelAndView</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">05</span><span class="token punctuation">:</span><span class="token number">36.409</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{</span>name<span class="token operator">=</span>张三<span class="token operator">}</span>
view1
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">05</span><span class="token punctuation">:</span><span class="token number">36.711</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;</span> 渲染视图 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">05</span><span class="token punctuation">:</span><span class="token number">36.712</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 没有获取到视图名<span class="token punctuation">,</span> 采用默认视图名<span class="token punctuation">:</span> view1 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">05</span><span class="token punctuation">:</span><span class="token number">36.772</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> View name &#39;view1&#39;<span class="token punctuation">,</span> model <span class="token operator">{</span>name<span class="token operator">=</span>张三<span class="token operator">}</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">05</span><span class="token punctuation">:</span><span class="token number">36.777</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> Rendering <span class="token punctuation">[</span><span class="token operator">/</span>view1<span class="token punctuation">.</span>ftl<span class="token punctuation">]</span> 
<span class="token operator">&lt;!</span>doctype html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>view1<span class="token operator">&lt;/</span>title<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Hello<span class="token operator">!</span> 张三<span class="token operator">&lt;/</span>h1<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>html<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-2-test2-测试返回值类型为-string-时-把它当做视图名" tabindex="-1"><a class="header-anchor" href="#_4-2-test2-测试返回值类型为-string-时-把它当做视图名" aria-hidden="true">#</a> 4.2 test2 测试返回值类型为 String 时, 把它当做视图名</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">20.156</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{}</span>
view2
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">20.511</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;</span> 渲染视图 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">20.513</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 没有获取到视图名<span class="token punctuation">,</span> 采用默认视图名<span class="token punctuation">:</span> view2 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">20.581</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> View name &#39;view2&#39;<span class="token punctuation">,</span> model <span class="token operator">{}</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">20.588</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> Rendering <span class="token punctuation">[</span><span class="token operator">/</span>view2<span class="token punctuation">.</span>ftl<span class="token punctuation">]</span> 
<span class="token operator">&lt;!</span>doctype html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>view2<span class="token operator">&lt;/</span>title<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Hello<span class="token operator">!&lt;/</span>h1<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-3-test3-测试返回值添加了-modelattribute-注解时-此时需找到默认视图名" tabindex="-1"><a class="header-anchor" href="#_4-3-test3-测试返回值添加了-modelattribute-注解时-此时需找到默认视图名" aria-hidden="true">#</a> 4.3 test3 测试返回值添加了 @ModelAttribute 注解时, 此时需找到默认视图名</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">57.441</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{</span>user<span class="token operator">=</span>TestReturnValueHandler<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>李四<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">}</span>
<span class="token keyword">null</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">57.708</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;</span> 渲染视图 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">57.710</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 没有获取到视图名<span class="token punctuation">,</span> 采用默认视图名<span class="token punctuation">:</span> test3 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">57.772</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> View name &#39;test3&#39;<span class="token punctuation">,</span> model <span class="token operator">{</span>user<span class="token operator">=</span>TestReturnValueHandler<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>李四<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">}</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">57.777</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> Rendering <span class="token punctuation">[</span><span class="token operator">/</span>test3<span class="token punctuation">.</span>ftl<span class="token punctuation">]</span> 
<span class="token operator">&lt;!</span>doctype html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>test3<span class="token operator">&lt;/</span>title<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Hello<span class="token operator">!</span> 李四 <span class="token number">20</span><span class="token operator">&lt;/</span>h1<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-4-test4-测试返回值不加-modelattribute-注解且返回非简单类型时-此时需找到默认视图名" tabindex="-1"><a class="header-anchor" href="#_4-4-test4-测试返回值不加-modelattribute-注解且返回非简单类型时-此时需找到默认视图名" aria-hidden="true">#</a> 4.4 test4 测试返回值不加 @ModelAttribute 注解且返回非简单类型时, 此时需找到默认视图名</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">26.992</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{</span>user<span class="token operator">=</span>TestReturnValueHandler<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>王五<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token operator">}</span>
<span class="token keyword">null</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">27.312</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token operator">&gt;&gt;&gt;&gt;&gt;&gt;</span> 渲染视图 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">27.315</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 没有获取到视图名<span class="token punctuation">,</span> 采用默认视图名<span class="token punctuation">:</span> test4 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">27.405</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> View name &#39;test4&#39;<span class="token punctuation">,</span> model <span class="token operator">{</span>user<span class="token operator">=</span>TestReturnValueHandler<span class="token punctuation">.</span><span class="token function">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>王五<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token operator">}</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">27.413</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a27<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$<span class="token number">1</span>$<span class="token number">1</span>  <span class="token operator">-</span> Rendering <span class="token punctuation">[</span><span class="token operator">/</span>test4<span class="token punctuation">.</span>ftl<span class="token punctuation">]</span> 
<span class="token operator">&lt;!</span>doctype html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>test4<span class="token operator">&lt;/</span>title<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Hello<span class="token operator">!</span> 王五 <span class="token number">30</span><span class="token operator">&lt;/</span>h1<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-5-test5-测试返回值类型为-responseentity-时-此时不走视图流程" tabindex="-1"><a class="header-anchor" href="#_4-5-test5-测试返回值类型为-responseentity-时-此时不走视图流程" aria-hidden="true">#</a> 4.5 test5 测试返回值类型为 ResponseEntity 时, 此时不走视图流程</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">59.854</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{}</span>
<span class="token keyword">null</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">08</span><span class="token punctuation">:</span><span class="token number">00.197</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 响应头<span class="token punctuation">:</span>
 Content<span class="token operator">-</span>Type<span class="token operator">=</span>application<span class="token operator">/</span>json
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">08</span><span class="token punctuation">:</span><span class="token number">00.198</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 响应体内容<span class="token punctuation">:</span> <span class="token operator">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">40</span><span class="token operator">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-6-test6-测试返回值类型为-httpheaders-时-此时不走视图流程" tabindex="-1"><a class="header-anchor" href="#_4-6-test6-测试返回值类型为-httpheaders-时-此时不走视图流程" aria-hidden="true">#</a> 4.6 test6 测试返回值类型为 HttpHeaders 时, 此时不走视图流程</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">08</span><span class="token punctuation">:</span><span class="token number">25.777</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{}</span>
<span class="token keyword">null</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">08</span><span class="token punctuation">:</span><span class="token number">26.113</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 响应头<span class="token punctuation">:</span>
 Content<span class="token operator">-</span>Type<span class="token operator">=</span>text<span class="token operator">/</span>html
Server<span class="token operator">=</span>itheima2022
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">08</span><span class="token punctuation">:</span><span class="token number">26.114</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 响应体内容<span class="token punctuation">:</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-7-test7-测试返回值添加了-responsebody-注解时-此时不走视图流程" tabindex="-1"><a class="header-anchor" href="#_4-7-test7-测试返回值添加了-responsebody-注解时-此时不走视图流程" aria-hidden="true">#</a> 4.7 test7 测试返回值添加了 @ResponseBody 注解时, 此时不走视图流程</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">09</span><span class="token punctuation">:</span><span class="token number">01.544</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token operator">{}</span>
<span class="token keyword">null</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">09</span><span class="token punctuation">:</span><span class="token number">01.892</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 响应头<span class="token punctuation">:</span>
 Content<span class="token operator">-</span>Type<span class="token operator">=</span>application<span class="token operator">/</span>json
 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">09</span><span class="token punctuation">:</span><span class="token number">01.893</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a27<span class="token punctuation">.</span>test<span class="token punctuation">.</span>TestReturnValueHandler <span class="token operator">-</span> 响应体内容<span class="token punctuation">:</span> <span class="token operator">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;钱七&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_27-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_27-1-2-收获💡" aria-hidden="true">#</a> 27.1.2 收获💡</h3><ol><li>常见的返回值处理器 <ul><li>ModelAndView，分别获取其模型和视图名，放入 ModelAndViewContainer</li><li>返回值类型为 String 时，把它当做视图名，放入 ModelAndViewContainer</li><li>返回值添加了 @ModelAttribute 注解时，将返回值作为模型，放入 ModelAndViewContainer <ul><li>此时需找到默认视图名</li></ul></li><li>返回值省略 @ModelAttribute 注解且返回非简单类型时，将返回值作为模型，放入 ModelAndViewContainer <ul><li>此时需找到默认视图名</li></ul></li><li>返回值类型为 ResponseEntity 时 <ul><li>此时走 MessageConverter，并设置 ModelAndViewContainer.requestHandled 为 true</li></ul></li><li>返回值类型为 HttpHeaders 时 <ul><li>会设置 ModelAndViewContainer.requestHandled 为 true</li></ul></li><li>返回值添加了 @ResponseBody 注解时 <ul><li>此时走 MessageConverter，并设置 ModelAndViewContainer.requestHandled 为 true</li></ul></li></ul></li><li>组合模式在 Spring 中的体现 + 1</li></ol><h1 id="_28-messageconverter" tabindex="-1"><a class="header-anchor" href="#_28-messageconverter" aria-hidden="true">#</a> 28 MessageConverter</h1><h2 id="_28-1-演示-messageconverter-的作用" tabindex="-1"><a class="header-anchor" href="#_28-1-演示-messageconverter-的作用" aria-hidden="true">#</a> 28.1 演示 - MessageConverter 的作用</h2><h3 id="_28-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_28-1-1-代码参考" aria-hidden="true">#</a> 28.1.1 代码参考</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a28</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonCreator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MethodParameter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">MediaType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>xml<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2XmlHttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">MockHttpInputMessage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">MockHttpOutputMessage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestResponseBodyMethodProcessor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestMessageConverter
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 12:33
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMessageConverter</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token comment">// 测试MessageConverter的基本用法</span>
        <span class="token comment">// 写入json数据</span>
        <span class="token comment">// test1();</span>
        <span class="token comment">// 写入xml数据</span>
        <span class="token comment">// test2();</span>
        <span class="token comment">// 读取json数据</span>
        <span class="token comment">// test3();</span>
        <span class="token comment">// 测试MessageConverter解析顺序</span>
        <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 能学到什么
     * a. MessageConverter的作用，@ResponseBody 是返回值处理器解析的，但具体的转换工作是MessageConverter做的
     * b. 如何选择MediaType
     * - 首先看@RequestMapping上有没有指定 (即：response.setContentType(&quot;application/json&quot;);)
     * - 其次看request的Accept头有没有指定
     * - 最后按MessageConverter解析器的放入顺序，谁能谁先转换
     *
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> Exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备请求响应体方法处理器，并配置json和xml转换器</span>
        <span class="token class-name">RequestResponseBodyMethodProcessor</span> methodProcessor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">MappingJackson2XmlHttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// xml解析器</span>
                        <span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// json解析器</span>
                <span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2 准备请求</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Accept&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletWebRequest</span> webRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3 准备容器</span>
        <span class="token class-name">ModelAndViewContainer</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndViewContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 处理返回值</span>
        methodProcessor<span class="token punctuation">.</span><span class="token function">handleReturnValue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;刘德华&quot;</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">MethodParameter</span><span class="token punctuation">(</span><span class="token class-name">TestMessageConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                container<span class="token punctuation">,</span>
                webRequest
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 5 打印响应结果</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>produces <span class="token operator">=</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span> <span class="token comment">// produces：指定返回值类型，除了设置返回值类型外，还可以设定返回值的字符编码；</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token string">&quot;{\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;    \\&quot;name\\&quot; : \\&quot;赵六\\&quot;,\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;    \\&quot;age\\&quot; : 28\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;}&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpInputMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpInputMessage</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MappingJackson2HttpMessageConverter</span> converter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>converter<span class="token punctuation">.</span><span class="token function">canRead</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> result <span class="token operator">=</span> converter<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">MockHttpOutputMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpOutputMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MappingJackson2XmlHttpMessageConverter</span> converter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MappingJackson2XmlHttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>converter<span class="token punctuation">.</span><span class="token function">canWrite</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_XML</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            converter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_XML</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;result: {}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getBodyAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">MockHttpOutputMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpOutputMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MappingJackson2HttpMessageConverter</span> converter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>converter<span class="token punctuation">.</span><span class="token function">canWrite</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            converter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;result: {}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getBodyAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

        <span class="token annotation punctuation">@JsonCreator</span>
        <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;User{&quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;, age=&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span>
                    <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_28-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_28-1-2-收获💡" aria-hidden="true">#</a> 28.1.2 收获💡</h3><ol><li>MessageConverter 的作用 <ul><li>@ResponseBody 是返回值处理器解析的</li><li>但具体转换工作是 MessageConverter 做的</li></ul></li><li>如何选择 MediaType <ul><li>首先看 @RequestMapping 上有没有指定 (即相当于：response.setContentType(&quot;application/json&quot;)😉</li><li>其次看 request 的 Accept 头有没有指定</li><li>最后按 MessageConverter 的顺序, 谁能谁先转换</li></ul></li></ol><h1 id="_29-controlleradvice-之-responsebodyadvice" tabindex="-1"><a class="header-anchor" href="#_29-controlleradvice-之-responsebodyadvice" aria-hidden="true">#</a> 29 @ControllerAdvice 之 ResponseBodyAdvice</h1><h2 id="_29-1-演示-responsebodyadvice-增强" tabindex="-1"><a class="header-anchor" href="#_29-1-演示-responsebodyadvice-增强" aria-hidden="true">#</a> 29.1 演示 - ResponseBodyAdvice 增强</h2><h3 id="_29-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_29-1-1-代码参考" aria-hidden="true">#</a> 29.1.1 代码参考</h3><h4 id="_1-result" tabindex="-1"><a class="header-anchor" href="#_1-result" aria-hidden="true">#</a> 1 Result</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a29</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonCreator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonInclude</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JsonProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> Result
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 14:42
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@JsonInclude</span><span class="token punctuation">(</span><span class="token class-name">JsonInclude<span class="token punctuation">.</span>Include</span><span class="token punctuation">.</span><span class="token constant">NON_NULL</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Result</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 状态码
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 消息说明
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 响应数据
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span> data<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@JsonCreator</span>
    <span class="token keyword">private</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Result</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Result</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Result</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;服务器内部错误:&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-webconfig-1" tabindex="-1"><a class="header-anchor" href="#_2-webconfig-1" aria-hidden="true">#</a> 2 WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a29<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a29<span class="token punctuation">.</span></span><span class="token class-name">Result</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MethodParameter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">MediaType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span><span class="token class-name">HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServerHttpRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServerHttpResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ControllerAdvice</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBodyAdvice</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 14:56
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ControllerAdvice</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyControllerAdvice</span> <span class="token keyword">implements</span> <span class="token class-name">ResponseBodyAdvice</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

        <span class="token doc-comment comment">/**
         * 判断是否支持此返回值类型
         *
         * <span class="token keyword">@param</span> <span class="token parameter">returnType</span>    返回值类型
         * <span class="token keyword">@param</span> <span class="token parameter">converterType</span> 转换器类型
         * <span class="token keyword">@return</span> 是否支持此操作
         */</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converterType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;enter..., {}&quot;</span><span class="token punctuation">,</span> returnType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> returnType<span class="token punctuation">.</span><span class="token function">getMethodAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ResponseBody</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token comment">// 方法上有ResponseBody</span>
                    <span class="token class-name">AnnotationUtils</span><span class="token punctuation">.</span><span class="token function">findAnnotation</span><span class="token punctuation">(</span>returnType<span class="token punctuation">.</span><span class="token function">getContainingClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ResponseBody</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 或者父类注解上有ResponseBody</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 将 User 或其它类型统一为 Result 类型
         *
         * <span class="token keyword">@param</span> <span class="token parameter">body</span>                  响应内容
         * <span class="token keyword">@param</span> <span class="token parameter">returnType</span>            返回值类型
         * <span class="token keyword">@param</span> <span class="token parameter">selectedContentType</span>   选择的转换类型
         * <span class="token keyword">@param</span> <span class="token parameter">selectedConverterType</span> 转换器类型
         * <span class="token keyword">@param</span> <span class="token parameter">request</span>               请求
         * <span class="token keyword">@param</span> <span class="token parameter">response</span>              响应
         * <span class="token keyword">@return</span> 增强后的body
         */</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">beforeBodyWrite</span><span class="token punctuation">(</span><span class="token class-name">Object</span> body<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">MediaType</span> selectedContentType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> selectedConverterType<span class="token punctuation">,</span> <span class="token class-name">ServerHttpRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServerHttpResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>body <span class="token keyword">instanceof</span> <span class="token class-name">Result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> body<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token comment">//    @Controller</span>
<span class="token comment">//    @ResponseBody</span>
    <span class="token annotation punctuation">@RestController</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-测试代码-1" tabindex="-1"><a class="header-anchor" href="#_3-测试代码-1" aria-hidden="true">#</a> 3 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a29</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a29<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">DefaultParameterNameDiscoverer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">ControllerAdviceBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExpressionValueMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestHeaderMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParamMethodArgumentResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodArgumentResolverComposite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethodReturnValueHandlerComposite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">ModelAndViewContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestControllerAdviceAndResponseBodyAdvice
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 15:07
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestControllerAdviceAndResponseBodyAdvice</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
            能学到了什么
                a. advice 之三, ResponseBodyAdvice 返回响应体前包装
         */</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">WebConfig<span class="token punctuation">.</span>MyController</span> myController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>MyController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">WebConfig<span class="token punctuation">.</span>MyController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ServletInvocableHandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">(</span>myController<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setHandlerMethodArgumentResolvers</span><span class="token punctuation">(</span><span class="token function">getArgumentResolvers</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMethod<span class="token punctuation">.</span><span class="token function">setHandlerMethodReturnValueHandlers</span><span class="token punctuation">(</span><span class="token function">getReturnValueHandlers</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletWebRequest</span> webRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ModelAndViewContainer</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndViewContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        handlerMethod<span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;response: {}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        applicationContext<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span> <span class="token function">getArgumentResolvers</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getDefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> composite<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span> <span class="token function">getReturnValueHandlers</span><span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 添加 advice</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ControllerAdviceBean</span><span class="token punctuation">&gt;</span></span> annotatedBeans <span class="token operator">=</span> <span class="token class-name">ControllerAdviceBean</span><span class="token punctuation">.</span><span class="token function">findAnnotatedBeans</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> annotatedBeans<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>b <span class="token operator">-&gt;</span> <span class="token class-name">ResponseBodyAdvice</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">getBeanType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodReturnValueHandlerComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ModelAndViewMethodReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewNameMethodReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpEntityMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHeadersReturnValueHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> collect<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> composite<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-测试结果-1" tabindex="-1"><a class="header-anchor" href="#_4-测试结果-1" aria-hidden="true">#</a> 4 测试结果</h4><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">:</span><span class="token number">47.317</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a29<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig    <span class="token operator">-</span> enter<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> method &#39;user&#39; <span class="token keyword">parameter</span> <span class="token operator">-</span><span class="token number">1</span> 
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">:</span><span class="token number">47.351</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> c<span class="token punctuation">.</span>i<span class="token punctuation">.</span>a<span class="token punctuation">.</span>TestControllerAdviceAndResponseBodyAdvice <span class="token operator">-</span> response<span class="token punctuation">:</span> <span class="token operator">{</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span><span class="token operator">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token operator">}}</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ResponseBodyAdvice 增强</strong> 在整个 HandlerAdapter 调用过程中所处的位置</p><figure><img src="`+S+`" alt="image-20230403160855552" tabindex="0" loading="lazy"><figcaption>image-20230403160855552</figcaption></figure><h3 id="_29-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_29-1-2-收获💡" aria-hidden="true">#</a> 29.1.2 收获💡</h3><ol><li>ResponseBodyAdvice 返回响应体前包装</li></ol><h1 id="_30-异常解析器" tabindex="-1"><a class="header-anchor" href="#_30-异常解析器" aria-hidden="true">#</a> 30 异常解析器</h1><h2 id="_30-1-演示-exceptionhandlerexceptionresolver" tabindex="-1"><a class="header-anchor" href="#_30-1-演示-exceptionhandlerexceptionresolver" aria-hidden="true">#</a> 30.1 演示 - ExceptionHandlerExceptionResolver</h2><h3 id="_30-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_30-1-1-代码参考" aria-hidden="true">#</a> 30.1.1 代码参考</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a30</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExceptionHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExceptionHandlerExceptionResolver</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestExceptionHandler
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 15:43
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestExceptionHandler</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 测试Json</span>
        <span class="token comment">// HandlerMethod handler = new HandlerMethod(new Controller1(), Controller1.class.getMethod(&quot;foo&quot;));</span>
        <span class="token comment">// 2 测试ModelAndView</span>
        <span class="token comment">// HandlerMethod handler = new HandlerMethod(new Controller2(), Controller2.class.getMethod(&quot;foo&quot;));</span>
        <span class="token comment">// 3 测试嵌套异常</span>
        <span class="token comment">// HandlerMethod handler = new HandlerMethod(new Controller3(), Controller3.class.getMethod(&quot;foo&quot;));</span>
        <span class="token comment">// 4 测试异常处理方法参数解析</span>
        <span class="token class-name">HandlerMethod</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Controller4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Controller4</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">defaultHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;非法的访问异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
           <span class="token comment">/*
            学到了什么
                a. ExceptionHandlerExceptionResolver 能够重用参数解析器、返回值处理器，实现组件重用
                b. 能够支持嵌套异常
         */</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">defaultHandler</span><span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span> handler<span class="token punctuation">,</span> <span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 准备异常解析器</span>
        <span class="token class-name">ExceptionHandlerExceptionResolver</span> resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExceptionHandlerExceptionResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">setMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2 准备模拟请求</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3 准备控制器方法(通过参数传入)</span>


        <span class="token comment">// 4 准备异常对象</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>exception <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exception <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticException</span><span class="token punctuation">(</span><span class="token string">&quot;被0除&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 5 解析异常</span>
        <span class="token class-name">ModelAndView</span> modelAndView <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">resolveException</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> exception<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 6 打印结果</span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;result: {}&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>modelAndView <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>modelAndView<span class="token punctuation">.</span><span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            modelAndView<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;viewName: {}, model: {}&quot;</span><span class="token punctuation">,</span> modelAndView<span class="token punctuation">.</span><span class="token function">getViewName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> modelAndView<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">defaultHandler</span><span class="token punctuation">(</span><span class="token class-name">HandlerMethod</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token function">defaultHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * json
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller1</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token annotation punctuation">@ExceptionHandler</span>
        <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ArithmeticException</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ModelAndView
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller2</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ExceptionHandler</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ArithmeticException</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 测试嵌套异常
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller3</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ExceptionHandler</span>
        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
	 * 测试异常处理方法参数解析
	 */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller4</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@ExceptionHandler</span>
        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_30-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_30-1-2-收获💡" aria-hidden="true">#</a> 30.1.2 收获💡</h3><ol><li>它能够重用参数解析器、返回值处理器，实现组件重用</li><li>它能够支持嵌套异常</li></ol><h1 id="_31-controlleradvice-之-exceptionhandler" tabindex="-1"><a class="header-anchor" href="#_31-controlleradvice-之-exceptionhandler" aria-hidden="true">#</a> 31 @ControllerAdvice 之 @ExceptionHandler</h1><h2 id="_31-1-演示-准备-exceptionhandler" tabindex="-1"><a class="header-anchor" href="#_31-1-演示-准备-exceptionhandler" aria-hidden="true">#</a> 31.1 演示 - 准备 @ExceptionHandler</h2><h3 id="_31-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_31-1-1-代码参考" aria-hidden="true">#</a> 31.1.1 代码参考</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a31</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a31<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">MockHttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">HandlerMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExceptionHandlerExceptionResolver</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestControllerAdviceAndExceptionHandler
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 16:13
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestControllerAdviceAndExceptionHandler</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// test1();</span>
        <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 运行结果：
     * [DEBUG] 16:38:27.755 [main] c.i.a.TestControllerAdviceAndExceptionHandler - response:<span class="token punctuation">{</span>&quot;error&quot;:&quot;非法的参数异常&quot;<span class="token punctuation">}</span>
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 通过@ControllerAdvice配置全局的异常处理器来处理Controller未加异常处理器时抛出的异常
     *
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NoSuchMethodException</span></span>        NoSuchMethodException
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">UnsupportedEncodingException</span></span> UnsupportedEncodingException
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">AnnotationConfigApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ExceptionHandlerExceptionResolver</span> resolver <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">ExceptionHandlerExceptionResolver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">resolveException</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Controller</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;非法的参数异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;response:{}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        applicationContext<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * [DEBUG] 16:30:05.971 [main] c.i.a.TestControllerAdviceAndExceptionHandler - response:
     * 没有异常处理结果
     * 在这个控制器中，我们没有写异常处理器，所以无异常处理结果
     * 但是我们希望，即使我们在这个类中没有写异常处理器，也有一个全局的异常处理器来处理异常
     *
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NoSuchMethodException</span></span>        NoSuchMethodException
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">UnsupportedEncodingException</span></span> UnsupportedEncodingException
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">MockHttpServletRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MockHttpServletResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockHttpServletResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ExceptionHandlerExceptionResolver</span> resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExceptionHandlerExceptionResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">setMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Controller</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolver<span class="token punctuation">.</span><span class="token function">resolveException</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> handlerMethod<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;运行时异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;response: {}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getContentAsString</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;foo...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_31-1-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_31-1-2-收获💡" aria-hidden="true">#</a> 31.1.2 收获💡</h3><ol><li>ExceptionHandlerExceptionResolver 初始化时会解析 @ControllerAdvice 中的 @ExceptionHandler 方法</li><li>ExceptionHandlerExceptionResolver 会以类为单位，在该类首次处理异常时，解析此类的 @ExceptionHandler 方法</li><li>以上两种 @ExceptionHandler 的解析结果都会缓存来避免重复解析</li></ol><h1 id="_32-tomcat-异常处理" tabindex="-1"><a class="header-anchor" href="#_32-tomcat-异常处理" aria-hidden="true">#</a> 32 Tomcat 异常处理</h1><ul><li><p>我们知道 @ExceptionHandler 只能处理发生在 mvc 流程中的异常，例如控制器内、拦截器内，那么如果是 Filter 出现了异常，如何进行处理呢？</p></li><li><p>在 Spring Boot 中，是这么实现的：</p><ol><li>因为内嵌了 Tomcat 容器，因此可以配置 Tomcat 的错误页面，Filter 与 错误页面之间是通过请求转发跳转的，可以在这里做手脚</li><li>先通过 ErrorPageRegistrarBeanPostProcessor 这个后处理器配置错误页面地址，默认为 <code>/error</code> 也可以通过 <code>\${server.error.path}</code> 进行配置</li><li>当 Filter 发生异常时，不会走 Spring 流程，但会走 Tomcat 的错误处理，于是就希望转发至 <code>/error</code> 这个地址 <ul><li>当然，如果没有 @ExceptionHandler，那么最终也会走到 Tomcat 的错误处理</li></ul></li><li>Spring Boot 又提供了一个 BasicErrorController，它就是一个标准 @Controller，@RequestMapping 配置为 <code>/error</code>，所以处理异常的职责就又回到了 Spring</li><li>异常信息由于会被 Tomcat 放入 request 作用域，因此 BasicErrorController 里也能获取到</li><li>具体异常信息会由 DefaultErrorAttributes 封装好</li><li>BasicErrorController 通过 Accept 头判断需要生成哪种 MediaType 的响应 <ul><li>如果要的不是 text/html，走 MessageConverter 流程</li><li>如果需要 text/html，走 mvc 流程，此时又分两种情况 <ul><li>配置了 ErrorViewResolver，根据状态码去找 View</li><li>没配置或没找到，用 BeanNameViewResolver 根据一个固定为 error 的名字找到 View，即所谓的 WhitelabelErrorView</li></ul></li></ul></li></ol></li></ul><blockquote><p><em><strong>评价</strong></em></p><ul><li>一个错误处理搞得这么复杂，就问恶心不？</li></ul></blockquote><h2 id="_32-1-错误现象演示-原始的tomcat处理异常" tabindex="-1"><a class="header-anchor" href="#_32-1-错误现象演示-原始的tomcat处理异常" aria-hidden="true">#</a> 32.1 错误现象演示-原始的Tomcat处理异常</h2><h3 id="_32-1-1-代码" tabindex="-1"><a class="header-anchor" href="#_32-1-1-代码" aria-hidden="true">#</a> 32.1.1 代码</h3><h4 id="_1-webconfig-1" tabindex="-1"><a class="header-anchor" href="#_1-webconfig-1" aria-hidden="true">#</a> 1 WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span> Web容器三部曲，Tomcat工厂，初始化DispatchServlet，将DispatchServlet进行注册
 * <span class="token keyword">@since</span> 2022/12/14 16:43
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">registrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMappingHandlerMapping <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-测试代码" tabindex="-1"><a class="header-anchor" href="#_2-测试代码" aria-hidden="true">#</a> 2 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span> Web容器三部曲，Tomcat工厂，初始化DispatchServlet，将DispatchServlet进行注册
 * <span class="token keyword">@since</span> 2022/12/14 16:43
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">registrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerMapping</span> requestMappingHandlerMapping <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-测试" tabindex="-1"><a class="header-anchor" href="#_3-测试" aria-hidden="true">#</a> 3 测试</h4><p>在浏览器输入</p>`,369),D={href:"http://127.0.0.1:8080/hello",target:"_blank",rel:"noopener noreferrer"},T=s('<h5 id="_3-1-前台显示" tabindex="-1"><a class="header-anchor" href="#_3-1-前台显示" aria-hidden="true">#</a> 3.1 前台显示</h5><figure><img src="'+M+`" alt="image-20221214170249083" tabindex="0" loading="lazy"><figcaption>image-20221214170249083</figcaption></figure><h5 id="_3-2-后台日志" tabindex="-1"><a class="header-anchor" href="#_3-2-后台日志" aria-hidden="true">#</a> 3.2 后台日志</h5><div class="language-verilog line-numbers-mode" data-ext="verilog"><pre class="language-verilog"><code><span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">02</span><span class="token punctuation">:</span><span class="token number">27.405</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> GET <span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> parameters<span class="token operator">={}</span><span class="token punctuation">,</span> headers<span class="token operator">={</span>masked<span class="token operator">}</span> in DispatcherServlet &#39;dispatcherServlet&#39; 
<span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">02</span><span class="token punctuation">:</span><span class="token number">27.405</span> <span class="token punctuation">[</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet   <span class="token operator">-</span> Failed to complete request 
java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ArithmeticException<span class="token punctuation">:</span> <span class="token operator">/</span> by zero
	at com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$MyController<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span>WebConfig<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">49</span><span class="token punctuation">)</span>
	at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>NativeMethodAccessorImpl<span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
	at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>NativeMethodAccessorImpl<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>NativeMethodAccessorImpl<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">62</span><span class="token punctuation">)</span>
	at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>DelegatingMethodAccessorImpl<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>DelegatingMethodAccessorImpl<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">43</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>Method<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">498</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span>InvocableHandlerMethod<span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span>InvocableHandlerMethod<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">205</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span>InvocableHandlerMethod<span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span>InvocableHandlerMethod<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ServletInvocableHandlerMethod<span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span>ServletInvocableHandlerMethod<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">117</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">895</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">808</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>AbstractHandlerMethodAdapter<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>AbstractHandlerMethodAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">87</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet<span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span>DispatcherServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1067</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet<span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span>DispatcherServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">963</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FrameworkServlet<span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span>FrameworkServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1006</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FrameworkServlet<span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>FrameworkServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">898</span><span class="token punctuation">)</span>
	at javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>HttpServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">655</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FrameworkServlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>FrameworkServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">883</span><span class="token punctuation">)</span>
	at javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>HttpServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">764</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationFilterChain<span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span>ApplicationFilterChain<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">227</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationFilterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>ApplicationFilterChain<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">162</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardWrapperValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardWrapperValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">197</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardContextValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardContextValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">97</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span>AuthenticatorBase<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>AuthenticatorBase<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">541</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardHostValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardHostValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">135</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span>ErrorReportValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>ErrorReportValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">92</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngineValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardEngineValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">78</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>CoyoteAdapter<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>CoyoteAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">360</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span>Http11Processor<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>Http11Processor<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">399</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProcessorLight<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>AbstractProcessorLight<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">65</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol$ConnectionHandler<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>AbstractProtocol<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">890</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span>NioEndpoint$SocketProcessor<span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span>NioEndpoint<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1743</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span>SocketProcessorBase<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>SocketProcessorBase<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">49</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span>ThreadPoolExecutor<span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span>ThreadPoolExecutor<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1191</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span>ThreadPoolExecutor$Worker<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ThreadPoolExecutor<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">659</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span>TaskThread$WrappingRunnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>TaskThread<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">61</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">748</span><span class="token punctuation">)</span>
十二月 <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2022</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token number">02</span><span class="token punctuation">:</span><span class="token number">27</span> 下午 org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardWrapperValve invoke
严重<span class="token punctuation">:</span> Servlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> servlet <span class="token punctuation">[</span>dispatcherServlet<span class="token punctuation">]</span> in <span class="token keyword">context</span> <span class="token keyword">with</span> path <span class="token punctuation">[</span><span class="token punctuation">]</span> threw exception <span class="token punctuation">[</span>Request processing failed<span class="token punctuation">;</span> nested exception is java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ArithmeticException<span class="token punctuation">:</span> <span class="token operator">/</span> by zero<span class="token punctuation">]</span> <span class="token keyword">with</span> root cause
java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ArithmeticException<span class="token punctuation">:</span> <span class="token operator">/</span> by zero
	at com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32<span class="token punctuation">.</span><span class="token keyword">config</span><span class="token punctuation">.</span>WebConfig$MyController<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span>WebConfig<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">49</span><span class="token punctuation">)</span>
	at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>NativeMethodAccessorImpl<span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
	at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>NativeMethodAccessorImpl<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>NativeMethodAccessorImpl<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">62</span><span class="token punctuation">)</span>
	at sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>DelegatingMethodAccessorImpl<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>DelegatingMethodAccessorImpl<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">43</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>Method<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">498</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span>InvocableHandlerMethod<span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span>InvocableHandlerMethod<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">205</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span>InvocableHandlerMethod<span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span>InvocableHandlerMethod<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ServletInvocableHandlerMethod<span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span>ServletInvocableHandlerMethod<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">117</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">895</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span>RequestMappingHandlerAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">808</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>AbstractHandlerMethodAdapter<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>AbstractHandlerMethodAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">87</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet<span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span>DispatcherServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1067</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet<span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span>DispatcherServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">963</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FrameworkServlet<span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span>FrameworkServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1006</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FrameworkServlet<span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>FrameworkServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">898</span><span class="token punctuation">)</span>
	at javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>HttpServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">655</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FrameworkServlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>FrameworkServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">883</span><span class="token punctuation">)</span>
	at javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>HttpServlet<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">764</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationFilterChain<span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span>ApplicationFilterChain<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">227</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ApplicationFilterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>ApplicationFilterChain<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">162</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardWrapperValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardWrapperValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">197</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardContextValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardContextValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">97</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span>AuthenticatorBase<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>AuthenticatorBase<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">541</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardHostValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardHostValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">135</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span>ErrorReportValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>ErrorReportValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">92</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StandardEngineValve<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>StandardEngineValve<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">78</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>CoyoteAdapter<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>CoyoteAdapter<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">360</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span>Http11Processor<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>Http11Processor<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">399</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProcessorLight<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>AbstractProcessorLight<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">65</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>AbstractProtocol$ConnectionHandler<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>AbstractProtocol<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">890</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span>NioEndpoint$SocketProcessor<span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span>NioEndpoint<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1743</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span>SocketProcessorBase<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>SocketProcessorBase<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">49</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span>ThreadPoolExecutor<span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span>ThreadPoolExecutor<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">1191</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span>ThreadPoolExecutor$Worker<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ThreadPoolExecutor<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">659</span><span class="token punctuation">)</span>
	at org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span>TaskThread$WrappingRunnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>TaskThread<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">61</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span>java<span class="token punctuation">:</span><span class="token number">748</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-存在的问题" tabindex="-1"><a class="header-anchor" href="#_4-存在的问题" aria-hidden="true">#</a> 4 存在的问题</h4><p>这种直接在前台页面显示异常不是我们所期待的结果，我们需要显示自定义的错误页面</p><h2 id="_32-2-演示1-错误页处理" tabindex="-1"><a class="header-anchor" href="#_32-2-演示1-错误页处理" aria-hidden="true">#</a> 32.2 演示1 - 错误页处理</h2><h3 id="_32-1-1-关键代码" tabindex="-1"><a class="header-anchor" href="#_32-1-1-关键代码" aria-hidden="true">#</a> 32.1.1 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span> <span class="token comment">// ⬅️修改了 Tomcat 服务器默认错误地址, 出错时使用请求转发方式跳转</span>
<span class="token keyword">public</span> <span class="token class-name">ErrorPageRegistrar</span> <span class="token function">errorPageRegistrar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> webServerFactory <span class="token operator">-&gt;</span> webServerFactory<span class="token punctuation">.</span><span class="token function">addErrorPages</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ErrorPage</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span> <span class="token comment">// ⬅️TomcatServletWebServerFactory 初始化前用它增强, 注册所有 ErrorPageRegistrar</span>
<span class="token keyword">public</span> <span class="token class-name">ErrorPageRegistrarBeanPostProcessor</span> <span class="token function">errorPageRegistrarBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorPageRegistrarBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_32-1-2-测试结果" tabindex="-1"><a class="header-anchor" href="#_32-1-2-测试结果" aria-hidden="true">#</a> 32.1.2 测试结果</h3><figure><img src="`+R+`" alt="image-20221214171244246" tabindex="0" loading="lazy"><figcaption>image-20221214171244246</figcaption></figure><h3 id="_32-1-3-解决上述问题" tabindex="-1"><a class="header-anchor" href="#_32-1-3-解决上述问题" aria-hidden="true">#</a> 32.1.3 解决上述问题</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 添加自定义的错误信息
         *
         * <span class="token keyword">@param</span> <span class="token parameter">request</span> 请求
         * <span class="token keyword">@return</span> 错误信息
         */</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">)</span>
        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Throwable</span> throwable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">RequestDispatcher</span><span class="token punctuation">.</span><span class="token constant">ERROR_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析控制器方法参数
     * 处理返回值
     *
     * <span class="token keyword">@return</span> RequestMappingHandlerAdapter
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerAdapter</span> <span class="token function">requestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">setMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handlerAdapter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+C+`" alt="image-20221214172528313" tabindex="0" loading="lazy"><figcaption>image-20221214172528313</figcaption></figure><h3 id="_32-1-4-收获💡" tabindex="-1"><a class="header-anchor" href="#_32-1-4-收获💡" aria-hidden="true">#</a> 32.1.4 收获💡</h3><ol><li>Tomcat 的错误页处理手段</li></ol><h2 id="_32-2-演示2-basicerrorcontroller" tabindex="-1"><a class="header-anchor" href="#_32-2-演示2-basicerrorcontroller" aria-hidden="true">#</a> 32.2 演示2 - BasicErrorController</h2><h3 id="_32-2-1-关键代码" tabindex="-1"><a class="header-anchor" href="#_32-2-1-关键代码" aria-hidden="true">#</a> 32.2.1 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * ErrorProperties 封装了环境键值，ErrorAttributes控制有哪些错误信息
     * SpringBoot中处理Tomcat异常的流程
     *
     * <span class="token keyword">@return</span> BasicErrorController
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">BasicErrorController</span> <span class="token function">basicErrorController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ErrorProperties</span> errorProperties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ErrorProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        errorProperties<span class="token punctuation">.</span><span class="token function">setIncludeException</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BasicErrorController</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultErrorAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> errorProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 注意此处的方法名必须为error
     * 方法名就是视图名
     *
     * <span class="token keyword">@return</span> error视图
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>model<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> model<span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h3&gt;服务器内部错误，请联系管理员进行处理&lt;/h3&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 收集容器中所有的View对象，bean的名字作为视图名
     *
     * <span class="token keyword">@return</span> BeanNameViewResolver
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ViewResolver</span> <span class="token function">viewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanNameViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*   */</span><span class="token doc-comment comment">/**
         * 添加自定义的错误信息
         *
         * <span class="token keyword">@param</span> <span class="token parameter">request</span> 请求
         * <span class="token keyword">@return</span> 错误信息
         */</span><span class="token operator">/</span><span class="token operator">*</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">)</span>
        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Throwable</span> throwable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">RequestDispatcher</span><span class="token punctuation">.</span><span class="token constant">ERROR_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token operator">*</span><span class="token operator">/</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+A+`" alt="image-20221214173425567" tabindex="0" loading="lazy"><figcaption>image-20221214173425567</figcaption></figure><h3 id="_32-2-2-完整代码" tabindex="-1"><a class="header-anchor" href="#_32-2-2-完整代码" aria-hidden="true">#</a> 32.2.2 完整代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">ErrorProperties</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>error<span class="token punctuation">.</span></span><span class="token class-name">BasicErrorController</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ErrorPage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ErrorPageRegistrar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ErrorPageRegistrarBeanPostProcessor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>error<span class="token punctuation">.</span></span><span class="token class-name">DefaultErrorAttributes</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2HttpMessageConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseBody</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ViewResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">BeanNameViewResolver</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">RequestDispatcher</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span> Web容器三部曲，Tomcat工厂，初始化DispatchServlet，将DispatchServlet进行注册
 * <span class="token keyword">@since</span> 2022/12/14 16:43
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">registrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerMapping</span> <span class="token function">requestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析控制器方法参数
     * 处理返回值
     *
     * <span class="token keyword">@return</span> RequestMappingHandlerAdapter
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerAdapter</span> <span class="token function">requestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RequestMappingHandlerAdapter</span> handlerAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerAdapter<span class="token punctuation">.</span><span class="token function">setMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handlerAdapter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 修改了Tomcat服务器默认的错误地址，出错时使用请求转发的方式进行跳转
     *
     * <span class="token keyword">@return</span> ErrorPageRegistrar
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ErrorPageRegistrar</span> <span class="token function">errorPageRegistrar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> webServletFactory <span class="token operator">-&gt;</span> webServletFactory<span class="token punctuation">.</span><span class="token function">addErrorPages</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ErrorPage</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * TomcatServletWebServerFactory 初始化前用它增强，注册所有的 ErrorPageRegistrar
     *
     * <span class="token keyword">@return</span> ErrorPageRegistrarBeanPostProcessor
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ErrorPageRegistrarBeanPostProcessor</span> <span class="token function">errorPageRegistrarBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ErrorPageRegistrarBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ErrorProperties 封装了环境键值，ErrorAttributes控制有哪些错误信息
     * SpringBoot中处理Tomcat异常的流程
     *
     * <span class="token keyword">@return</span> BasicErrorController
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">BasicErrorController</span> <span class="token function">basicErrorController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ErrorProperties</span> errorProperties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ErrorProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        errorProperties<span class="token punctuation">.</span><span class="token function">setIncludeException</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BasicErrorController</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultErrorAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> errorProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 注意此处的方法名必须为error
     * 方法名就是视图名
     *
     * <span class="token keyword">@return</span> error视图
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>model<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> model<span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h3&gt;服务器内部错误，请联系管理员进行处理&lt;/h3&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 收集容器中所有的View对象，bean的名字作为视图名
     *
     * <span class="token keyword">@return</span> BeanNameViewResolver
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ViewResolver</span> <span class="token function">viewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanNameViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Controller</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*   */</span><span class="token doc-comment comment">/**
         * 添加自定义的错误信息
         *
         * <span class="token keyword">@param</span> <span class="token parameter">request</span> 请求
         * <span class="token keyword">@return</span> 错误信息
         */</span><span class="token operator">/</span><span class="token operator">*</span>
        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">)</span>
        <span class="token annotation punctuation">@ResponseBody</span>
        <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Throwable</span> throwable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">RequestDispatcher</span><span class="token punctuation">.</span><span class="token constant">ERROR_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token operator">*</span><span class="token operator">/</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码" aria-hidden="true">#</a> 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a32<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestTomcatExceptionHandler
 * <span class="token keyword">@description</span> 测试Tomcat的异常处理流程
 * <span class="token keyword">@since</span> 2022/12/14 16:42
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestTomcatExceptionHandler</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RequestMappingHandlerMapping</span> handlerMapping <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMapping<span class="token punctuation">.</span><span class="token function">getHandlerMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_32-2-3-收获💡" tabindex="-1"><a class="header-anchor" href="#_32-2-3-收获💡" aria-hidden="true">#</a> 32.2.3 收获💡</h3><ol><li>Spring Boot 中 BasicErrorController 如何工作</li></ol><h1 id="_33-beannameurlhandlermapping-与-simplecontrollerhandleradapter" tabindex="-1"><a class="header-anchor" href="#_33-beannameurlhandlermapping-与-simplecontrollerhandleradapter" aria-hidden="true">#</a> 33 BeanNameUrlHandlerMapping 与 SimpleControllerHandlerAdapter</h1><h2 id="_33-1-测试beannameurlhandlermapping-和simplecontrollerhandleradapter" tabindex="-1"><a class="header-anchor" href="#_33-1-测试beannameurlhandlermapping-和simplecontrollerhandleradapter" aria-hidden="true">#</a> 33.1 测试BeanNameUrlHandlerMapping 和SimpleControllerHandlerAdapter</h2><h3 id="_33-1-1-webconfig" tabindex="-1"><a class="header-anchor" href="#_33-1-1-webconfig" aria-hidden="true">#</a> 33.1.1 WebConfig</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">BeanNameUrlHandlerMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">SimpleControllerHandlerAdapter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 17:47
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">dispatcherServletRegistrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">BeanNameUrlHandlerMapping</span> <span class="token function">beanNameUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanNameUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SimpleControllerHandlerAdapter</span> <span class="token function">simpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">&quot;/c1&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller1</span> <span class="token keyword">implements</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">&quot;/c2&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller2</span> <span class="token keyword">implements</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/c3&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Controller</span> <span class="token function">controller3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_33-1-2-测试代码" tabindex="-1"><a class="header-anchor" href="#_33-1-2-测试代码" aria-hidden="true">#</a> 33.1.2 测试代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestBeanNameUrlHandlerMappingAndSimpleControllerHandlerAdapter
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 17:45
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBeanNameUrlHandlerMappingAndSimpleControllerHandlerAdapter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">/*
            学到了什么
                a. BeanNameUrlHandlerMapping, 以 / 开头的 bean 的名字会被当作映射路径
                b. 这些 bean 本身当作 handler, 要求实现 Controller 接口
                c. SimpleControllerHandlerAdapter, 调用 handler

            对比
                a. RequestMappingHandlerAdapter, 以 @RequestMapping 作为映射路径
                b. 控制器的具体方法会被当作 handler
                c. RequestMappingHandlerAdapter, 调用 handler
         */</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_33-2-演示-本组映射器和适配器" tabindex="-1"><a class="header-anchor" href="#_33-2-演示-本组映射器和适配器" aria-hidden="true">#</a> 33.2 演示 - 本组映射器和适配器</h2><h3 id="_33-2-1-关键代码" tabindex="-1"><a class="header-anchor" href="#_33-2-1-关键代码" aria-hidden="true">#</a> 33.2.1 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">BeanNameUrlHandlerMapping</span> <span class="token function">beanNameUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanNameUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">SimpleControllerHandlerAdapter</span> <span class="token function">simpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/c3&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Controller</span> <span class="token function">controller3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_33-3-自定义实现此组mapping和adapter" tabindex="-1"><a class="header-anchor" href="#_33-3-自定义实现此组mapping和adapter" aria-hidden="true">#</a> 33.3 自定义实现此组Mapping和Adapter</h2><h3 id="_33-3-1-mybeannameurlhandlermapping" tabindex="-1"><a class="header-anchor" href="#_33-3-1-mybeannameurlhandlermapping" aria-hidden="true">#</a> 33.3.1 MyBeanNameUrlHandlerMapping</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>custom</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerExecutionChain</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> MyBeanNameUrlHandlerMapping
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 18:05
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBeanNameUrlHandlerMapping</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerMapping</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">usesPathPatterns</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">HandlerMapping</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">usesPathPatterns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">HandlerExecutionChain</span> <span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取请求路径</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> controllerMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从Map中获取Controller</span>
        <span class="token class-name">Controller</span> controller <span class="token operator">=</span> controllerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>controller <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// 返回执行器链</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HandlerExecutionChain</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 存储所有以 &quot;/&quot; 开头的Controller
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Controller</span><span class="token punctuation">&gt;</span></span> controllerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
         * 将所有以&quot;/&quot; 开头的Controller放入Map集合之中
         */</span>
        controllerMap<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>
                applicationContext
                        <span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">Controller</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>entry <span class="token operator">-&gt;</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token operator">::</span><span class="token function">getKey</span><span class="token punctuation">,</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token operator">::</span><span class="token function">getValue</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_33-3-2-mysimplehandlermappingadapter" tabindex="-1"><a class="header-anchor" href="#_33-3-2-mysimplehandlermappingadapter" aria-hidden="true">#</a> 33.3.2 MySimpleHandlerMappingAdapter</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>custom</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">HandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> MySimpleHandlerMappingAdapter
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 18:06
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySimpleHandlerMappingAdapter</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerAdapter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 只支持Controller对象</span>
        <span class="token keyword">return</span> handler <span class="token keyword">instanceof</span> <span class="token class-name">Controller</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>handler <span class="token keyword">instanceof</span> <span class="token class-name">Controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Controller</span><span class="token punctuation">)</span> handler<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 此方法已经被废弃了，所以无需在意
     *
     * <span class="token keyword">@param</span> <span class="token parameter">request</span>
     * <span class="token keyword">@param</span> <span class="token parameter">handler</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Deprecated</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getLastModified</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_33-3-3-webconfig2" tabindex="-1"><a class="header-anchor" href="#_33-3-3-webconfig2" aria-hidden="true">#</a> 33.3.3 WebConfig2</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span><span class="token class-name">MyBeanNameUrlHandlerMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span><span class="token class-name">MySimpleHandlerMappingAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ModelAndView</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 17:47
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig2</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">dispatcherServletRegistrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MyBeanNameUrlHandlerMapping</span> <span class="token function">myBeanNameUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyBeanNameUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MySimpleHandlerMappingAdapter</span> <span class="token function">mySimpleHandlerMappingAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MySimpleHandlerMappingAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">&quot;/c1&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller1</span> <span class="token keyword">implements</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">&quot;/c2&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller2</span> <span class="token keyword">implements</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/c3&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Controller</span> <span class="token function">controller3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;c4&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Controller</span> <span class="token function">controller4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;this is c4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_33-3-4-测试代码" tabindex="-1"><a class="header-anchor" href="#_33-3-4-测试代码" aria-hidden="true">#</a> 33.3.4 测试代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a33<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig2</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestBeanNameUrlHandlerMappingAndSimpleControllerHandlerAdapter
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 17:45
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBeanNameUrlHandlerMappingAndSimpleControllerHandlerAdapter2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">/*
            学到了什么
                a. BeanNameUrlHandlerMapping, 以 / 开头的 bean 的名字会被当作映射路径
                b. 这些 bean 本身当作 handler, 要求实现 Controller 接口
                c. SimpleControllerHandlerAdapter, 调用 handler

            对比
                a. RequestMappingHandlerAdapter, 以 @RequestMapping 作为映射路径
                b. 控制器的具体方法会被当作 handler
                c. RequestMappingHandlerAdapter, 调用 handler
         */</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_33-4-收获💡" tabindex="-1"><a class="header-anchor" href="#_33-4-收获💡" aria-hidden="true">#</a> 33.4 收获💡</h2><ol><li>BeanNameUrlHandlerMapping，以 / 开头的 bean 的名字会被当作映射路径</li><li>这些 bean 本身当作 handler，要求实现 Controller 接口</li><li>SimpleControllerHandlerAdapter，调用 handler</li><li>模拟实现这组映射器和适配器</li></ol><h1 id="_34-routerfunctionmapping-与-handlerfunctionadapter" tabindex="-1"><a class="header-anchor" href="#_34-routerfunctionmapping-与-handlerfunctionadapter" aria-hidden="true">#</a> 34 RouterFunctionMapping 与 HandlerFunctionAdapter</h1><h2 id="_34-1-演示-本组映射器和适配器" tabindex="-1"><a class="header-anchor" href="#_34-1-演示-本组映射器和适配器" aria-hidden="true">#</a> 34.1 演示 - 本组映射器和适配器</h2><h3 id="_34-1-1-完整代码" tabindex="-1"><a class="header-anchor" href="#_34-1-1-完整代码" aria-hidden="true">#</a> 34.1.1 完整代码</h3><h4 id="_1-webconfig-2" tabindex="-1"><a class="header-anchor" href="#_1-webconfig-2" aria-hidden="true">#</a> 1 WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a34<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>function<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">HandlerFunctionAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>function<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">RouterFunctionMapping</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 18:32
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">dispatcherServletRegistrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RouterFunctionMapping</span> <span class="token function">routerFunctionMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RouterFunctionMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">HandlerFunctionAdapter</span> <span class="token function">handlerFunctionAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HandlerFunctionAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RouterFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">r1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">RouterFunctions</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token class-name">RequestPredicates</span><span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/r1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request <span class="token operator">-&gt;</span> <span class="token class-name">ServerResponse</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;this is r1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RouterFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">r2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">RouterFunctions</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token class-name">RequestPredicates</span><span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/r2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request <span class="token operator">-&gt;</span> <span class="token class-name">ServerResponse</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;this is r2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-测试代码-1" tabindex="-1"><a class="header-anchor" href="#_2-测试代码-1" aria-hidden="true">#</a> 2 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a34</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>a34<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestRouterFunctionMappingAndHandlerFunctionAdapter
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 18:31
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestRouterFunctionMappingAndHandlerFunctionAdapter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+x+`" alt="image-20221214184147181" tabindex="0" loading="lazy"><figcaption>image-20221214184147181</figcaption></figure><h3 id="_34-1-2-关键代码" tabindex="-1"><a class="header-anchor" href="#_34-1-2-关键代码" aria-hidden="true">#</a> 34.1.2 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">RouterFunctionMapping</span> <span class="token function">routerFunctionMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RouterFunctionMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">HandlerFunctionAdapter</span> <span class="token function">handlerFunctionAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HandlerFunctionAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">RouterFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">r1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//           ⬇️映射条件   ⬇️handler</span>
    <span class="token keyword">return</span> <span class="token function">route</span><span class="token punctuation">(</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/r1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request <span class="token operator">-&gt;</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;this is r1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_34-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_34-2-收获💡" aria-hidden="true">#</a> 34.2 收获💡</h2><ol><li>RouterFunctionMapping, 通过 RequestPredicate 条件映射</li><li>handler 要实现 HandlerFunction 接口</li><li>HandlerFunctionAdapter, 调用 handler</li></ol><h1 id="_35-simpleurlhandlermapping-与-httprequesthandleradapter" tabindex="-1"><a class="header-anchor" href="#_35-simpleurlhandlermapping-与-httprequesthandleradapter" aria-hidden="true">#</a> 35 SimpleUrlHandlerMapping 与 HttpRequestHandlerAdapter</h1><h2 id="_35-1-演示1-本组映射器和适配器" tabindex="-1"><a class="header-anchor" href="#_35-1-演示1-本组映射器和适配器" aria-hidden="true">#</a> 35.1 演示1 - 本组映射器和适配器</h2><h3 id="_35-1-1-代码参考" tabindex="-1"><a class="header-anchor" href="#_35-1-1-代码参考" aria-hidden="true">#</a> 35.1.1 代码参考</h3><blockquote><p>ps 必须要放在org.springframework.boot.autoconfigure.web.servlet包中</p><p>不然欢迎页无法配置</p><p>WelcomePageHandlerMapping</p></blockquote><h4 id="_1-webconfig-3" tabindex="-1"><a class="header-anchor" href="#_1-webconfig-3" aria-hidden="true">#</a> 1 WebConfig</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentMapCache</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ClassPathResource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">FileCopyUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherServlet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">SimpleUrlHandlerMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">HttpRequestHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span></span><span class="token class-name">SimpleControllerHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>resource<span class="token punctuation">.</span></span><span class="token class-name">CachingResourceResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>resource<span class="token punctuation">.</span></span><span class="token class-name">EncodedResourceResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>resource<span class="token punctuation">.</span></span><span class="token class-name">PathResourceResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>resource<span class="token punctuation">.</span></span><span class="token class-name">ResourceHttpRequestHandler</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span><span class="token class-name">GZIPOutputStream</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> WebConfig
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 18:51
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DispatcherServletRegistrationBean</span> <span class="token function">dispatcherServletRegistrationBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span> dispatcherServlet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DispatcherServletRegistrationBean</span> registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServletRegistrationBean</span><span class="token punctuation">(</span>dispatcherServlet<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 1 SimpleUrlHandlerMapping 不会在初始化的时收集映射信息，需要手动收集
     * 2 SimpleUrlHandlerMapping 映射路径
     * 3 ResourceHttpRequestHandler 作为静态资源的handler
     * 4 HttpRequestHandlerAdapter 会调用ResourceHttpRequestHandler
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> applicationContext
     * <span class="token keyword">@return</span> SimpleUrlHandlerMapping
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SimpleUrlHandlerMapping</span> <span class="token function">simpleUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SimpleUrlHandlerMapping</span> handlerMapping <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">&gt;</span></span> urlMap <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handlerMapping<span class="token punctuation">.</span><span class="token function">setUrlMap</span><span class="token punctuation">(</span>urlMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;urlMap: {}&quot;</span><span class="token punctuation">,</span> urlMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handlerMapping<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 4 HttpRequestHandlerAdapter 会调用ResourceHttpRequestHandler
     *
     * <span class="token keyword">@return</span> HttpRequestHandlerAdapter
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">HttpRequestHandlerAdapter</span> <span class="token function">httpRequestHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HttpRequestHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * /index.html
     * /r1.html
     * /r2.html
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * /**
     */</span>
    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResourceHttpRequestHandler</span> <span class="token function">handler1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ResourceHttpRequestHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置静态资源的路径</span>
        handler<span class="token punctuation">.</span><span class="token function">setLocations</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;static/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置静态资源的解析器</span>
        handler<span class="token punctuation">.</span><span class="token function">setResourceResolvers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">CachingResourceResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcurrentMapCache</span><span class="token punctuation">(</span><span class="token string">&quot;cache1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 缓存</span>
                <span class="token keyword">new</span> <span class="token class-name">EncodedResourceResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 编码资源解析器</span>
                <span class="token keyword">new</span> <span class="token class-name">PathResourceResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 路径资源解析器</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * /img/1.jpg
     * /img/2.jpg
     * /img/3.jpg
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * /img/**
     */</span>
    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/img/**&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResourceHttpRequestHandler</span> <span class="token function">handler2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ResourceHttpRequestHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        handler<span class="token punctuation">.</span><span class="token function">setLocations</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;images/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 配置欢迎页需配合SimpleControllerHandlerAdapter使用
     *
     * <span class="token keyword">@param</span> <span class="token parameter">applicationContext</span> applicationContext
     * <span class="token keyword">@return</span> WelcomePageHandlerMapping
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">WelcomePageHandlerMapping</span> <span class="token class-name">WelcomePageHandlerMapping</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Resource</span> resource <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:static/index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WelcomePageHandlerMapping</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> applicationContext<span class="token punctuation">,</span> resource<span class="token punctuation">,</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SimpleControllerHandlerAdapter</span> <span class="token function">simpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 压缩文本
     *
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> IOException
     */</span>
    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initGZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span> file <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span>pathname <span class="token operator">-&gt;</span> pathname<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>files <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> htmlFile <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>htmlFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token class-name">GZIPOutputStream</span> zipOs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GZIPOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>htmlFile<span class="token punctuation">.</span><span class="token function">getCanonicalPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.gz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">FileCopyUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> zipOs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-测试代码-2" tabindex="-1"><a class="header-anchor" href="#_2-测试代码-2" aria-hidden="true">#</a> 2 测试代码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">WebConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> lyf
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@classname</span> TestSimpleUrlHandlerMappingAndHttpRequestHandlerAdapter
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@since</span> 2022/12/14 18:51
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSimpleUrlHandlerMappingAndHttpRequestHandlerAdapter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span> applicationContext
                <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigServletWebServerApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">/*
            学到了什么
            静态资源处理
                a. SimpleUrlHandlerMapping 映射路径
                b. ResourceHttpRequestHandler 作为静态资源 handler
                c. HttpRequestHandlerAdapter, 调用此 handler

            欢迎页处理
                a. WelcomePageHandlerMapping, 映射欢迎页(即只映射 &#39;/&#39;)
                    - 它内置了 handler ParameterizableViewController 作用是不执行逻辑, 仅根据视图名找视图
                    - 视图名固定为 forward:index.html       /**
                b. SimpleControllerHandlerAdapter, 调用 handler
                    - 转发至 /index.html
                    - 处理 /index.html 又会走上面的静态资源处理流程

        */</span>

        <span class="token comment">/*
            小结
                a. HandlerMapping 负责建立请求与控制器之间的映射关系
                    - RequestMappingHandlerMapping (与 @RequestMapping 匹配)
                    - WelcomePageHandlerMapping    (/)
                    - BeanNameUrlHandlerMapping    (与 bean 的名字匹配 以 / 开头)
                    - RouterFunctionMapping        (函数式 RequestPredicate, HandlerFunction)
                    - SimpleUrlHandlerMapping      (静态资源 通配符 /** /img/**)
                    之间也会有顺序问题, boot 中默认顺序如上
                b. HandlerAdapter 负责实现对各种各样的 handler 的适配调用
                    - RequestMappingHandlerAdapter 处理：@RequestMapping 方法
                           参数解析器、返回值处理器体现了组合模式
                    - SimpleControllerHandlerAdapter 处理：Controller 接口
                    - HandlerFunctionAdapter 处理：HandlerFunction 函数式接口
                    - HttpRequestHandlerAdapter 处理：HttpRequestHandler 接口 (静态资源处理)
                    这也是典型适配器模式体现
                c. ResourceHttpRequestHandler.setResourceResolvers 这是典型责任链模式体现
         */</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_35-1-2-关键代码" tabindex="-1"><a class="header-anchor" href="#_35-1-2-关键代码" aria-hidden="true">#</a> 35.1.2 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">SimpleUrlHandlerMapping</span> <span class="token function">simpleUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SimpleUrlHandlerMapping</span> handlerMapping <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleUrlHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">&gt;</span></span> map 
        <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    handlerMapping<span class="token punctuation">.</span><span class="token function">setUrlMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> handlerMapping<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">HttpRequestHandlerAdapter</span> <span class="token function">httpRequestHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HttpRequestHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResourceHttpRequestHandler</span> <span class="token function">handler1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResourceHttpRequestHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    handler<span class="token punctuation">.</span><span class="token function">setLocations</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;static/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> handler<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/img/**&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResourceHttpRequestHandler</span> <span class="token function">handler2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResourceHttpRequestHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    handler<span class="token punctuation">.</span><span class="token function">setLocations</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;images/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> handler<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_35-1-3-收获💡" tabindex="-1"><a class="header-anchor" href="#_35-1-3-收获💡" aria-hidden="true">#</a> 35.1.3 收获💡</h3><ol><li>SimpleUrlHandlerMapping 不会在初始化时收集映射信息，需要手动收集</li><li>SimpleUrlHandlerMapping 映射路径</li><li>ResourceHttpRequestHandler 作为静态资源 handler</li><li>HttpRequestHandlerAdapter, 调用此 handler</li></ol><h2 id="_35-2-演示2-静态资源解析优化" tabindex="-1"><a class="header-anchor" href="#_35-2-演示2-静态资源解析优化" aria-hidden="true">#</a> 35.2 演示2 - 静态资源解析优化</h2><h3 id="_35-2-1-关键代码" tabindex="-1"><a class="header-anchor" href="#_35-2-1-关键代码" aria-hidden="true">#</a> 35.2.1 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ResourceHttpRequestHandler</span> <span class="token function">handler1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResourceHttpRequestHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceHttpRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    handler<span class="token punctuation">.</span><span class="token function">setLocations</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;static/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    handler<span class="token punctuation">.</span><span class="token function">setResourceResolvers</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
        	<span class="token comment">// ⬇️缓存优化</span>
            <span class="token keyword">new</span> <span class="token class-name">CachingResourceResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcurrentMapCache</span><span class="token punctuation">(</span><span class="token string">&quot;cache1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        	<span class="token comment">// ⬇️压缩优化</span>
            <span class="token keyword">new</span> <span class="token class-name">EncodedResourceResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        	<span class="token comment">// ⬇️原始资源解析</span>
            <span class="token keyword">new</span> <span class="token class-name">PathResourceResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> handler<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_35-2-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_35-2-2-收获💡" aria-hidden="true">#</a> 35.2.2 收获💡</h3><ol><li>责任链模式体现</li><li>压缩文件需要手动生成</li></ol><h2 id="_35-3-演示3-欢迎页" tabindex="-1"><a class="header-anchor" href="#_35-3-演示3-欢迎页" aria-hidden="true">#</a> 35.3 演示3 - 欢迎页</h2><h3 id="_35-3-1-关键代码" tabindex="-1"><a class="header-anchor" href="#_35-3-1-关键代码" aria-hidden="true">#</a> 35.3.1 关键代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">WelcomePageHandlerMapping</span> <span class="token function">welcomePageHandlerMapping</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Resource</span> resource <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:static/index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WelcomePageHandlerMapping</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> context<span class="token punctuation">,</span> resource<span class="token punctuation">,</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">SimpleControllerHandlerAdapter</span> <span class="token function">simpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleControllerHandlerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_35-3-2-收获💡" tabindex="-1"><a class="header-anchor" href="#_35-3-2-收获💡" aria-hidden="true">#</a> 35.3.2 收获💡</h3><ol><li>欢迎页支持静态欢迎页与动态欢迎页</li><li>WelcomePageHandlerMapping 映射欢迎页（即只映射 &#39;/&#39;） <ul><li>它内置的 handler ParameterizableViewController 作用是不执行逻辑，仅根据视图名找视图</li><li>视图名固定为 forward:index.html</li></ul></li><li>SimpleControllerHandlerAdapter, 调用 handler <ul><li>转发至 /index.html</li><li>处理 /index.html 又会走上面的静态资源处理流程</li></ul></li></ol><h2 id="_35-4-映射器与适配器小结" tabindex="-1"><a class="header-anchor" href="#_35-4-映射器与适配器小结" aria-hidden="true">#</a> 35.4 映射器与适配器小结</h2><ol><li>HandlerMapping 负责建立请求与控制器之间的映射关系 <ul><li>RequestMappingHandlerMapping (与 @RequestMapping 匹配)</li><li>WelcomePageHandlerMapping (/)</li><li>BeanNameUrlHandlerMapping (与 bean 的名字匹配 以 / 开头)</li><li>RouterFunctionMapping (函数式 RequestPredicate, HandlerFunction)</li><li>SimpleUrlHandlerMapping (静态资源 通配符 /** /img/**)</li><li>之间也会有顺序问题, boot 中默认顺序如上</li></ul></li><li>HandlerAdapter 负责实现对各种各样的 handler 的适配调用 <ul><li>RequestMappingHandlerAdapter 处理：@RequestMapping 方法 <ul><li>参数解析器、返回值处理器体现了组合模式</li></ul></li><li>SimpleControllerHandlerAdapter 处理：Controller 接口</li><li>HandlerFunctionAdapter 处理：HandlerFunction 函数式接口</li><li>HttpRequestHandlerAdapter 处理：HttpRequestHandler 接口 (静态资源处理)</li><li>这也是典型适配器模式体现</li></ul></li></ol><h1 id="_36-mvc-处理流程" tabindex="-1"><a class="header-anchor" href="#_36-mvc-处理流程" aria-hidden="true">#</a> 36 mvc 处理流程</h1><h2 id="_36-1-mvc-流程图解描述" tabindex="-1"><a class="header-anchor" href="#_36-1-mvc-流程图解描述" aria-hidden="true">#</a> 36.1 MVC 流程图解描述</h2><figure><img src="`+H+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>流程说明（重要）：</strong></p><ol><li>客户端（浏览器）发送请求， <code>DispatcherServlet</code>拦截请求。</li><li><code>DispatcherServlet</code> 根据请求信息调用 <code>HandlerMapping</code> 。<code>HandlerMapping</code> 根据 uri 去匹配查找能处理的 <code>Handler</code>（也就是我们平常说的 <code>Controller</code> 控制器） ，并会将请求涉及到的拦截器和 <code>Handler</code> 一起封装。</li><li><code>DispatcherServlet</code> 调用 <code>HandlerAdapter</code>适配执行 <code>Handler</code> 。</li><li><code>Handler</code> 完成对用户请求的处理后，会返回一个 <code>ModelAndView</code> 对象给<code>DispatcherServlet</code>，<code>ModelAndView</code> 顾名思义，包含了数据模型以及相应的视图的信息。<code>Model</code> 是返回的数据对象，<code>View</code> 是个逻辑上的 <code>View</code>。</li><li><code>ViewResolver</code> 会根据逻辑 <code>View</code> 查找实际的 <code>View</code>。</li><li><code>DispaterServlet</code> 把返回的 <code>Model</code> 传给 <code>View</code>（视图渲染）。</li><li>把 <code>View</code> 返回给请求者（浏览器）</li></ol><h2 id="_36-2-mvc-流程详细描述" tabindex="-1"><a class="header-anchor" href="#_36-2-mvc-流程详细描述" aria-hidden="true">#</a> 36.2 MVC 流程详细描述</h2><p>当浏览器发送一个请求 <code>http://localhost:8080/hello</code> 后，请求到达服务器，其处理流程是：</p><ol><li><p>服务器提供了 DispatcherServlet，它使用的是标准 Servlet 技术</p><ul><li>路径：默认映射路径为 <code>/</code>，即会匹配到所有请求 URL，可作为请求的统一入口，也被称之为<strong>前控制器</strong><ul><li>jsp 不会匹配到 DispatcherServlet</li><li>其它有路径的 Servlet 匹配优先级也高于 DispatcherServlet</li></ul></li><li>创建：在 Boot 中，由 DispatcherServletAutoConfiguration 这个自动配置类提供 DispatcherServlet 的 bean</li><li>初始化：DispatcherServlet 初始化时会优先到容器里寻找各种组件，作为它的成员变量 <ul><li>HandlerMapping，初始化时记录映射关系</li><li>HandlerAdapter，初始化时准备参数解析器、返回值处理器、消息转换器</li><li>HandlerExceptionResolver，初始化时准备参数解析器、返回值处理器、消息转换器</li><li>ViewResolver</li></ul></li></ul></li><li><p>DispatcherServlet 会利用 RequestMappingHandlerMapping 查找控制器方法</p><ul><li><p>例如根据 /hello 路径找到 @RequestMapping(&quot;/hello&quot;) 对应的控制器方法</p></li><li><p>控制器方法会被封装为 HandlerMethod 对象，并结合匹配到的拦截器一起返回给 DispatcherServlet</p></li><li><p>HandlerMethod 和拦截器合在一起称为 HandlerExecutionChain（调用链）对象</p></li></ul></li><li><p>DispatcherServlet 接下来会：</p><ol><li>调用拦截器的 preHandle 方法</li><li>RequestMappingHandlerAdapter 调用 handle 方法，准备数据绑定工厂、模型工厂、ModelAndViewContainer、将 HandlerMethod 完善为 ServletInvocableHandlerMethod <ul><li>@ControllerAdvice 全局增强点1️⃣：补充模型数据</li><li>@ControllerAdvice 全局增强点2️⃣：补充自定义类型转换器</li><li>使用 HandlerMethodArgumentResolver 准备参数 <ul><li>@ControllerAdvice 全局增强点3️⃣：RequestBody 增强</li></ul></li><li>调用 ServletInvocableHandlerMethod</li><li>使用 HandlerMethodReturnValueHandler 处理返回值 <ul><li>@ControllerAdvice 全局增强点4️⃣：ResponseBody 增强</li></ul></li><li>根据 ModelAndViewContainer 获取 ModelAndView <ul><li>如果返回的 ModelAndView 为 null，不走第 4 步视图解析及渲染流程 <ul><li>例如，有的返回值处理器调用了 HttpMessageConverter 来将结果转换为 JSON，这时 ModelAndView 就为 null</li></ul></li><li>如果返回的 ModelAndView 不为 null，会在第 4 步走视图解析及渲染流程</li></ul></li></ul></li><li>调用拦截器的 postHandle 方法</li><li>处理异常或视图渲染 <ul><li>如果 1~3 出现异常，走 ExceptionHandlerExceptionResolver 处理异常流程 <ul><li>@ControllerAdvice 全局增强点5️⃣：@ExceptionHandler 异常处理</li></ul></li><li>正常，走视图解析及渲染流程</li></ul></li><li>调用拦截器的 afterCompletion 方法</li></ol></li></ol>',90);function _(P,E){const a=p("ExternalLinkIcon");return e(),o("div",null,[B,n("p",null,[n("a",D,[c("http://127.0.0.1:8080/hello"),l(a)])]),T])}const U=t(j,[["render",_],["__file","03_Spring高级49讲-WEB.html.vue"]]);export{U as default};
