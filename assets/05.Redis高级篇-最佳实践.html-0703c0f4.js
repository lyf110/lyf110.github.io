const e=JSON.parse('{"key":"v-23efc55c","path":"/database/redis/heima2022/05.Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html","title":"五、Redis-高级篇-最佳实践","lang":"zh-CN","frontmatter":{"title":"五、Redis-高级篇-最佳实践","date":"2023-04-02T10:38:46.000Z","order":5,"category":["数据库","Redis","分布式缓存","中间件"],"tag":["数据库","Redis","分布式缓存","中间件"],"author":{"name":"liu yang fang","link":"https://github.com/lyf110"},"description":"Redis高级篇之最佳实践 今日内容 Redis键值设计 批处理优化 服务端优化 集群最佳实践 1、Redis键值设计 1.1、优雅的key结构 Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定： 遵循基本格式：[业务名称]:[数据名]:[id] 长度不超过44字节 不包含特殊字符","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/database/redis/heima2022/05.Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"五、Redis-高级篇-最佳实践"}],["meta",{"property":"og:description","content":"Redis高级篇之最佳实践 今日内容 Redis键值设计 批处理优化 服务端优化 集群最佳实践 1、Redis键值设计 1.1、优雅的key结构 Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定： 遵循基本格式：[业务名称]:[数据名]:[id] 长度不超过44字节 不包含特殊字符"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"五、Redis-高级篇-最佳实践"}],["meta",{"property":"article:author","content":"liu yang fang"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"分布式缓存"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:published_time","content":"2023-04-02T10:38:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"五、Redis-高级篇-最佳实践\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-02T10:38:46.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liu yang fang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"Redis高级篇之最佳实践","slug":"redis高级篇之最佳实践","link":"#redis高级篇之最佳实践","children":[]},{"level":2,"title":"1、Redis键值设计","slug":"_1、redis键值设计","link":"#_1、redis键值设计","children":[{"level":3,"title":"1.1、优雅的key结构","slug":"_1-1、优雅的key结构","link":"#_1-1、优雅的key结构","children":[]},{"level":3,"title":"1.2、拒绝BigKey","slug":"_1-2、拒绝bigkey","link":"#_1-2、拒绝bigkey","children":[]},{"level":3,"title":"1.3、恰当的数据类型","slug":"_1-3、恰当的数据类型","link":"#_1-3、恰当的数据类型","children":[]},{"level":3,"title":"1.4、总结","slug":"_1-4、总结","link":"#_1-4、总结","children":[]}]},{"level":2,"title":"2、批处理优化","slug":"_2、批处理优化","link":"#_2、批处理优化","children":[{"level":3,"title":"2.1、Pipeline","slug":"_2-1、pipeline","link":"#_2-1、pipeline","children":[]},{"level":3,"title":"2.2、集群下的批处理","slug":"_2-2、集群下的批处理","link":"#_2-2、集群下的批处理","children":[]}]},{"level":2,"title":"3、服务器端优化-持久化配置","slug":"_3、服务器端优化-持久化配置","link":"#_3、服务器端优化-持久化配置","children":[]},{"level":2,"title":"4、服务器端优化-慢查询优化","slug":"_4、服务器端优化-慢查询优化","link":"#_4、服务器端优化-慢查询优化","children":[{"level":3,"title":"4.1 什么是慢查询","slug":"_4-1-什么是慢查询","link":"#_4-1-什么是慢查询","children":[]},{"level":3,"title":"4.2 如何查看慢查询","slug":"_4-2-如何查看慢查询","link":"#_4-2-如何查看慢查询","children":[]}]},{"level":2,"title":"5、服务器端优化-命令及安全配置","slug":"_5、服务器端优化-命令及安全配置","link":"#_5、服务器端优化-命令及安全配置","children":[]},{"level":2,"title":"6、服务器端优化-Redis内存划分和内存配置","slug":"_6、服务器端优化-redis内存划分和内存配置","link":"#_6、服务器端优化-redis内存划分和内存配置","children":[]},{"level":2,"title":"7、服务器端集群优化-集群还是主从","slug":"_7、服务器端集群优化-集群还是主从","link":"#_7、服务器端集群优化-集群还是主从","children":[]},{"level":2,"title":"8、结束语","slug":"_8、结束语","link":"#_8、结束语","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":19.99,"words":5996},"filePathRelative":"database/redis/heima2022/05.Redis高级篇-最佳实践.md","localizedDate":"2023年4月2日","excerpt":"<h2> Redis高级篇之最佳实践</h2>\\n<p><strong>今日内容</strong></p>\\n<blockquote>\\n<ul>\\n<li>Redis键值设计</li>\\n<li>批处理优化</li>\\n<li>服务端优化</li>\\n<li>集群最佳实践</li>\\n</ul>\\n</blockquote>\\n<h2> 1、Redis键值设计</h2>\\n<h3> 1.1、优雅的key结构</h3>\\n<p>Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定：</p>\\n<ul>\\n<li>遵循基本格式：[业务名称]:[数据名]:[id]</li>\\n<li>长度不超过44字节</li>\\n<li>不包含特殊字符</li>\\n</ul>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
