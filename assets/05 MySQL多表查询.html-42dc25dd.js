import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as p,e}from"./app-5f6064b2.js";const i="/assets/202210091626144-869bf73c.jpeg",u="/assets/202210091626993-542ba0f7.jpeg",k="/assets/202210091633099-ceab756f.jpeg",r="/assets/202210091946430-09bccb46.png",d="/assets/202210091947837-e7524c0d.png",m="/assets/202210091948484-190769cc.png",v="/assets/202210091948660-b45f05ab.png",b="/assets/202210091949350-4ac5d9f9.png",g="/assets/202210091950000-1ab2c083.jpeg",y="/assets/202210091951423-371f097c.jpeg",w="/assets/202210092000115-941ad2ad.jpeg",h="/assets/202210092027041-a905c377.png",f="/assets/202210092030081-dd88b6dd.png",_="/assets/202210092031986-2407b78d.png",q={},x=e('<h2 id="_5-多表查询" tabindex="-1"><a class="header-anchor" href="#_5-多表查询" aria-hidden="true">#</a> 5. 多表查询</h2><p>我们之前在讲解SQL语句的时候，讲解了DQL语句，也就是数据查询语句，但是之前讲解的查询都是单 表查询，而本章节我们要学习的则是多表查询操作，主要从以下几个方面进行讲解。</p><h3 id="_5-1-多表关系" tabindex="-1"><a class="header-anchor" href="#_5-1-多表关系" aria-hidden="true">#</a> 5.1 多表关系</h3><p>项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结 构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：</p><ul><li><p>一对多(多对一)</p></li><li><p>多对多</p></li><li><p>一对一</p></li></ul><h4 id="_5-1-1-一对多" tabindex="-1"><a class="header-anchor" href="#_5-1-1-一对多" aria-hidden="true">#</a> 5.1.1 一对多</h4><ul><li><p>案例: 部门 与 员工的关系</p></li><li><p>关系: 一个部门对应多个员工，一个员工对应一个部门</p></li><li><p>实现: 在多的一方建立外键，指向一的一方的主键</p></li></ul><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-1-2-多对多" tabindex="-1"><a class="header-anchor" href="#_5-1-2-多对多" aria-hidden="true">#</a> 5.1.2 多对多</h4><ul><li><p>案例: 学生 与 课程的关系</p></li><li><p>关系: 一个学生可以选修多门课程，一门课程也可以供多个学生选择</p></li><li><p>实现: 建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p></li></ul><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>对应的SQL脚本:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token comment">-- 创建学生表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span> 
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">auto_increment</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主键ID&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>no<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学号&#39;</span> 
<span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学生表&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">values</span> 
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;黛绮丝&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2000100101&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;谢逊&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2000100102&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;殷天正&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2000100103&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;韦一笑&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2000100104&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建课程表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>course<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">comment</span> <span class="token string">&#39;主键ID&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;课程名称&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;课程表&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>course<span class="token punctuation">\`</span></span> <span class="token keyword">values</span> 
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;Java&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;PHP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
<span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span> <span class="token string">&#39;MySQL&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;Hadoop&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建中间表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>student_course<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;主键&#39;</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>studentid<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;学生ID&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>courseid<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;课程ID&#39;</span><span class="token punctuation">,</span>
<span class="token keyword">constraint</span> <span class="token identifier"><span class="token punctuation">\`</span>fk_courseid<span class="token punctuation">\`</span></span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>courseid<span class="token punctuation">)</span> <span class="token keyword">references</span> course <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token keyword">constraint</span> <span class="token identifier"><span class="token punctuation">\`</span>fk_studentid<span class="token punctuation">\`</span></span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>studentid<span class="token punctuation">)</span> <span class="token keyword">references</span> student <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">&#39;学生课程中间表&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> student_course <span class="token keyword">values</span> 
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-1-3-一对一" tabindex="-1"><a class="header-anchor" href="#_5-1-3-一对一" aria-hidden="true">#</a> 5.1.3 一对一</h4><ul><li><p>案例: 用户 与 用户详情的关系</p></li><li><p>关系: 一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率</p></li><li><p>实现: 在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的(UNIQUE)</p></li></ul><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>对应的SQL脚本:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建用户基本信息表</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user<span class="token punctuation">(</span>\n<span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">comment</span> <span class="token string">&#39;主键ID&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">comment</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>gender<span class="token punctuation">`</span></span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;1: 男 , 2: 女&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>phone<span class="token punctuation">`</span></span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;手机号&#39;</span>\n<span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户基本信息表&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建用户教育信息表</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user_edu<span class="token punctuation">(</span>\n<span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">comment</span> <span class="token string">&#39;主键ID&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>degree<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;学历&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>major<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;专业&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>primaryschool<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;小学&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>middleschool<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;中学&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>university<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;大学&#39;</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>userid<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">unique</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户ID&#39;</span><span class="token punctuation">,</span>\n<span class="token keyword">constraint</span> <span class="token identifier"><span class="token punctuation">`</span>fk_userid<span class="token punctuation">`</span></span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>userid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> <span class="token identifier"><span class="token punctuation">`</span>tb_user<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户教育信息表&#39;</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_user<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">values</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;黄渤&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800001111&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;冰冰&#39;</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800002222&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;码云&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800008888&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;李彦宏&#39;</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;18800009999&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_user_edu<span class="token punctuation">(</span>id<span class="token punctuation">,</span> degree<span class="token punctuation">,</span> major<span class="token punctuation">,</span> primaryschool<span class="token punctuation">,</span> middleschool<span class="token punctuation">,</span>\nuniversity<span class="token punctuation">,</span> userid<span class="token punctuation">)</span> <span class="token keyword">values</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;本科&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;舞蹈&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;静安区第一小学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;静安区第一中学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;北京舞蹈学院&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;硕士&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;表演&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;朝阳区第一小学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;朝阳区第一中学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;北京电影学院&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;本科&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;英语&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;杭州市第一小学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;杭州市第一中学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;杭州师范大学&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;本科&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;应用数学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;阳泉第一小学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;阳泉区第一中学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;清华大学&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-多表查询概述" tabindex="-1"><a class="header-anchor" href="#_5-2-多表查询概述" aria-hidden="true">#</a> 5.2 多表查询概述</h3><h4 id="_5-2-1-数据准备" tabindex="-1"><a class="header-anchor" href="#_5-2-1-数据准备" aria-hidden="true">#</a> 5.2.1 数据准备</h4><p>1). 删除之前 emp, dept表的测试数据</p><p>2). 执行如下脚本，创建emp表与dept表并插入测试数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除dept表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>dept<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n	\n<span class="token comment">-- 创建dept表，并插入数据</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>dept<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> \n<span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">auto_increment</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;ID&#39;</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n<span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;部门名称&#39;</span> \n<span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;部门表&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 插入数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>dept<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span>\n	<span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;研发部&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;市场部&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;财务部&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;销售部&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;总经办&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;人事部&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token comment">-- 删除emp表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span>	<span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>emp<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建emp表，并插入数据</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>emp<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n	<span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">auto_increment</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;ID&#39;</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>job<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">20</span> <span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;职位&#39;</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>salary<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;薪资&#39;</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>entrydate<span class="token punctuation">`</span></span> <span class="token keyword">date</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;入职时间&#39;</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>managerid<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;直属领导ID&#39;</span><span class="token punctuation">,</span>\n	<span class="token identifier"><span class="token punctuation">`</span>dept_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;部门ID&#39;</span> \n<span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;员工表&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加外键</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>emp<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>fk_emp_dept_id<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>dept_id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>dept<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>emp<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>job<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>salary<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>entrydate<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>managerid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dept_id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span>\n	<span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;金庸&#39;</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token string">&#39;总裁&#39;</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">,</span> <span class="token string">&#39;2000-01-01&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;张无忌&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;项目经理&#39;</span><span class="token punctuation">,</span> <span class="token number">12500</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-05&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;杨逍&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">&#39;开发&#39;</span><span class="token punctuation">,</span> <span class="token number">8400</span><span class="token punctuation">,</span> <span class="token string">&#39;2000-11-03&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;韦一笑&#39;</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token string">&#39;开发&#39;</span><span class="token punctuation">,</span> <span class="token number">11000</span><span class="token punctuation">,</span> <span class="token string">&#39;2002-02-05&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;常遇春&#39;</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token string">&#39;开发&#39;</span><span class="token punctuation">,</span> <span class="token number">10500</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-09-07&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;小昭&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&#39;程序员鼓励师&#39;</span><span class="token punctuation">,</span> <span class="token number">6600</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-10-12&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;灭绝&#39;</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token string">&#39;财务总监&#39;</span><span class="token punctuation">,</span> <span class="token number">8500</span><span class="token punctuation">,</span> <span class="token string">&#39;2002-09-12&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;周芷若&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&#39;会计&#39;</span><span class="token punctuation">,</span> <span class="token number">48000</span><span class="token punctuation">,</span> <span class="token string">&#39;2006-06-02&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;丁敏君&#39;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">&#39;出纳&#39;</span><span class="token punctuation">,</span> <span class="token number">5250</span><span class="token punctuation">,</span> <span class="token string">&#39;2009-05-13&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;赵敏&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;市场部总监&#39;</span><span class="token punctuation">,</span> <span class="token number">12500</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-10-12&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;鹿杖客&#39;</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token string">&#39;职员&#39;</span><span class="token punctuation">,</span> <span class="token number">3750</span><span class="token punctuation">,</span> <span class="token string">&#39;2006-10-03&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;鹤笔翁&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&#39;职员&#39;</span><span class="token punctuation">,</span> <span class="token number">3750</span><span class="token punctuation">,</span> <span class="token string">&#39;2007-05-09&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">&#39;方东白&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&#39;职员&#39;</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">,</span> <span class="token string">&#39;2009-02-12&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&#39;张三丰&#39;</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token string">&#39;销售总监&#39;</span><span class="token punctuation">,</span> <span class="token number">14000</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-10-12&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">&#39;俞莲舟&#39;</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token string">&#39;销售&#39;</span><span class="token punctuation">,</span> <span class="token number">4600</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-10-12&#39;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">&#39;宋远桥&#39;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&#39;销售&#39;</span><span class="token punctuation">,</span> <span class="token number">4600</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-10-12&#39;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token punctuation">(</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">&#39;陈友谅&#39;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token string">&#39;2011-10-12&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dept表共6条记录，emp表共17条记录。</p><h4 id="_5-2-2-概述" tabindex="-1"><a class="header-anchor" href="#_5-2-2-概述" aria-hidden="true">#</a> 5.2.2 概述</h4><p>多表查询就是指从多张表中查询数据。</p><p>原来查询单表数据，执行的SQL形式为：<code>select * from emp</code>;</p><p>那么我们要执行多表查询，就只需要使用逗号分隔多张表即可，如： <code>select * from emp , dept;</code> 具体的执行结果如下:</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时,我们看到查询结果中包含了大量的结果集，总共102条记录，而这其实就是员工表emp所有的记录 (17) 与 部门表dept所有记录(6) 的所有组合情况，这种现象称之为笛卡尔积。接下来，就来简单 介绍下笛卡尔积。</p><p>笛卡尔积: 笛卡尔乘积是指在数学中，两个集合A集合 和 B集合的所有组合情况。</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>而在多表查询中，我们是需要消除无效的笛卡尔积的，只保留两张表关联部分的数据。</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在SQL语句中，如何来去除无效的笛卡尔积呢？ 我们可以给多表查询加上连接查询的条件即可。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token punctuation">,</span> dept <span class="token keyword">where</span> emp<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>而由于id为17的员工，没有dept_id字段值，所以在多表查询时，根据连接查询的条件并没有查询到。</p><h4 id="_5-2-3-分类" tabindex="-1"><a class="header-anchor" href="#_5-2-3-分类" aria-hidden="true">#</a> 5.2.3 分类</h4><h5 id="_5-2-3-1-连接查询" tabindex="-1"><a class="header-anchor" href="#_5-2-3-1-连接查询" aria-hidden="true">#</a> 5.2.3.1 连接查询</h5><ul><li><p>内连接：相当于查询A、B交集部分数据</p></li><li><p>外连接：</p></li><li><p>左外连接：查询左表所有数据，以及两张表交集部分数据</p></li><li><p>右外连接：查询右表所有数据，以及两张表交集部分数据</p></li><li><p>自连接：当前表与自身的连接查询，自连接必须使用表别名</p></li></ul><h5 id="_5-2-3-2-子查询" tabindex="-1"><a class="header-anchor" href="#_5-2-3-2-子查询" aria-hidden="true">#</a> 5.2.3.2 子查询</h5><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-3-内连接" tabindex="-1"><a class="header-anchor" href="#_5-3-内连接" aria-hidden="true">#</a> 5.3 内连接</h3><p>​ <img src="'+y+`" alt="" loading="lazy"></p><p>内连接查询的是两张表交集部分的数据。(也就是<strong>绿色部分的数据</strong>)</p><p>内连接的语法分为两种: 隐式内连接、显式内连接。先来学习一下具体的语法结构。</p><h4 id="_5-3-1-隐式内连接" tabindex="-1"><a class="header-anchor" href="#_5-3-1-隐式内连接" aria-hidden="true">#</a> 5.3.1 隐式内连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">,</span> 表<span class="token number">2</span> <span class="token keyword">WHERE</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-3-2-显式内连接" tabindex="-1"><a class="header-anchor" href="#_5-3-2-显式内连接" aria-hidden="true">#</a> 5.3.2 显式内连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span> <span class="token keyword">INNER</span> <span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-3-3-案例" tabindex="-1"><a class="header-anchor" href="#_5-3-3-案例" aria-hidden="true">#</a> 5.3.3 案例:</h4><p>A. 查询每一个员工的姓名 , 及关联的部门的名称 (隐式内连接实现)</p>`,54),E=n("p",null,"表结构: emp , dept",-1),N={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>NAME <span class="token keyword">AS</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
	d<span class="token punctuation">.</span>NAME <span class="token keyword">AS</span> <span class="token string">&#39;部门&#39;</span> 
<span class="token keyword">FROM</span>
	<span class="token identifier"><span class="token punctuation">\`</span>emp<span class="token punctuation">\`</span></span> e<span class="token punctuation">,</span>
	<span class="token identifier"><span class="token punctuation">\`</span>dept<span class="token punctuation">\`</span></span> d 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>B. 查询每一个员工的姓名 , 及关联的部门的名称 (显式内连接实现) --- INNER JOIN ...</p><p>ON ...</p>`,3),A=n("p",null,"表结构: emp , dept",-1),I={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},O=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>NAME <span class="token keyword">AS</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
	d<span class="token punctuation">.</span>NAME <span class="token keyword">AS</span> <span class="token string">&#39;部门&#39;</span> 
<span class="token keyword">FROM</span>
	<span class="token identifier"><span class="token punctuation">\`</span>emp<span class="token punctuation">\`</span></span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>表的别名:</strong></p><p>①. tablea as 别名1 , tableb as 别名2 ;<br> ②. tablea 别名1 , tableb 别名2 ;</p><p><strong>注意事项:</strong></p><p>一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字段。</p></blockquote><h3 id="_5-4-外连接" tabindex="-1"><a class="header-anchor" href="#_5-4-外连接" aria-hidden="true">#</a> 5.4 外连接</h3><figure><img src="`+w+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>外连接分为两种，分别是：左外连接 和右外连接。具体的语法结构为：</p><h4 id="_5-4-1-左外连接" tabindex="-1"><a class="header-anchor" href="#_5-4-1-左外连接" aria-hidden="true">#</a> 5.4.1 左外连接</h4><p>左外连接相当于查询表1(左表)的所有数据，当然也包含表1和表2交集部分的数据。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token punctuation">[</span> <span class="token keyword">OUTER</span> <span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-4-2-右外连接" tabindex="-1"><a class="header-anchor" href="#_5-4-2-右外连接" aria-hidden="true">#</a> 5.4.2 右外连接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span> <span class="token keyword">OUTER</span> <span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>右外连接相当于查询表2(右表)的所有数据，当然也包含表1和表2交集部分的数据。</p><h4 id="_5-4-3-案例" tabindex="-1"><a class="header-anchor" href="#_5-4-3-案例" aria-hidden="true">#</a> 5.4.3 案例:</h4><p>A. 查询emp表的所有数据, 和对应的部门信息 由于需求中提到，要查询emp的所有数据，所以是不能内连接查询的，需要考虑使用外连接查询。</p>`,13),M=n("li",null,[n("p",null,"表结构: emp, dept")],-1),L={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},R=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token keyword">left</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>B. 查询dept表的所有数据, 和对应的员工信息(右外连接)</p><p>由于需求中提到，要查询dept表的所有数据，所以是不能内连接查询的，需要考虑使用外连接查询。</p>`,3),S=n("li",null,[n("p",null,"表结构: emp, dept")],-1),C={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},D=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> d<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> emp e <span class="token keyword">right</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token keyword">select</span> d<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> dept d <span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> emp e <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意事项：<br> 左外连接和右外连接是可以相互替换的，只需要调整在连接查询时SQL中，表结构的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。</p></blockquote><h3 id="_5-5-自连接" tabindex="-1"><a class="header-anchor" href="#_5-5-自连接" aria-hidden="true">#</a> 5.5 自连接</h3><h4 id="_5-5-1-自连接查询" tabindex="-1"><a class="header-anchor" href="#_5-5-1-自连接查询" aria-hidden="true">#</a> 5.5.1 自连接查询</h4><p>自连接查询，顾名思义，就是自己连接自己，也就是把一张表连接查询多次。我们先来学习一下自连接的查询语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表A 别名A <span class="token keyword">JOIN</span> 表A 别名B <span class="token keyword">ON</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>而对于自连接查询，可以是内连接查询，也可以是外连接查询。</p><h4 id="_5-5-2-案例" tabindex="-1"><a class="header-anchor" href="#_5-5-2-案例" aria-hidden="true">#</a> 5.5.2 案例：</h4><p>A. 查询员工及其 所属领导的名字</p><ul><li>表结构: emp</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> <span class="token string">&#39;员工&#39;</span><span class="token punctuation">,</span>
	e2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token string">&#39;领导&#39;</span> 
<span class="token keyword">FROM</span>
	emp e1<span class="token punctuation">,</span>
	emp e2 
<span class="token keyword">WHERE</span>
	e1<span class="token punctuation">.</span>managerid <span class="token operator">=</span> e2<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>B. 查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导, 也需要查询出来</p><ul><li>表结构: emp a , emp b</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> <span class="token string">&#39;员工&#39;</span><span class="token punctuation">,</span>
	e2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> <span class="token string">&#39;领导&#39;</span>
<span class="token keyword">FROM</span>
	emp e1
	<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> emp e2 <span class="token keyword">ON</span> e1<span class="token punctuation">.</span>managerid <span class="token operator">=</span> e2<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意事项:<br> 在自连接查询中，必须要为表起别名，要不然我们不清楚所指定的条件、返回的字段，到底是哪一张表的字段。</p></blockquote><h4 id="_5-5-3-联合查询" tabindex="-1"><a class="header-anchor" href="#_5-5-3-联合查询" aria-hidden="true">#</a> 5.5.3 联合查询</h4><p>对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表A <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">UNION</span> <span class="token punctuation">[</span> <span class="token keyword">ALL</span> <span class="token punctuation">]</span>
<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表B <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致。</p></li><li><p>union all 会将全部的数据直接合并在一起，union会对合并之后的数据去重。</p></li></ul><h4 id="_5-5-4-案例" tabindex="-1"><a class="header-anchor" href="#_5-5-4-案例" aria-hidden="true">#</a> 5.5.4 案例:</h4><p>A. 将薪资低于 5000 的员工 , 和年龄大于 50 岁的员工全部查询出来.</p><p>当前对于这个需求，我们可以直接使用多条件查询，使用逻辑运算符 or 连接即可。 那这里呢，我们 也可以通过union/union all来联合查询.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&lt;</span> <span class="token number">5000</span>
<span class="token keyword">union</span> <span class="token keyword">all</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+h+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>union all查询出来的结果，仅仅进行简单的合并，并未去重。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&lt;</span> <span class="token number">5000</span>
<span class="token keyword">union</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>union 联合查询，会对查询出来的结果进行去重处理。</p><blockquote><p>注意：如果多条查询语句查询出来的结果，字段数量不一致，在进行union/union all联合查询时，将会报错。</p><p>如：</p><figure><img src="'+_+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></blockquote><h3 id="_5-6-子查询" tabindex="-1"><a class="header-anchor" href="#_5-6-子查询" aria-hidden="true">#</a> 5.6 子查询</h3><h4 id="_5-6-1-概述" tabindex="-1"><a class="header-anchor" href="#_5-6-1-概述" aria-hidden="true">#</a> 5.6.1 概述</h4><h5 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1). 概念</h5><p>SQL语句中嵌套SELECT语句，称为嵌套查询，又称子查询。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> t1 <span class="token keyword">WHERE</span> column1 <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> column1 <span class="token keyword">FROM</span> t2 <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>子查询外部的语句可以是<code>INSERT / UPDATE / DELETE / SELECT</code> 的任何一个。</p><h5 id="_2-分类" tabindex="-1"><a class="header-anchor" href="#_2-分类" aria-hidden="true">#</a> 2). 分类</h5><p>根据子查询结果不同，分为：</p><p>A. 标量子查询（子查询结果为单个值）</p><p>B. 列子查询(子查询结果为一列)</p><p>C. 行子查询(子查询结果为一行)</p><p>D. 表子查询(子查询结果为多行多列)</p><p>根据子查询位置，分为：</p><ol><li><p>WHERE之后</p></li><li><p>FROM之后</p></li><li><p>SELECT之后</p></li></ol><h4 id="_5-6-2-标量子查询" tabindex="-1"><a class="header-anchor" href="#_5-6-2-标量子查询" aria-hidden="true">#</a> 5.6.2 标量子查询</h4><p>子查询返回的结果是单个值（数字、字符串、日期等），最简单的形式，这种子查询称为标量子查询。 常用的操作符：<code>= &lt;&gt; &gt; &gt;= &lt; &lt;=</code></p><p>案例:</p><p>A. 查询 &quot;销售部&quot; 的所有员工信息 完成这个需求时，我们可以将需求分解为两步：</p><p>①. 查询 &quot;销售部&quot; 部门ID</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;销售部&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 根据 &quot;销售部&quot; 部门ID, 查询员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;销售部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>B. 查询在 &quot;方东白&quot; 入职之后的员工信息</p><p>完成这个需求时，我们可以将需求分解为两步：</p><p>①. 查询 方东白 的入职日期</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> entrydate <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;方东白&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 查询指定入职日期之后入职的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> entrydate <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> entrydate <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;方东白&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-6-3-列子查询" tabindex="-1"><a class="header-anchor" href="#_5-6-3-列子查询" aria-hidden="true">#</a> 5.6.3 列子查询</h4><p>子查询返回的结果是一列（可以是多行），这种子查询称为列子查询。 常用的操作符：IN 、NOT IN 、 ANY 、SOME 、 ALL</p><table><thead><tr><th><strong>操作符</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>IN</td><td>在指定的集合范围之内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定的集合范围之内</td></tr><tr><td>ANY</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>SOME</td><td>与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td>ALL</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table><p>案例:</p><p>A. 查询 &quot;销售部&quot; 和 &quot;市场部&quot; 的所有员工信息 分解为以下两步:</p><p>①. 查询 &quot;销售部&quot; 和 &quot;市场部&quot; 的部门ID</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;销售部&#39;</span> <span class="token operator">or</span> name <span class="token operator">=</span> <span class="token string">&#39;市场部&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 根据部门ID, 查询员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;销售部&#39;</span> <span class="token operator">or</span> name <span class="token operator">=</span> <span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>B. 查询比 财务部 所有人工资都高的员工信息</p><p>分解为以下两步:</p><p>①. 查询所有 财务部 人员工资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;财务部&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>②. 比财务部 所有人工资都高的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token keyword">all</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>C. 查询比研发部其中任意一人工资高的员工信息</p><p>分解为以下两步:</p><p>①. 查询研发部所有人工资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 比研发部其中任意一人工资高的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token keyword">any</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-6-4-行子查询" tabindex="-1"><a class="header-anchor" href="#_5-6-4-行子查询" aria-hidden="true">#</a> 5.6.4 行子查询</h4><p>子查询返回的结果是一行（可以是多列），这种子查询称为行子查询。 常用的操作符：<code>= 、&lt;&gt; 、IN 、NOT IN</code></p><p>案例:</p><p>A. 查询与 &quot;张无忌&quot; 的薪资及直属领导相同的员工信息 ;</p><p>这个需求同样可以拆解为两步进行:</p><p>①. 查询 &quot;张无忌&quot; 的薪资及直属领导</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> salary<span class="token punctuation">,</span> managerid <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张无忌&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 查询与 &quot;张无忌&quot; 的薪资及直属领导相同的员工信息 ;</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> <span class="token punctuation">(</span>salary<span class="token punctuation">,</span>managerid<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> salary<span class="token punctuation">,</span> managerid <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张无忌&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-6-5-表子查询" tabindex="-1"><a class="header-anchor" href="#_5-6-5-表子查询" aria-hidden="true">#</a> 5.6.5 表子查询</h4><p>子查询返回的结果是多行多列，这种子查询称为表子查询。 常用的操作符：IN</p><p>案例:</p><p>A. 查询与 &quot;鹿杖客&quot; , &quot;宋远桥&quot; 的职位和薪资相同的员工信息 分解为两步执行:</p><p>①. 查询 &quot;鹿杖客&quot; , &quot;宋远桥&quot; 的职位和薪资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> job<span class="token punctuation">,</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;鹿杖客&#39;</span> <span class="token operator">or</span> name <span class="token operator">=</span> <span class="token string">&#39;宋远桥&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 查询与 &quot;鹿杖客&quot; , &quot;宋远桥&quot; 的职位和薪资相同的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> <span class="token punctuation">(</span>job<span class="token punctuation">,</span>salary<span class="token punctuation">)</span> <span class="token operator">in</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> job<span class="token punctuation">,</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;鹿杖客&#39;</span> <span class="token operator">or</span> name <span class="token operator">=</span> <span class="token string">&#39;宋远桥&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>B. 查询入职日期是 &quot;2006-01-01&quot; 之后的员工信息 , 及其部门信息</p><p>分解为两步执行:</p><p>①. 入职日期是 &quot;2006-01-01&quot; 之后的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> entrydate <span class="token operator">&gt;</span> <span class="token string">&#39;2006-01-01&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 查询这部分员工, 对应的部门信息;</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> entrydate <span class="token operator">&gt;</span> <span class="token string">&#39;2006-01-01&#39;</span><span class="token punctuation">)</span> e <span class="token keyword">left</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-7-多表查询案例" tabindex="-1"><a class="header-anchor" href="#_5-7-多表查询案例" aria-hidden="true">#</a> 5.7 多表查询案例</h3><p>数据环境准备:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> salgrade <span class="token punctuation">(</span> grade <span class="token keyword">INT</span><span class="token punctuation">,</span> losal <span class="token keyword">INT</span><span class="token punctuation">,</span> hisal <span class="token keyword">INT</span> <span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;薪资等级表&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3001</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5001</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8001</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">15001</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">20001</span><span class="token punctuation">,</span><span class="token number">25000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> salgrade <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">25001</span><span class="token punctuation">,</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个案例中，我们主要运用上面所讲解的多表查询的语法，完成以下的12个需求即可，而这里主要涉及到的表就三张：emp员工表、dept部门表、salgrade薪资等级表 。</p><h4 id="_1-查询员工的姓名、年龄、职位、部门信息-隐式内连接" tabindex="-1"><a class="header-anchor" href="#_1-查询员工的姓名、年龄、职位、部门信息-隐式内连接" aria-hidden="true">#</a> 1). 查询员工的姓名、年龄、职位、部门信息 （隐式内连接）</h4>`,106),j=n("li",null,[n("p",null,"表: emp , dept")],-1),B={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},F=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span>name <span class="token punctuation">,</span> e<span class="token punctuation">.</span>age <span class="token punctuation">,</span> e<span class="token punctuation">.</span>job <span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> dept d <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-查询年龄小于30岁的员工的姓名、年龄、职位、部门信息-显式内连接" tabindex="-1"><a class="header-anchor" href="#_2-查询年龄小于30岁的员工的姓名、年龄、职位、部门信息-显式内连接" aria-hidden="true">#</a> 2). 查询年龄小于30岁的员工的姓名、年龄、职位、部门信息（显式内连接）</h4>`,2),z=n("li",null,[n("p",null,"表: emp , dept")],-1),H={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},Q=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span>name <span class="token punctuation">,</span> e<span class="token punctuation">.</span>age <span class="token punctuation">,</span> e<span class="token punctuation">.</span>job <span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token keyword">inner</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token keyword">where</span> e<span class="token punctuation">.</span>age <span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-查询拥有员工的部门id、部门名称" tabindex="-1"><a class="header-anchor" href="#_3-查询拥有员工的部门id、部门名称" aria-hidden="true">#</a> 3). 查询拥有员工的部门ID、部门名称</h4>`,2),U=n("li",null,[n("p",null,"表: emp , dept")],-1),V={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},Y=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">distinct</span> d<span class="token punctuation">.</span>id <span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> dept d <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-查询所有年龄大于40岁的员工-及其归属的部门名称-如果员工没有分配部门-也需要展示出来-外连接" tabindex="-1"><a class="header-anchor" href="#_4-查询所有年龄大于40岁的员工-及其归属的部门名称-如果员工没有分配部门-也需要展示出来-外连接" aria-hidden="true">#</a> 4). 查询所有年龄大于40岁的员工, 及其归属的部门名称; 如果员工没有分配部门, 也需要展示出来(外连接)</h4>`,2),J=n("li",null,[n("p",null,"表: emp , dept")],-1),P={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},W=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token keyword">left</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token keyword">where</span> e<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">40</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-查询所有员工的工资等级" tabindex="-1"><a class="header-anchor" href="#_5-查询所有员工的工资等级" aria-hidden="true">#</a> 5). 查询所有员工的工资等级</h4><ul><li><p>表: emp , salgrade</p></li><li><p>连接条件 : emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 方式一</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token punctuation">,</span> s<span class="token punctuation">.</span>grade <span class="token punctuation">,</span> s<span class="token punctuation">.</span>losal<span class="token punctuation">,</span> s<span class="token punctuation">.</span>hisal <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> salgrade s <span class="token keyword">where</span> e<span class="token punctuation">.</span>salary <span class="token operator">&gt;=</span> s<span class="token punctuation">.</span>losal <span class="token operator">and</span> e<span class="token punctuation">.</span>salary <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span>hisal<span class="token punctuation">;</span>
<span class="token comment">-- 方式二</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token punctuation">,</span> s<span class="token punctuation">.</span>grade <span class="token punctuation">,</span> s<span class="token punctuation">.</span>losal<span class="token punctuation">,</span> s<span class="token punctuation">.</span>hisal <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> salgrade s <span class="token keyword">where</span> e<span class="token punctuation">.</span>salary <span class="token operator">between</span> s<span class="token punctuation">.</span>losal <span class="token operator">and</span> s<span class="token punctuation">.</span>hisal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-查询-研发部-所有员工的信息及-工资等级" tabindex="-1"><a class="header-anchor" href="#_6-查询-研发部-所有员工的信息及-工资等级" aria-hidden="true">#</a> 6). 查询 &quot;研发部&quot; 所有员工的信息及 工资等级</h4>`,5),K=n("li",null,[n("p",null,"表: emp , salgrade , dept")],-1),G={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},X={href:"http://dept.name",target:"_blank",rel:"noopener noreferrer"},Z=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token punctuation">,</span> s<span class="token punctuation">.</span>grade <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> dept d <span class="token punctuation">,</span> salgrade s <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token operator">and</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>salary <span class="token operator">between</span> s<span class="token punctuation">.</span>losal <span class="token operator">and</span> s<span class="token punctuation">.</span>hisal <span class="token punctuation">)</span> <span class="token operator">and</span> d<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;研发部&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_7-查询-研发部-员工的平均工资" tabindex="-1"><a class="header-anchor" href="#_7-查询-研发部-员工的平均工资" aria-hidden="true">#</a> 7). 查询 &quot;研发部&quot; 员工的平均工资</h4>`,2),$=n("li",null,[n("p",null,"表: emp , dept")],-1),nn={href:"http://dept.id",target:"_blank",rel:"noopener noreferrer"},sn=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp e<span class="token punctuation">,</span> dept d <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token operator">and</span> d<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;研发部&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_8-查询工资比-灭绝-高的员工信息。" tabindex="-1"><a class="header-anchor" href="#_8-查询工资比-灭绝-高的员工信息。" aria-hidden="true">#</a> 8). 查询工资比 &quot;灭绝&quot; 高的员工信息。</h4><p>①. 查询 &quot;灭绝&quot; 的薪资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;灭绝&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 查询比她工资高的员工数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;灭绝&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_9-查询比平均薪资高的员工信息" tabindex="-1"><a class="header-anchor" href="#_9-查询比平均薪资高的员工信息" aria-hidden="true">#</a> 9). 查询比平均薪资高的员工信息</h4><p>①. 查询员工的平均薪资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②. 查询比平均薪资高的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_10-查询低于本部门平均工资的员工信息" tabindex="-1"><a class="header-anchor" href="#_10-查询低于本部门平均工资的员工信息" aria-hidden="true">#</a> 10). 查询低于本部门平均工资的员工信息</h4><p>①. 查询指定部门平均薪资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp e1 <span class="token keyword">where</span> e1<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp e1 <span class="token keyword">where</span> e1<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>②. 查询低于本部门平均工资的员工信息</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp e2 <span class="token keyword">where</span> e2<span class="token punctuation">.</span>salary <span class="token operator">&lt;</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp e1 <span class="token keyword">where</span> e1<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> e2<span class="token punctuation">.</span>dept_id <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_11-查询所有的部门信息-并统计部门的员工人数" tabindex="-1"><a class="header-anchor" href="#_11-查询所有的部门信息-并统计部门的员工人数" aria-hidden="true">#</a> 11). 查询所有的部门信息, 并统计部门的员工人数</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> d<span class="token punctuation">.</span>id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token punctuation">,</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp e <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token punctuation">)</span> <span class="token string">&#39;人数&#39;</span> <span class="token keyword">from</span> dept d<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_12-查询所有学生的选课情况-展示出学生名称-学号-课程名称" tabindex="-1"><a class="header-anchor" href="#_12-查询所有学生的选课情况-展示出学生名称-学号-课程名称" aria-hidden="true">#</a> 12). 查询所有学生的选课情况, 展示出学生名称, 学号, 课程名称</h4>`,19),an=n("li",null,[n("p",null,"表: student , course , student_course")],-1),pn={href:"http://student.id",target:"_blank",rel:"noopener noreferrer"},en={href:"http://course.id",target:"_blank",rel:"noopener noreferrer"},tn=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> s<span class="token punctuation">.</span>name <span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token keyword">no</span> <span class="token punctuation">,</span> c<span class="token punctuation">.</span>name <span class="token keyword">from</span> student s <span class="token punctuation">,</span> student_course sc <span class="token punctuation">,</span> course c <span class="token keyword">where</span> s<span class="token punctuation">.</span>id <span class="token operator">=</span> sc<span class="token punctuation">.</span>studentid <span class="token operator">and</span> sc<span class="token punctuation">.</span>courseid <span class="token operator">=</span> c<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>备注: 以上需求的实现方式可能会很多, SQL写法也有很多，只要能满足我们的需求，查询出符合条件的记录即可。</p></blockquote>`,2);function on(cn,ln){const a=o("ExternalLinkIcon");return c(),l("div",null,[x,n("blockquote",null,[E,n("p",null,[s("连接条件: emp.dept_id = "),n("a",N,[s("dept.id"),p(a)])])]),T,n("blockquote",null,[A,n("p",null,[s("连接条件: emp.dept_id = "),n("a",I,[s("dept.id"),p(a)])])]),O,n("ul",null,[M,n("li",null,[n("p",null,[s("连接条件: emp.dept_id = "),n("a",L,[s("dept.id"),p(a)])])])]),R,n("ul",null,[S,n("li",null,[n("p",null,[s("连接条件: emp.dept_id = "),n("a",C,[s("dept.id"),p(a)])])])]),D,n("ul",null,[j,n("li",null,[n("p",null,[s("连接条件: emp.dept_id = "),n("a",B,[s("dept.id"),p(a)])])])]),F,n("ul",null,[z,n("li",null,[n("p",null,[s("连接条件: emp.dept_id = "),n("a",H,[s("dept.id"),p(a)])])])]),Q,n("ul",null,[U,n("li",null,[n("p",null,[s("连接条件: emp.dept_id = "),n("a",V,[s("dept.id"),p(a)])])])]),Y,n("ul",null,[J,n("li",null,[n("p",null,[s("连接条件: emp.dept_id = "),n("a",P,[s("dept.id"),p(a)])])])]),W,n("ul",null,[K,n("li",null,[n("p",null,[s("连接条件 : emp.salary between salgrade.losal and salgrade.hisal , emp.dept_id = "),n("a",G,[s("dept.id"),p(a)])])]),n("li",null,[n("p",null,[s("查询条件 : "),n("a",X,[s("dept.name"),p(a)]),s(" = '研发部'")])])]),Z,n("ul",null,[$,n("li",null,[n("p",null,[s("连接条件 : emp.dept_id = "),n("a",nn,[s("dept.id"),p(a)])])])]),sn,n("ul",null,[an,n("li",null,[n("p",null,[s("连接条件: "),n("a",pn,[s("student.id"),p(a)]),s(" = student_course.studentid , "),n("a",en,[s("course.id"),p(a)]),s(" = student_course.courseid")])])]),tn])}const rn=t(q,[["render",on],["__file","05 MySQL多表查询.html.vue"]]);export{rn as default};
