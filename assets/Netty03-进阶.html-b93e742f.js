const n=JSON.parse('{"key":"v-360b7deb","path":"/java/socket/netty/Netty03-%E8%BF%9B%E9%98%B6.html","title":"三、Netty 进阶","lang":"zh-CN","frontmatter":{"title":"三、Netty 进阶","date":"2023-04-03T14:56:23.000Z","order":3,"category":["中间件","网络编程","Socket","Netty","Channel","Buffer","NIO","BIO"],"tag":["中间件","网络编程","Socket","Netty","Channel","Buffer","NIO","BIO"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"三. Netty 进阶 1. 粘包与半包 1.1 粘包现象 1.1.1 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer&lt;SocketChannel&gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx) throws Exception { log.debug(\\"connected {}\\", ctx.channel()); super.channelActive(ctx); } @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception { log.debug(\\"disconnect {}\\", ctx.channel()); super.channelInactive(ctx); } }); } }); ChannelFuture channelFuture = serverBootstrap.bind(8080); log.debug(\\"{} binding...\\", channelFuture.channel()); channelFuture.sync(); log.debug(\\"{} bound...\\", channelFuture.channel()); channelFuture.channel().closeFuture().sync(); } catch (InterruptedException e) { log.error(\\"server error\\", e); } finally { boss.shutdownGracefully(); worker.shutdownGracefully(); log.debug(\\"stoped\\"); } } public static void main(String[] args) { new HelloWorldServer().start(); } }","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/java/socket/netty/Netty03-%E8%BF%9B%E9%98%B6.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"三、Netty 进阶"}],["meta",{"property":"og:description","content":"三. Netty 进阶 1. 粘包与半包 1.1 粘包现象 1.1.1 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer&lt;SocketChannel&gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx) throws Exception { log.debug(\\"connected {}\\", ctx.channel()); super.channelActive(ctx); } @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception { log.debug(\\"disconnect {}\\", ctx.channel()); super.channelInactive(ctx); } }); } }); ChannelFuture channelFuture = serverBootstrap.bind(8080); log.debug(\\"{} binding...\\", channelFuture.channel()); channelFuture.sync(); log.debug(\\"{} bound...\\", channelFuture.channel()); channelFuture.channel().closeFuture().sync(); } catch (InterruptedException e) { log.error(\\"server error\\", e); } finally { boss.shutdownGracefully(); worker.shutdownGracefully(); log.debug(\\"stoped\\"); } } public static void main(String[] args) { new HelloWorldServer().start(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"三、Netty 进阶"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"网络编程"}],["meta",{"property":"article:tag","content":"Socket"}],["meta",{"property":"article:tag","content":"Netty"}],["meta",{"property":"article:tag","content":"Channel"}],["meta",{"property":"article:tag","content":"Buffer"}],["meta",{"property":"article:tag","content":"NIO"}],["meta",{"property":"article:tag","content":"BIO"}],["meta",{"property":"article:published_time","content":"2023-04-03T14:56:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"三、Netty 进阶\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-04-03T14:56:23.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"1. 粘包与半包","slug":"_1-粘包与半包","link":"#_1-粘包与半包","children":[{"level":3,"title":"1.1 粘包现象","slug":"_1-1-粘包现象","link":"#_1-1-粘包现象","children":[]},{"level":3,"title":"1.2 半包现象","slug":"_1-2-半包现象","link":"#_1-2-半包现象","children":[]},{"level":3,"title":"1.3 现象分析","slug":"_1-3-现象分析","link":"#_1-3-现象分析","children":[]},{"level":3,"title":"1.4 解决方案","slug":"_1-4-解决方案","link":"#_1-4-解决方案","children":[]}]},{"level":2,"title":"2. 协议设计与解析","slug":"_2-协议设计与解析","link":"#_2-协议设计与解析","children":[{"level":3,"title":"2.1 为什么需要协议？","slug":"_2-1-为什么需要协议","link":"#_2-1-为什么需要协议","children":[]},{"level":3,"title":"2.2 redis 协议举例","slug":"_2-2-redis-协议举例","link":"#_2-2-redis-协议举例","children":[]},{"level":3,"title":"2.3 http 协议举例","slug":"_2-3-http-协议举例","link":"#_2-3-http-协议举例","children":[]},{"level":3,"title":"2.4 自定义协议要素","slug":"_2-4-自定义协议要素","link":"#_2-4-自定义协议要素","children":[]}]},{"level":2,"title":"3. 聊天室案例","slug":"_3-聊天室案例","link":"#_3-聊天室案例","children":[{"level":3,"title":"3.1 聊天室业务介绍","slug":"_3-1-聊天室业务介绍","link":"#_3-1-聊天室业务介绍","children":[]},{"level":3,"title":"3.2 聊天室业务-登录","slug":"_3-2-聊天室业务-登录","link":"#_3-2-聊天室业务-登录","children":[]},{"level":3,"title":"3.3 聊天室业务-单聊","slug":"_3-3-聊天室业务-单聊","link":"#_3-3-聊天室业务-单聊","children":[]},{"level":3,"title":"3.4 聊天室业务-群聊","slug":"_3-4-聊天室业务-群聊","link":"#_3-4-聊天室业务-群聊","children":[]},{"level":3,"title":"3.5 聊天室业务-退出","slug":"_3-5-聊天室业务-退出","link":"#_3-5-聊天室业务-退出","children":[]},{"level":3,"title":"3.6 聊天室业务-空闲检测","slug":"_3-6-聊天室业务-空闲检测","link":"#_3-6-聊天室业务-空闲检测","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":34.39,"words":10316},"filePathRelative":"java/socket/netty/Netty03-进阶.md","localizedDate":"2023年4月3日","excerpt":"<h1> 三. Netty 进阶</h1>\\n<h2> 1. 粘包与半包</h2>\\n<h3> 1.1 粘包现象</h3>\\n<h4> 1.1.1 服务端代码</h4>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">HelloWorldServer</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">Logger</span> log <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">LoggerFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getLogger</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HelloWorldServer</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">NioEventLoopGroup</span> boss <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NioEventLoopGroup</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">NioEventLoopGroup</span> worker <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NioEventLoopGroup</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">ServerBootstrap</span> serverBootstrap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ServerBootstrap</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            serverBootstrap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">NioServerSocketChannel</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            serverBootstrap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">group</span><span class=\\"token punctuation\\">(</span>boss<span class=\\"token punctuation\\">,</span> worker<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            serverBootstrap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">childHandler</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ChannelInitializer</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">SocketChannel</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token annotation punctuation\\">@Override</span>\\n                <span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">initChannel</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SocketChannel</span> ch<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n                    ch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pipeline</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addLast</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">LoggingHandler</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">LogLevel</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">DEBUG</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    ch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pipeline</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addLast</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ChannelInboundHandlerAdapter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token annotation punctuation\\">@Override</span>\\n                        <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">channelActive</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ChannelHandlerContext</span> ctx<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n                            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"connected {}\\"</span><span class=\\"token punctuation\\">,</span> ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                            <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channelActive</span><span class=\\"token punctuation\\">(</span>ctx<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token punctuation\\">}</span>\\n\\n                        <span class=\\"token annotation punctuation\\">@Override</span>\\n                        <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">channelInactive</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ChannelHandlerContext</span> ctx<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n                            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"disconnect {}\\"</span><span class=\\"token punctuation\\">,</span> ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                            <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channelInactive</span><span class=\\"token punctuation\\">(</span>ctx<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token punctuation\\">}</span>\\n                    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\">ChannelFuture</span> channelFuture <span class=\\"token operator\\">=</span> serverBootstrap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">8080</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"{} binding...\\"</span><span class=\\"token punctuation\\">,</span> channelFuture<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            channelFuture<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"{} bound...\\"</span><span class=\\"token punctuation\\">,</span> channelFuture<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            channelFuture<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">closeFuture</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">InterruptedException</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"server error\\"</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">finally</span> <span class=\\"token punctuation\\">{</span>\\n            boss<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shutdownGracefully</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            worker<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shutdownGracefully</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"stoped\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HelloWorldServer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{n as data};
