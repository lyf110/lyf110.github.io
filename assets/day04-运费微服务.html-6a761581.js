import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o,c as i,a as n,b as s,d as p,e as t}from"./app-5f6064b2.js";const l="/assets/image-20240407183435224-163-4eae522d.gif",u="/assets/image-20240407183435224-164-c598b90e.png",k="/assets/image-20240407183435224-165-ae57f5c9.png",r="/assets/image-20240407183435224-166-c88f1423.png",d="/assets/image-20240407183435224-167-e7963342.png",m="/assets/image-20240407183435224-168-6173733f.png",v="/assets/image-20240407183435224-169-ee7b524e.png",b="/assets/image-20240407183435225-170-8efc6c48.png",g="/assets/image-20240407183435225-171-f6257fa6.png",y="/assets/image-20240407183435225-172-db8d5d57.png",f="/assets/image-20240407183435225-173-629e40f3.png",w="/assets/image-20240407183435225-174-34e33883.png",h="/assets/image-20240407183435225-175-13353831.png",C="/assets/image-20240407183435225-176-42f6dd52.png",T="/assets/image-20240407183435225-177-cc7008e6.png",O="/assets/image-20240407183435225-178-c753c583.png",_="/assets/image-20240407183435225-179-ae873040.png",E="/assets/image-20240407183435226-180-f02b2aee.png",x="/assets/image-20240407183435226-181-f762748b.png",D="/assets/image-20240407183435226-182-73743d18.png",j="/assets/image-20240407183435226-183-5c344a53.png",S="/assets/image-20240407183435226-184-0f87e92f.png",L={},N=t('<h1 id="课程安排" tabindex="-1"><a class="header-anchor" href="#课程安排" aria-hidden="true">#</a> 课程安排</h1><ul><li>了解运费的业务需求</li><li>了解运费模板表的设计</li><li>实现运费计算的业务逻辑</li><li>完成部署服务以及功能测试</li></ul><h1 id="_1、背景说明" tabindex="-1"><a class="header-anchor" href="#_1、背景说明" aria-hidden="true">#</a> 1、背景说明</h1><p>现在出现了新的情况，开发二组一名负责运费微服务的同事小张离职了，开发二组目前人手不足，需要借调去接手这个任务，你需要知道的是，运费计算微服务是核心的微服务，不能出现计算错误，毕竟是钱挂钩的。<br> 对了，小张离职前已经将该微服务的基本框架搭建完成了，你只需要实现核心的业务逻辑就可以了，这对你来说可能是个好消息……</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="_2、需求分析" tabindex="-1"><a class="header-anchor" href="#_2、需求分析" aria-hidden="true">#</a> 2、需求分析</h1><p>接到开发任务后，首先需要了解需求，再动手开发。</p><p>运费的计算是分不同地区的，比如：同城、省内、跨省，计算规则是不一样的，所以针对不同的类型需要设置不同的运费规则，这其实就是所谓的模板。</p><h2 id="_2-1、模板列表" tabindex="-1"><a class="header-anchor" href="#_2-1、模板列表" aria-hidden="true">#</a> 2.1、模板列表</h2><p>产品需求中的运费模板列表：<br><img src="'+u+'" alt="" loading="lazy"></p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>轻抛系数名称解释：</strong><br> 在计算运费时，包裹有两个维度，体积和重量，二者谁大取谁进行计算，但是体积和重量不是一个单位怎么比较呢？一般的做法就是将体积转化成重量，公式：体积 / 轻抛系数 = 重量，这样就可以比较了。<br> 也就是说，相同的体积，轻抛系数越大计算出的重量就越小，反之就越大。</p></div><h2 id="_2-2、计费规则" tabindex="-1"><a class="header-anchor" href="#_2-2、计费规则" aria-hidden="true">#</a> 2.2、计费规则</h2><p><strong>重量计算方法：</strong><br> 取重量和体积两者间较大的数值，体积计算方法：长(cm)×_宽(cm)_×高(cm) / 轻抛系数</p><p><strong>普快：</strong><br> 同城互寄：12000<br> 省内寄件：8000<br> 跨省寄件：12000<br> 经济区互寄（京津翼、江浙沪）：6000<br> 经济区互寄（黑吉辽）：12000<br> 经济区互寄（川渝）：8000</p><hr><p><strong>计费重量小数点规则：</strong></p><p>不满1kg，按1kg计费；<br> 10KG以下：以0.1kg为计重单位，四舍五入保留 1 位小数；<br> 10-100KG：续重以0.5kg为计重单位，不足0.5kg按0.5kg算，四舍五入保留 1 位小数；<br> 100KG及以上：四舍五入取整；</p><blockquote><p><strong>举例：</strong><br> 8.4kg按照8.4kg收费<br> 8.5kg按照8.5kg收费<br> 8.8kg按照8.8kg收费<br> 18.1kg按照18.5kg收费<br> 18.5kg按照18.5kg收费<br> 18.7kg按照19kg收费<br> 108.4kg按照108kg收费<br> 108.5kg按照109kg收费<br> 108.6kg按照109kg收费</p></blockquote><p>总运费小数点规则：<strong>按四舍五入计算，精确到小数点后一位</strong></p><hr><p>模板不可重复设置，需确保唯一值。<br> 如已设置同城寄、跨省寄、省内寄，则只可修改，不可再新增<br> 如已设置经济区互寄某个城市，下次添加不可再关联此经济区城市</p><h2 id="_2-3、新增模板" tabindex="-1"><a class="header-anchor" href="#_2-3、新增模板" aria-hidden="true">#</a> 2.3、新增模板</h2><p>运费模板有4种类型，分别为：<br> 同城寄：同城寄件运费计算模板，全国统一定价<br> 省内寄：省内寄件运费计算模板，全国统一定价<br> 跨省寄：不同省份间的运费计算模板，全国统一定价<br> 经济区互寄：4个经济区（京津翼、江沪浙皖、川渝、黑吉辽），经济区间寄件可设置优惠价格</p><h3 id="_2-3-1、全国范围" tabindex="-1"><a class="header-anchor" href="#_2-3-1、全国范围" aria-hidden="true">#</a> 2.3.1、全国范围</h3><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此模板为‘同城寄/省内寄/跨省’三个类型的运费模板<br> 模板类型：可选择同城寄/省内寄/跨省/经济区互寄<br> 运送类型：可选择运送类型，目前业务只支持普快<br> 关联城市：<br> 同城寄/省内寄/跨省：全国统一定价（如上图）<br> 首重价格：保留小数点后一位，可输入1-999间任意数值<br> 续重价格：保留小数点后一位，可输入1-999间任意数值<br> 轻抛系数：整数，可输入1-99999间，任意数值</p><h3 id="_2-3-2、经济区互寄" tabindex="-1"><a class="header-anchor" href="#_2-3-2、经济区互寄" aria-hidden="true">#</a> 2.3.2、经济区互寄</h3><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此模板为‘经济区互寄’类型的运费模板<br> 模板类型：可选择同城寄/省内寄/跨省/经济区互寄<br> 运送类型：可选择运送类型，目前业务只支持普快<br> 关联城市：<br> 经济区互寄：可设置单个或多个经济区价格（如上图）<br> 首重价格：保留小数点后一位，可输入1-999间任意数值<br> 续重价格：保留小数点后一位，可输入1-999间任意数值<br> 轻抛系数：整数，可输入1-99999间，任意数值</p><h1 id="_3、运费模板表" tabindex="-1"><a class="header-anchor" href="#_3、运费模板表" aria-hidden="true">#</a> 3、运费模板表</h1><p>运费模板是需要存储到表中的，所以首先需要设计表结构，具体表结构语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>sl_carriage<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;运费模板id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>template_type<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;模板类型，1-同城寄 2-省内寄 3-经济区互寄 4-跨省&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>transport_type<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;运送类型，1-普快 2-特快&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>associated_city<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;关联城市，1-全国 2-京津冀 3-江浙沪 4-川渝 5-黑吉辽&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>first_weight<span class="token punctuation">`</span></span> <span class="token keyword">double</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;首重价格&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>continuous_weight<span class="token punctuation">`</span></span> <span class="token keyword">double</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;续重价格&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>light_throwing_coefficient<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;轻抛系数&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>created<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>updated<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_general_ci ROW_FORMAT<span class="token operator">=</span>DYNAMIC <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;运费模板表&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">警告</p><p>说明：由于该表数据比较少，所以就不需要添加索引字段了。</p></div><p>在数据库中已经预存了7条数据：<br><img src="'+d+'" alt="" loading="lazy"></p><blockquote><p>🚨 特别需要注意associated_city字段，如果多个经济区互寄城市共用一套模板，其数据是通过逗号分割存储的，如下：<br><img src="'+m+'" alt="" loading="lazy"></p></blockquote><h1 id="_4、拉取代码" tabindex="-1"><a class="header-anchor" href="#_4、拉取代码" aria-hidden="true">#</a> 4、拉取代码</h1><p>需要拉取的工程有3个：</p>',37),H=n("thead",null,[n("tr",null,[n("th",null,"工程名"),n("th",null,"git地址")])],-1),W=n("td",null,"sl-express-ms-carriage-domain",-1),R={href:"http://git.sl-express.com/sl/sl-express-ms-carriage-domain.git",target:"_blank",rel:"noopener noreferrer"},U=n("td",null,"sl-express-ms-carriage-api",-1),A={href:"http://git.sl-express.com/sl/sl-express-ms-carriage-api.git",target:"_blank",rel:"noopener noreferrer"},I=n("td",null,"sl-express-ms-carriage-service",-1),M={href:"http://git.sl-express.com/sl/sl-express-ms-carriage-service.git",target:"_blank",rel:"noopener noreferrer"},q=t(`<h1 id="_5、实现业务" tabindex="-1"><a class="header-anchor" href="#_5、实现业务" aria-hidden="true">#</a> 5、实现业务</h1><p>接下来我们要编写代码实现具体的业务了，同事小张已经完成基本的代码框架，包括Controller、Service接口等，我们只需要实现CarriageService即可。需要实现4个方法，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CarriageDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 运费管理表 服务类
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CarriageService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 新增/修改运费模板
     *
     * <span class="token keyword">@param</span> <span class="token parameter">carriageDto</span> 新增/修改运费对象
     *                    必填字段：templateType、transportType
     *                    更新时传入id字段
     */</span>
    <span class="token class-name">CarriageDTO</span> <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token class-name">CarriageDTO</span> carriageDto<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 获取全部运费模板
     *
     * <span class="token keyword">@return</span> 运费模板对象列表
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 运费计算
     *
     * <span class="token keyword">@param</span> <span class="token parameter">waybillDTO</span> 运费计算对象
     * <span class="token keyword">@return</span> 运费模板对象，不仅包含模板数据还包含：computeWeight、expense 字段
     */</span>
    <span class="token class-name">CarriageDTO</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * 根据模板类型查询模板，经济区互寄不通过该方法查询模板
     *
     * <span class="token keyword">@param</span> <span class="token parameter">templateType</span> 模板类型：1-同城寄，2-省内寄，4-跨省
     * <span class="token keyword">@return</span> 运费模板
     */</span>
    <span class="token class-name">CarriageEntity</span> <span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> templateType<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-1、查询模板列表" tabindex="-1"><a class="header-anchor" href="#_5-1、查询模板列表" aria-hidden="true">#</a> 5.1、查询模板列表</h2><p>编写<code>com.sl.ms.carriage.service.impl.CarriageServiceImpl</code>实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CarriageServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageMapper</span><span class="token punctuation">,</span> <span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">CarriageService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageDTO</span> <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token class-name">CarriageDTO</span> carriageDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageDTO</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
            
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageEntity</span> <span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> templateType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>templateType<span class="token punctuation">,</span> <span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">ECONOMIC_ZONE</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">CarriageExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">METHOD_CALL_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getTemplateType</span><span class="token punctuation">,</span> templateType<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getTransportType</span><span class="token punctuation">,</span> <span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">REGULAR_FAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询列表，需要按照创建时间倒序排序：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 构造查询条件，按创建时间倒序</span>
        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getCreated</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 查询数据库</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将结果转换为DTO类型</span>
        <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">CarriageUtils</span><span class="token operator">::</span><span class="token function">toDTO</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写测试用例：</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>如果工程中不存在test目录，需要先创建test目录再编写测试用例：<br><img src="`+v+'" alt="" loading="lazy"><br><img src="'+b+'" alt="" loading="lazy"></p></div><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CarriageConstant</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CarriageDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">CarriageServiceTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageService</span> carriageService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageDTO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CarriageDTO</span> carriageDTO <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>carriageDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CarriageEntity</span> carriageEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">SAME_CITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>carriageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试结果：<br><img src="`+y+'" alt="" loading="lazy"><br> 也可以基于swagger测试：</p>',13),F={href:"http://127.0.0.1:18094/doc.html",target:"_blank",rel:"noopener noreferrer"},z=t('<p>可以看到，已经查询到了数据：</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>整合到后台管理系统中：</p><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_5-2、新增或更新" tabindex="-1"><a class="header-anchor" href="#_5-2、新增或更新" aria-hidden="true">#</a> 5.2、新增或更新</h2><h3 id="_5-2-1、整体流程" tabindex="-1"><a class="header-anchor" href="#_5-2-1、整体流程" aria-hidden="true">#</a> 5.2.1、整体流程</h3><figure><img src="'+h+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>流程说明：</p><ul><li>根据传入的CarriageDTO对象参数进行查询模板，并且判断是否为经济区</li><li>如果是非经济区互寄，需要进一步判断模板是否存在，如果存在需要判断是否为新增操作，如果是新增操作就抛出异常，其他情况都可以进行落库</li><li>如果是经济区互寄，需要判断关联城市是否重复，如果重复抛出异常，否则进行落库操作</li></ul><div class="hint-container danger"><p class="hint-container-title">警告</p><p>❓模板为什么不能重复？<br> 因为运费的计算是通过模板进行的，如果存在多个模板，该基于哪个模板计算呢？所以模板是不能重复的。</p></div><h3 id="_5-2-2、代码实现" tabindex="-1"><a class="header-anchor" href="#_5-2-2、代码实现" aria-hidden="true">#</a> 5.2.2、代码实现</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageDTO</span> <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token class-name">CarriageDTO</span> carriageDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;新增运费模板 --&gt; {}&quot;</span><span class="token punctuation">,</span> carriageDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//思路：首先根据条件查询运费模板，判断模板是否存在，如果不存在直接新增</span>
        <span class="token comment">//如果存在，需要判断是否为经济区互寄，如果不是，抛出异常，如果是，需要进一步判断所关联的城市是否重复</span>
        <span class="token comment">//如果重复，抛出异常，如果不重复进行新增或更新</span>
        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getTemplateType</span><span class="token punctuation">,</span> carriageDto<span class="token punctuation">.</span><span class="token function">getTemplateType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getTransportType</span><span class="token punctuation">,</span> <span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">REGULAR_FAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//查询到模板列表</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> carriageList <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">notEqual</span><span class="token punctuation">(</span>carriageDto<span class="token punctuation">.</span><span class="token function">getTemplateType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">ECONOMIC_ZONE</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 非经济区互寄的情况下，需要判断查询的模板是否为空</span>
            <span class="token comment">// 如果不为空并且入参的参数id为空，说明是新增操作，非经济区只能有一个模板，需要抛出异常</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>carriageList<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>carriageDto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 新增操作，模板重复，抛出异常</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">CarriageExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">NOT_ECONOMIC_ZONE_REPEAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//新增或更新非经济区模板</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveOrUpdateCarriage</span><span class="token punctuation">(</span>carriageDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//判断模板所关联的城市是否有重复</span>
        <span class="token comment">//查询其他模板中所有的经济区列表</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> associatedCityList <span class="token operator">=</span> <span class="token class-name">StreamUtil</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>carriageList<span class="token punctuation">)</span>
                <span class="token comment">//排除掉自己，检查与其他模板是否存在冲突</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>carriageEntity <span class="token operator">-&gt;</span> <span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">notEqual</span><span class="token punctuation">(</span>carriageEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> carriageDto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//获取关联城市</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getAssociatedCity</span><span class="token punctuation">)</span>
                <span class="token comment">//将关联城市按照逗号分割</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>associatedCity <span class="token operator">-&gt;</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>associatedCity<span class="token punctuation">,</span> <span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//将上面得到的集合展开，得到字符串</span>
                <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">StreamUtil</span><span class="token operator">::</span><span class="token function">of</span><span class="token punctuation">)</span>
                <span class="token comment">//收集到集合中</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//查看当前新增经济区是否存在重复，取交集来判断是否重复</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> intersection <span class="token operator">=</span> <span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">intersection</span><span class="token punctuation">(</span>associatedCityList<span class="token punctuation">,</span> carriageDto<span class="token punctuation">.</span><span class="token function">getAssociatedCityList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>intersection<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//有重复</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token class-name">CarriageExceptionEnum</span><span class="token punctuation">.</span><span class="token constant">ECONOMIC_ZONE_CITY_REPEAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//新增或更新经济区模板</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveOrUpdateCarriage</span><span class="token punctuation">(</span>carriageDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-3、测试" tabindex="-1"><a class="header-anchor" href="#_5-2-3、测试" aria-hidden="true">#</a> 5.2.3、测试</h3><p>编写测试用例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageService</span> carriageService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CarriageDTO</span> carriageDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CarriageDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setTemplateType</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setTransportType</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setAssociatedCityList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setFirstWeight</span><span class="token punctuation">(</span><span class="token number">12d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setContinuousWeight</span><span class="token punctuation">(</span><span class="token number">1d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setLightThrowingCoefficient</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CarriageDTO</span> dto <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>carriageDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-3、运费计算" tabindex="-1"><a class="header-anchor" href="#_5-3、运费计算" aria-hidden="true">#</a> 5.3、运费计算</h2><h3 id="_5-3-1、整体流程" tabindex="-1"><a class="header-anchor" href="#_5-3-1、整体流程" aria-hidden="true">#</a> 5.3.1、整体流程</h3><figure><img src="`+C+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>说明：</p><ul><li>运费模板优先级：同城&gt;省内&gt;经济区互寄&gt;跨省</li><li>将体积转化成重量，与重量比较，取大值</li></ul></div><h3 id="_5-3-2、查找模板" tabindex="-1"><a class="header-anchor" href="#_5-3-2、查找模板" aria-hidden="true">#</a> 5.3.2、查找模板</h3><p>在上述的流程图中可以看出，计算运费的第一步逻辑就是需要查找到对应的运费模板，否则不能进行计算，如何实现比较好呢，我们这里采用【责任链】模式进行代码编写。<br> 之所以采用【责任链】模式，是因为在查找模板时，不同的模板处理逻辑不同，并且这些逻辑组成了一条处理链，有开头有结尾，只要能找到符合条件的模板即结束。</p><p>首先，定义运费模板处理链，这是一个抽象类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 运费模板处理链的抽象定义
 */</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractCarriageChainHandler</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">AbstractCarriageChainHandler</span> nextHandler<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 执行过滤方法，通过输入参数查找运费模板
     *
     * <span class="token keyword">@param</span> <span class="token parameter">waybillDTO</span> 输入参数
     * <span class="token keyword">@return</span> 运费模板
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">CarriageEntity</span> <span class="token function">doHandler</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 执行下一个处理器
     *
     * <span class="token keyword">@param</span> <span class="token parameter">waybillDTO</span>     输入参数
     * <span class="token keyword">@param</span> <span class="token parameter">carriageEntity</span> 上个handler处理得到的对象
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">protected</span> <span class="token class-name">CarriageEntity</span> <span class="token function">doNextHandler</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">,</span> <span class="token class-name">CarriageEntity</span> carriageEntity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextHandler <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> carriageEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//如果下游Handler为空 或 上个Handler已经找到运费模板就返回</span>
            <span class="token keyword">return</span> carriageEntity<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> nextHandler<span class="token punctuation">.</span><span class="token function">doHandler</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置下游Handler
     *
     * <span class="token keyword">@param</span> <span class="token parameter">nextHandler</span> 下游Handler
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNextHandler</span><span class="token punctuation">(</span><span class="token class-name">AbstractCarriageChainHandler</span> nextHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nextHandler <span class="token operator">=</span> nextHandler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面针对不同的模板策略编写具体的实现类，同城寄：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CarriageConstant</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CarriageService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 同城寄
 */</span>
<span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">//定义顺序</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SameCityChainHandler</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractCarriageChainHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageService</span> carriageService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageEntity</span> <span class="token function">doHandler</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CarriageEntity</span> carriageEntity <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">.</span><span class="token function">getReceiverCityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> waybillDTO<span class="token punctuation">.</span><span class="token function">getSenderCityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//同城</span>
            carriageEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">SAME_CITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">doNextHandler</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">,</span> carriageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>省内寄：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>base<span class="token punctuation">.</span>api<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">AreaFeign</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CarriageConstant</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CarriageService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 省内寄
 */</span>
<span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">//定义顺序</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SameProvinceChainHandler</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractCarriageChainHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageService</span> carriageService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">AreaFeign</span> areaFeign<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageEntity</span> <span class="token function">doHandler</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CarriageEntity</span> carriageEntity <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取收寄件地址省份id</span>
        <span class="token class-name">Long</span> receiverProvinceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>areaFeign<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">.</span><span class="token function">getReceiverCityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> senderProvinceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>areaFeign<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">.</span><span class="token function">getSenderCityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>receiverProvinceId<span class="token punctuation">,</span> senderProvinceId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//省内</span>
            carriageEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">SAME_PROVINCE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">doNextHandler</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">,</span> carriageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经济区互寄：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">EnumUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">LambdaQueryWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span></span><span class="token class-name">Wrappers</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>base<span class="token punctuation">.</span>api<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">AreaFeign</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CarriageConstant</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">EconomicRegionEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CarriageService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedHashMap</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 经济区互寄
 */</span>
<span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token comment">//定义顺序</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EconomicZoneChainHandler</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractCarriageChainHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageService</span> carriageService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">AreaFeign</span> areaFeign<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageEntity</span> <span class="token function">doHandler</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CarriageEntity</span> carriageEntity <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">// 获取收寄件地址省份id</span>
        <span class="token class-name">Long</span> receiverProvinceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>areaFeign<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">.</span><span class="token function">getReceiverCityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> senderProvinceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>areaFeign<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">.</span><span class="token function">getSenderCityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取经济区城市配置枚举</span>
        <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">EconomicRegionEnum</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">EconomicRegionMap</span> <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getEnumMap</span><span class="token punctuation">(</span><span class="token class-name">EconomicRegionEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">EconomicRegionEnum</span> economicRegionEnum <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">EconomicRegionEnum</span> regionEnum <span class="token operator">:</span> <span class="token class-name">EconomicRegionMap</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//该经济区是否全部包含收发件省id</span>
            <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">containsAll</span><span class="token punctuation">(</span>regionEnum<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> receiverProvinceId<span class="token punctuation">,</span> senderProvinceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                economicRegionEnum <span class="token operator">=</span> regionEnum<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>economicRegionEnum<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//根据类型编码查询</span>
            <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getTemplateType</span><span class="token punctuation">,</span> <span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">ECONOMIC_ZONE</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getTransportType</span><span class="token punctuation">,</span> <span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">REGULAR_FAST</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">CarriageEntity</span><span class="token operator">::</span><span class="token function">getAssociatedCity</span><span class="token punctuation">,</span> economicRegionEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            carriageEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token function">doNextHandler</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">,</span> carriageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跨省寄：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CarriageConstant</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">CarriageService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 跨省
 */</span>
<span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span> <span class="token comment">//定义顺序</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransProvinceChainHandler</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractCarriageChainHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageService</span> carriageService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageEntity</span> <span class="token function">doHandler</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CarriageEntity</span> carriageEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">findByTemplateType</span><span class="token punctuation">(</span><span class="token class-name">CarriageConstant</span><span class="token punctuation">.</span><span class="token constant">TRANS_PROVINCE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">doNextHandler</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">,</span> carriageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>组装处理链，按照<code>@Order</code>注解中的值，由小到大排序。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span><span class="token class-name">CollUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">SLException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 查找运费模板处理链 @Order注解
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CarriageChainHandler</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 利用Spring注入特性，按照 @Order 从小到达排序注入到集合中
     */</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AbstractCarriageChainHandler</span><span class="token punctuation">&gt;</span></span> chainHandlers<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">AbstractCarriageChainHandler</span> firstHandler<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 组装处理链
     */</span>
    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">constructChain</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>chainHandlers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SLException</span><span class="token punctuation">(</span><span class="token string">&quot;not found carriage chain handler!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//处理链中第一个节点</span>
        firstHandler <span class="token operator">=</span> chainHandlers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chainHandlers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> chainHandlers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//最后一个处理链节点</span>
                chainHandlers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextHandler</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//设置下游节点</span>
                chainHandlers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextHandler</span><span class="token punctuation">(</span>chainHandlers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CarriageEntity</span> <span class="token function">findCarriage</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//从第一个节点开始处理</span>
        <span class="token keyword">return</span> firstHandler<span class="token punctuation">.</span><span class="token function">doHandler</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">WaybillDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sl<span class="token punctuation">.</span>ms<span class="token punctuation">.</span>carriage<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">CarriageEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">CarriageChainHandlerTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">CarriageChainHandler</span> carriageChainHandler<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">findCarriage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WaybillDTO</span> waybillDTO <span class="token operator">=</span> <span class="token class-name">WaybillDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">senderCityId</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span> <span class="token comment">//北京</span>
                <span class="token punctuation">.</span><span class="token function">receiverCityId</span><span class="token punctuation">(</span><span class="token number">161793L</span><span class="token punctuation">)</span> <span class="token comment">//上海</span>
                <span class="token punctuation">.</span><span class="token function">volume</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1d</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CarriageEntity</span> carriage <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageChainHandler<span class="token punctuation">.</span><span class="token function">findCarriage</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>carriage<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注入的处理链集合对象：<br><img src="`+T+'" alt="" loading="lazy"><br> 测试结果，查询到跨省的模板，结果符合预期：<br><img src="'+O+`" alt="" loading="lazy"></p><h3 id="_5-3-3、计算运费" tabindex="-1"><a class="header-anchor" href="#_5-3-3、计算运费" aria-hidden="true">#</a> 5.3.3、计算运费</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CarriageDTO</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//根据参数查找运费模板</span>
        <span class="token class-name">CarriageEntity</span> carriage <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageChainHandler<span class="token punctuation">.</span><span class="token function">findCarriage</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//计算重量，确保最小重量为1kg</span>
        <span class="token keyword">double</span> computeWeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getComputeWeight</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">,</span> carriage<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//计算运费，首重 + 续重</span>
        <span class="token keyword">double</span> expense <span class="token operator">=</span> carriage<span class="token punctuation">.</span><span class="token function">getFirstWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>computeWeight <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> carriage<span class="token punctuation">.</span><span class="token function">getContinuousWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//保留一位小数</span>
        expense <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>expense<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//封装运费和计算重量到DTO，并返回</span>
        <span class="token class-name">CarriageDTO</span> carriageDTO <span class="token operator">=</span> <span class="token class-name">CarriageUtils</span><span class="token punctuation">.</span><span class="token function">toDTO</span><span class="token punctuation">(</span>carriage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setExpense</span><span class="token punctuation">(</span>expense<span class="token punctuation">)</span><span class="token punctuation">;</span>
        carriageDTO<span class="token punctuation">.</span><span class="token function">setComputeWeight</span><span class="token punctuation">(</span>computeWeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> carriageDTO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 根据体积参数与实际重量计算计费重量
     *
     * <span class="token keyword">@param</span> <span class="token parameter">waybillDTO</span> 运费计算对象
     * <span class="token keyword">@param</span> <span class="token parameter">carriage</span>   运费模板
     * <span class="token keyword">@return</span> 计费重量
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">getComputeWeight</span><span class="token punctuation">(</span><span class="token class-name">WaybillDTO</span> waybillDTO<span class="token punctuation">,</span> <span class="token class-name">CarriageEntity</span> carriage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//计算体积，如果传入体积不需要计算</span>
        <span class="token class-name">Integer</span> volume <span class="token operator">=</span> waybillDTO<span class="token punctuation">.</span><span class="token function">getVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>volume<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//长*宽*高计算体积</span>
                volume <span class="token operator">=</span> waybillDTO<span class="token punctuation">.</span><span class="token function">getMeasureLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> waybillDTO<span class="token punctuation">.</span><span class="token function">getMeasureWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> waybillDTO<span class="token punctuation">.</span><span class="token function">getMeasureHigh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//计算出错设置体积为0</span>
                volume <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 计算体积重量，体积 / 轻抛系数</span>
        <span class="token class-name">BigDecimal</span> volumeWeight <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>volume<span class="token punctuation">,</span> carriage<span class="token punctuation">.</span><span class="token function">getLightThrowingCoefficient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//取大值</span>
        <span class="token keyword">double</span> computeWeight <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>volumeWeight<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">.</span><span class="token function">getWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//计算续重，规则：不满1kg，按1kg计费；10kg以下续重以0.1kg计量保留1位小数；10-100kg续重以0.5kg计量保留1位小数；100kg以上四舍五入取整</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>computeWeight <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>computeWeight <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> computeWeight<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 举例：</span>
        <span class="token comment">// 108.4kg按照108kg收费</span>
        <span class="token comment">// 108.5kg按照109kg收费</span>
        <span class="token comment">// 108.6kg按照109kg收费</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>computeWeight <span class="token operator">&gt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>computeWeight<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//0.5为一个计算单位，举例：</span>
        <span class="token comment">// 18.8kg按照19收费，</span>
        <span class="token comment">// 18.4kg按照18.5kg收费</span>
        <span class="token comment">// 18.1kg按照18.5kg收费</span>
        <span class="token comment">// 18.6kg按照19收费</span>
        <span class="token keyword">int</span> integer <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>computeWeight<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">DOWN</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>computeWeight<span class="token punctuation">,</span> integer<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> integer<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>computeWeight<span class="token punctuation">,</span> integer<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>integer<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>integer<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-4、测试" tabindex="-1"><a class="header-anchor" href="#_5-3-4、测试" aria-hidden="true">#</a> 5.3.4、测试</h3><p>可以通过单元测试或者swagger测试：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WaybillDTO</span> waybillDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WaybillDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        waybillDTO<span class="token punctuation">.</span><span class="token function">setReceiverCityId</span><span class="token punctuation">(</span><span class="token number">7363L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//天津</span>
        waybillDTO<span class="token punctuation">.</span><span class="token function">setSenderCityId</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//北京</span>
        waybillDTO<span class="token punctuation">.</span><span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token number">3.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重量</span>
        waybillDTO<span class="token punctuation">.</span><span class="token function">setVolume</span><span class="token punctuation">(</span><span class="token number">125000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//体积</span>

        <span class="token class-name">CarriageDTO</span> compute <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carriageService<span class="token punctuation">.</span><span class="token function">compute</span><span class="token punctuation">(</span>waybillDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+'" alt="" loading="lazy"><br><img src="'+E+`" alt="" loading="lazy"><br> 可以看到已经得到计算结果。</p><h3 id="_5-3-5、异常" tabindex="-1"><a class="header-anchor" href="#_5-3-5、异常" aria-hidden="true">#</a> 5.3.5、异常</h3><p>可能会出现如下异常：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2022</span>-08-04 <span class="token number">19</span>:27:01.712 - <span class="token punctuation">[</span>http-nio-18094-exec-6<span class="token punctuation">]</span> - ERROR - c.s.t.common.handler.GlobalExceptionHandler - 其他未知异常 -<span class="token operator">&gt;</span> 
feign.RetryableException: Connection refused: connect executing GET http://sl-express-ms-base/area/72975
	at feign.FeignException.errorExecuting<span class="token punctuation">(</span>FeignException.java:268<span class="token punctuation">)</span>
	at feign.SynchronousMethodHandler.executeAndDecode<span class="token punctuation">(</span>SynchronousMethodHandler.java:129<span class="token punctuation">)</span>
	at feign.SynchronousMethodHandler.invoke<span class="token punctuation">(</span>SynchronousMethodHandler.java:89<span class="token punctuation">)</span>
	at feign.ReflectiveFeign<span class="token variable">$FeignInvocationHandler</span>.invoke<span class="token punctuation">(</span>ReflectiveFeign.java:100<span class="token punctuation">)</span>
	at com.sun.proxy.<span class="token variable">$Proxy120</span>.get<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>
	at com.sl.ms.carriage.service.impl.CarriageServiceImpl.findEconomicCarriage<span class="token punctuation">(</span>CarriageServiceImpl.java:234<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于在计算服务中使用base微服务，但是101机器的base服务没有启动，会导致如上异常，将base启动即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#启动命令</span>
<span class="token function">docker</span> start sl-express-ms-base-service

<span class="token comment">#查看日志</span>
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> sl-express-ms-base-service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-6、测试举例" tabindex="-1"><a class="header-anchor" href="#_5-3-6、测试举例" aria-hidden="true">#</a> 5.3.6、测试举例</h3><p>**举例1：**跨省寄（不足1kg）<br> 从北京寄到上海一件物品，物品重量0.8千克，1立方厘米（长<em>宽</em>高：1cm<em>1cm</em>1cm）：<br> 计算：<br> 重量：不足1千克按照一千克计算<br> 体积：跨省轻抛系数为12000，1立方厘米计算则为：1/12000<br> 对比重量和体积，取大值<br> 按照1公斤来计算，则运费为跨省寄运费，18元</p><hr><p>**举例2：**跨省寄(超过 1kg)<br> 从北京寄到上海一件物品，物品重量1.8千克，1立方厘米（长<em>宽</em>高：1cm<em>1cm</em>1cm）：<br> 计算：<br> 重量：1.8千克<br> 体积：跨省轻抛系数为12000，1立方厘米计算则为：1/12000<br> 对比重量和体积，取大值<br> 按照1.8公斤来计算运费，则运费为跨省寄运费，<br> 1公斤（首重）+0.8公斤（续重）<br> 根据运费计算规则，10公斤以下以0.1为续重单位，则<br> 首重+续重=1<em>18（首重价格）+0.8</em>5=18+4=22元</p><hr><p>**举例3：**跨省寄（按体积计费）<br> 从北京寄到上海一件物品，物品重量3.8千克，125000立方厘米（长<em>宽</em>高：50cm<em>50cm</em>50cm）：<br> 计算：<br> 重量：3.8千克=3（首重）+0.8（续重）<br> 体积：跨省轻抛系数为12000，125000立方厘米：125000/12000=10.41<br> 对比重量和体积，取大值10.41<br> 根据运费计算规则，10-100公斤以0.5为计重单位，则10.41为10.5<br> 首重+续重=1<em>18（首重价格）+9.5</em>5=18+47.5=65.5元</p><hr><p>**举例4：**同城寄（按体积计费）<br> 从北京东城寄到北京西城一件物品，物品重量3.8kg，125000立方厘米（长<em>宽</em>高：50cm<em>50cm</em>50cm）：<br> 计算：<br> 重量：3.8kg=1kg（首重）+2.8kg（续重）<br> 体积：同城轻抛系数为12000，换算成重量125000立方厘米：125000/12000=10.41kg<br> 对比重量（3.8kg）和体积（10.41kg），取大值10.41kg<br> 根据运费计算规则，10-100kg以0.5kg为计重单位，则10.41kg为10.5kg<br> 首重+续重=1kg<em>12元（首重价格）+9.5kg</em>2元(续重价格)=12+19=31元</p><hr><p>**举例5：**经济区互寄（按体积计费）<br> 从北京寄到天津一件物品，物品重量3.8kg，125000立方厘米（长<em>宽</em>高：50cm<em>50cm</em>50cm）：<br> 计算：<br> 重量：3.8kg=1kg（首重）+2.8kg（续重）<br> 体积：经济区互寄（京津翼）轻抛系数为6000，换算成体积125000立方厘米：125000/6000=20.83kg<br> 对比重量(3.8kg)和体积(20.83kg)，取大值20.83kg<br> 根据运费计算规则，10-100kg以0.5kg为计重单位，则20.83为21kg<br> 首重+续重=1<em>12元（首重价格）+20</em>5元(续重价格)=12+100=112元</p><hr><p>**举例6：**省内寄（按重量计费）<br> 从石家庄寄到秦皇岛一件物品，物品重量3.8kg，5000立方厘米（长<em>宽</em>高：50cm<em>10cm</em>10cm）：<br> 计算：<br> 重量：3.8kg=1kg（首重）+2.8kg（续重）<br> 体积：省内寄轻抛系数为8000，换算成体积5000立方厘米：5000/6000=0.8kg<br> 对比重量(3.8kg)和体积(0.8kg)，取大值3.8kg<br> 根据运费计算规则，10kg以下以0.1kg为计重单位，则3.8kg为3.8kg<br> 首重+续重=1<em>12元（首重价格）+2.8</em>3元(续重价格)=12+8.4=20.4元</p><h2 id="_5-4、部署" tabindex="-1"><a class="header-anchor" href="#_5-4、部署" aria-hidden="true">#</a> 5.4、部署</h2><p>已经将该服务的部署脚本写到Jenkins中，直接使用即可。</p><figure><img src="`+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>部署成功后进行测试，结果与本地一样。</p><h2 id="_5-5、用户端测试" tabindex="-1"><a class="header-anchor" href="#_5-5、用户端测试" aria-hidden="true">#</a> 5.5、用户端测试</h2>',64),P=n("br",null,null,-1),B={href:"https://www.yuque.com/docs/share/90dee639-d6a5-48c7-a644-4829db1e47ae",target:"_blank",rel:"noopener noreferrer"},V=t('<p>需要启动如下所需要的服务，进行测试：<br><img src="'+D+'" alt="" loading="lazy"></p><p>如果出现如下错误，是因为 <code>sl-express-ms-oms-service</code> 服务没有启动。</p><figure><img src="'+j+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>测试结果如下：</p><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="_6、练习" tabindex="-1"><a class="header-anchor" href="#_6、练习" aria-hidden="true">#</a> 6、练习</h1><p>需求：计算运费的第一步就是根据参数查询运费模板，而这个动作会访问数据库，并且是比较频繁的，然而运费模板的变更并不频繁，需要可以将运费模板缓存起来，以提高效率。</p><p>提示：</p><ul><li>需要引入redis相关的依赖</li><li>增加redis相关的配置</li><li>编码实现缓存相关逻辑</li></ul><h1 id="_7、面试连环问" tabindex="-1"><a class="header-anchor" href="#_7、面试连环问" aria-hidden="true">#</a> 7、面试连环问</h1><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>面试官问：</p><ul><li>你们的运费是怎么计算的？体积和重量怎么计算，到底以哪个为准？</li><li>详细聊聊你们的运费模板是做什么的？</li><li>有没有针对运费计算做什么优化？</li></ul></div>',11);function G(Q,Y){const a=c("ExternalLinkIcon");return o(),i("div",null,[N,n("table",null,[H,n("tbody",null,[n("tr",null,[W,n("td",null,[n("a",R,[s("http://git.sl-express.com/sl/sl-express-ms-carriage-domain.git"),p(a)])])]),n("tr",null,[U,n("td",null,[n("a",A,[s("http://git.sl-express.com/sl/sl-express-ms-carriage-api.git"),p(a)])])]),n("tr",null,[I,n("td",null,[n("a",M,[s("http://git.sl-express.com/sl/sl-express-ms-carriage-service.git"),p(a)])])])])]),q,n("p",null,[s("url地址："),n("a",F,[s("http://127.0.0.1:18094/doc.html"),p(a)])]),z,n("p",null,[s("用户下单时，需要根据收发地址计算运费，所以需要将用户端运行起来进行功能测试。"),P,s(" 用户端的部署参考"),n("a",B,[s("《前端部署文档》"),p(a)]),s("。")]),V])}const $=e(L,[["render",G],["__file","day04-运费微服务.html.vue"]]);export{$ as default};
