const e=JSON.parse('{"key":"v-7ff73d58","path":"/framework/springcloud/SpringCloud%E5%AE%9E%E7%94%A8%E7%AF%8701.html","title":"三、SpringCloud-01-2022版","lang":"zh-CN","frontmatter":{"title":"三、SpringCloud-01-2022版","date":"2023-03-28T14:54:19.000Z","order":3,"category":["中间件","Spring Cloud","微服务"],"tag":["中间件","Spring Cloud","微服务"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"SpringCloud01 1.认识微服务 随着互联网行业的发展，对服务的要求也越来越高，服务架构也从单体架构逐渐演变为现在流行的微服务架构。这些架构之间有怎样的差别呢？ 1.0.学习目标 了解微服务架构的优缺点 1.1.单体架构 单体架构：将业务的所有功能集中在一个项目中开发，打成一个包部署。 image-20210713202807818 单体架构的优缺点如下：","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/framework/springcloud/SpringCloud%E5%AE%9E%E7%94%A8%E7%AF%8701.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"三、SpringCloud-01-2022版"}],["meta",{"property":"og:description","content":"SpringCloud01 1.认识微服务 随着互联网行业的发展，对服务的要求也越来越高，服务架构也从单体架构逐渐演变为现在流行的微服务架构。这些架构之间有怎样的差别呢？ 1.0.学习目标 了解微服务架构的优缺点 1.1.单体架构 单体架构：将业务的所有功能集中在一个项目中开发，打成一个包部署。 image-20210713202807818 单体架构的优缺点如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"三、SpringCloud-01-2022版"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"Spring Cloud"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:published_time","content":"2023-03-28T14:54:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"三、SpringCloud-01-2022版\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-03-28T14:54:19.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"1.0.学习目标","slug":"_1-0-学习目标","link":"#_1-0-学习目标","children":[]},{"level":2,"title":"1.1.单体架构","slug":"_1-1-单体架构","link":"#_1-1-单体架构","children":[]},{"level":2,"title":"1.2.分布式架构","slug":"_1-2-分布式架构","link":"#_1-2-分布式架构","children":[]},{"level":2,"title":"1.3.微服务","slug":"_1-3-微服务","link":"#_1-3-微服务","children":[]},{"level":2,"title":"1.4.SpringCloud","slug":"_1-4-springcloud","link":"#_1-4-springcloud","children":[]},{"level":2,"title":"1.5.总结","slug":"_1-5-总结","link":"#_1-5-总结","children":[]},{"level":2,"title":"2.1.服务拆分原则","slug":"_2-1-服务拆分原则","link":"#_2-1-服务拆分原则","children":[]},{"level":2,"title":"2.2.服务拆分示例","slug":"_2-2-服务拆分示例","link":"#_2-2-服务拆分示例","children":[{"level":3,"title":"2.2.1.导入Sql语句","slug":"_2-2-1-导入sql语句","link":"#_2-2-1-导入sql语句","children":[]},{"level":3,"title":"2.2.2.导入demo工程","slug":"_2-2-2-导入demo工程","link":"#_2-2-2-导入demo工程","children":[]}]},{"level":2,"title":"2.3.实现远程调用案例","slug":"_2-3-实现远程调用案例","link":"#_2-3-实现远程调用案例","children":[{"level":3,"title":"2.3.1.案例需求：","slug":"_2-3-1-案例需求","link":"#_2-3-1-案例需求","children":[]},{"level":3,"title":"2.3.2.注册RestTemplate","slug":"_2-3-2-注册resttemplate","link":"#_2-3-2-注册resttemplate","children":[]},{"level":3,"title":"2.3.3.实现远程调用","slug":"_2-3-3-实现远程调用","link":"#_2-3-3-实现远程调用","children":[]}]},{"level":2,"title":"2.4.提供者与消费者","slug":"_2-4-提供者与消费者","link":"#_2-4-提供者与消费者","children":[]},{"level":2,"title":"3.1.Eureka的结构和作用","slug":"_3-1-eureka的结构和作用","link":"#_3-1-eureka的结构和作用","children":[]},{"level":2,"title":"3.2.搭建eureka-server","slug":"_3-2-搭建eureka-server","link":"#_3-2-搭建eureka-server","children":[{"level":3,"title":"3.2.1.创建eureka-server服务","slug":"_3-2-1-创建eureka-server服务","link":"#_3-2-1-创建eureka-server服务","children":[]},{"level":3,"title":"3.2.2.引入eureka依赖","slug":"_3-2-2-引入eureka依赖","link":"#_3-2-2-引入eureka依赖","children":[]},{"level":3,"title":"3.2.3.编写启动类","slug":"_3-2-3-编写启动类","link":"#_3-2-3-编写启动类","children":[]},{"level":3,"title":"3.2.4.编写配置文件","slug":"_3-2-4-编写配置文件","link":"#_3-2-4-编写配置文件","children":[]},{"level":3,"title":"3.2.5.启动服务","slug":"_3-2-5-启动服务","link":"#_3-2-5-启动服务","children":[]}]},{"level":2,"title":"3.3.服务注册","slug":"_3-3-服务注册","link":"#_3-3-服务注册","children":[{"level":3,"title":"1）引入依赖","slug":"_1-引入依赖","link":"#_1-引入依赖","children":[]},{"level":3,"title":"2）配置文件","slug":"_2-配置文件","link":"#_2-配置文件","children":[]},{"level":3,"title":"3）启动多个user-service实例","slug":"_3-启动多个user-service实例","link":"#_3-启动多个user-service实例","children":[]}]},{"level":2,"title":"3.4.服务发现","slug":"_3-4-服务发现","link":"#_3-4-服务发现","children":[{"level":3,"title":"1）引入依赖","slug":"_1-引入依赖-1","link":"#_1-引入依赖-1","children":[]},{"level":3,"title":"2）配置文件","slug":"_2-配置文件-1","link":"#_2-配置文件-1","children":[]},{"level":3,"title":"3）服务拉取和负载均衡","slug":"_3-服务拉取和负载均衡","link":"#_3-服务拉取和负载均衡","children":[]}]},{"level":2,"title":"4.1.负载均衡原理","slug":"_4-1-负载均衡原理","link":"#_4-1-负载均衡原理","children":[]},{"level":2,"title":"4.2.源码跟踪","slug":"_4-2-源码跟踪","link":"#_4-2-源码跟踪","children":[{"level":3,"title":"1）LoadBalancerIntercepor","slug":"_1-loadbalancerintercepor","link":"#_1-loadbalancerintercepor","children":[]},{"level":3,"title":"2）LoadBalancerClient","slug":"_2-loadbalancerclient","link":"#_2-loadbalancerclient","children":[]},{"level":3,"title":"3）负载均衡策略IRule","slug":"_3-负载均衡策略irule","link":"#_3-负载均衡策略irule","children":[]},{"level":3,"title":"4）总结","slug":"_4-总结","link":"#_4-总结","children":[]}]},{"level":2,"title":"4.3.负载均衡策略","slug":"_4-3-负载均衡策略","link":"#_4-3-负载均衡策略","children":[{"level":3,"title":"4.3.1.负载均衡策略","slug":"_4-3-1-负载均衡策略","link":"#_4-3-1-负载均衡策略","children":[]},{"level":3,"title":"4.3.2.自定义负载均衡策略","slug":"_4-3-2-自定义负载均衡策略","link":"#_4-3-2-自定义负载均衡策略","children":[]}]},{"level":2,"title":"4.4.饥饿加载","slug":"_4-4-饥饿加载","link":"#_4-4-饥饿加载","children":[]},{"level":2,"title":"5.1.认识和安装Nacos","slug":"_5-1-认识和安装nacos","link":"#_5-1-认识和安装nacos","children":[]},{"level":2,"title":"5.2.服务注册到nacos","slug":"_5-2-服务注册到nacos","link":"#_5-2-服务注册到nacos","children":[{"level":3,"title":"1）引入依赖","slug":"_1-引入依赖-2","link":"#_1-引入依赖-2","children":[]},{"level":3,"title":"2）配置nacos地址","slug":"_2-配置nacos地址","link":"#_2-配置nacos地址","children":[]},{"level":3,"title":"3）重启","slug":"_3-重启","link":"#_3-重启","children":[]}]},{"level":2,"title":"5.3.服务分级存储模型","slug":"_5-3-服务分级存储模型","link":"#_5-3-服务分级存储模型","children":[{"level":3,"title":"5.3.1.给user-service配置集群","slug":"_5-3-1-给user-service配置集群","link":"#_5-3-1-给user-service配置集群","children":[]},{"level":3,"title":"5.3.2.同集群优先的负载均衡","slug":"_5-3-2-同集群优先的负载均衡","link":"#_5-3-2-同集群优先的负载均衡","children":[]}]},{"level":2,"title":"5.4.权重配置","slug":"_5-4-权重配置","link":"#_5-4-权重配置","children":[]},{"level":2,"title":"5.5.环境隔离","slug":"_5-5-环境隔离","link":"#_5-5-环境隔离","children":[{"level":3,"title":"5.5.1.创建namespace","slug":"_5-5-1-创建namespace","link":"#_5-5-1-创建namespace","children":[]},{"level":3,"title":"5.5.2.给微服务配置namespace","slug":"_5-5-2-给微服务配置namespace","link":"#_5-5-2-给微服务配置namespace","children":[]}]},{"level":2,"title":"5.6.Nacos与Eureka的区别","slug":"_5-6-nacos与eureka的区别","link":"#_5-6-nacos与eureka的区别","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":20.33,"words":6099},"filePathRelative":"framework/springcloud/SpringCloud实用篇01.md","localizedDate":"2023年3月28日","excerpt":"<h1> SpringCloud01</h1>\\n<h1> 1.认识微服务</h1>\\n<p>随着互联网行业的发展，对服务的要求也越来越高，服务架构也从单体架构逐渐演变为现在流行的微服务架构。这些架构之间有怎样的差别呢？</p>\\n<h2> 1.0.学习目标</h2>\\n<p>了解微服务架构的优缺点</p>\\n<h2> 1.1.单体架构</h2>\\n<p><strong>单体架构</strong>：将业务的所有功能集中在一个项目中开发，打成一个包部署。</p>\\n<figure><figcaption>image-20210713202807818</figcaption></figure>\\n<p>单体架构的优缺点如下：</p>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
