const e=JSON.parse('{"key":"v-61e035ff","path":"/project/slwl/notes/day08-%E6%99%BA%E8%83%BD%E8%B0%83%E5%BA%A6%E4%B9%8B%E8%BF%90%E8%BE%93%E4%BB%BB%E5%8A%A1.html","title":"day08-智能调度之运输任务","lang":"zh-CN","frontmatter":{"title":"day08-智能调度之运输任务","date":"2023-07-15T15:58:23.000Z","order":8,"category":["项目","神领物流","智能"],"tag":["项目","神领物流","智能"],"author":{"name":"liuyangfang","link":"https://github.com/lyf110"},"description":"课程安排 智能调度生成运输任务 实现运输任务相关业务 实现司机入库业务 1、背景说明 通过前面的学习，已经可以将相同转运节点的运单合并，合并之后就需要进行调度计算，按照车辆的运力生成运输任务，以及司机的作业单，这样的话就可以进入到司机与车辆的运输环节了。 2、任务调度 2.1、分析 通过前面的实现，已经将相同转运节点的写入到了Redis的队列中，谁来处理呢？这就需要调度任务进行处理了，基本的思路是： 查询待分配任务的车辆 -&gt; 计算运力 -&gt; 分配运单 -&gt; 生成运输任务 -&gt; 生成司机作业单 也就是说，调度是站在车辆角度推进的。","head":[["meta",{"property":"og:url","content":"https://github.com/lyf110/project/slwl/notes/day08-%E6%99%BA%E8%83%BD%E8%B0%83%E5%BA%A6%E4%B9%8B%E8%BF%90%E8%BE%93%E4%BB%BB%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"lyf blog"}],["meta",{"property":"og:title","content":"day08-智能调度之运输任务"}],["meta",{"property":"og:description","content":"课程安排 智能调度生成运输任务 实现运输任务相关业务 实现司机入库业务 1、背景说明 通过前面的学习，已经可以将相同转运节点的运单合并，合并之后就需要进行调度计算，按照车辆的运力生成运输任务，以及司机的作业单，这样的话就可以进入到司机与车辆的运输环节了。 2、任务调度 2.1、分析 通过前面的实现，已经将相同转运节点的写入到了Redis的队列中，谁来处理呢？这就需要调度任务进行处理了，基本的思路是： 查询待分配任务的车辆 -&gt; 计算运力 -&gt; 分配运单 -&gt; 生成运输任务 -&gt; 生成司机作业单 也就是说，调度是站在车辆角度推进的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/lyf110/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"day08-智能调度之运输任务"}],["meta",{"property":"article:author","content":"liuyangfang"}],["meta",{"property":"article:tag","content":"项目"}],["meta",{"property":"article:tag","content":"神领物流"}],["meta",{"property":"article:tag","content":"智能"}],["meta",{"property":"article:published_time","content":"2023-07-15T15:58:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day08-智能调度之运输任务\\",\\"image\\":[\\"https://github.com/lyf110/\\"],\\"datePublished\\":\\"2023-07-15T15:58:23.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liuyangfang\\",\\"link\\":\\"https://github.com/lyf110\\"}]}"]]},"headers":[{"level":2,"title":"2.1、分析","slug":"_2-1、分析","link":"#_2-1、分析","children":[]},{"level":2,"title":"2.2、实现","slug":"_2-2、实现","link":"#_2-2、实现","children":[{"level":3,"title":"2.2.1、调度入口","slug":"_2-2-1、调度入口","link":"#_2-2-1、调度入口","children":[]},{"level":3,"title":"2.2.2、运单处理","slug":"_2-2-2、运单处理","link":"#_2-2-2、运单处理","children":[]},{"level":3,"title":"2.2.3、消息通知生成运输任务","slug":"_2-2-3、消息通知生成运输任务","link":"#_2-2-3、消息通知生成运输任务","children":[]},{"level":3,"title":"2.2.4、消息通知完成车辆计划","slug":"_2-2-4、消息通知完成车辆计划","link":"#_2-2-4、消息通知完成车辆计划","children":[]}]},{"level":2,"title":"2.3、xxl-job任务","slug":"_2-3、xxl-job任务","link":"#_2-3、xxl-job任务","children":[]},{"level":2,"title":"2.4、测试","slug":"_2-4、测试","link":"#_2-4、测试","children":[{"level":3,"title":"2.4.1、测试xxl-job","slug":"_2-4-1、测试xxl-job","link":"#_2-4-1、测试xxl-job","children":[]},{"level":3,"title":"2.4.2、添加车辆车次","slug":"_2-4-2、添加车辆车次","link":"#_2-4-2、添加车辆车次","children":[]},{"level":3,"title":"2.4.3、完整测试","slug":"_2-4-3、完整测试","link":"#_2-4-3、完整测试","children":[]}]},{"level":2,"title":"3.1、表结构","slug":"_3-1、表结构","link":"#_3-1、表结构","children":[]},{"level":2,"title":"3.2、编码实现","slug":"_3-2、编码实现","link":"#_3-2、编码实现","children":[{"level":3,"title":"3.2.1、监听消息","slug":"_3-2-1、监听消息","link":"#_3-2-1、监听消息","children":[]},{"level":3,"title":"3.2.2、创建运输任务","slug":"_3-2-2、创建运输任务","link":"#_3-2-2、创建运输任务","children":[]},{"level":3,"title":"3.2.3、创建运单关系","slug":"_3-2-3、创建运单关系","link":"#_3-2-3、创建运单关系","children":[]}]},{"level":2,"title":"3.3、测试","slug":"_3-3、测试","link":"#_3-3、测试","children":[]},{"level":2,"title":"3.4、根据运输任务查询运单","slug":"_3-4、根据运输任务查询运单","link":"#_3-4、根据运输任务查询运单","children":[]},{"level":2,"title":"4.1、业务实现","slug":"_4-1、业务实现","link":"#_4-1、业务实现","children":[]},{"level":2,"title":"4.2、运单流转","slug":"_4-2、运单流转","link":"#_4-2、运单流转","children":[]},{"level":2,"title":"4.3、测试","slug":"_4-3、测试","link":"#_4-3、测试","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":17.45,"words":5235},"filePathRelative":"project/slwl/notes/day08-智能调度之运输任务.md","localizedDate":"2023年7月15日","excerpt":"<h1> 课程安排</h1>\\n<ul>\\n<li>智能调度生成运输任务</li>\\n<li>实现运输任务相关业务</li>\\n<li>实现司机入库业务</li>\\n</ul>\\n<h1> 1、背景说明</h1>\\n<p>通过前面的学习，已经可以将相同转运节点的运单合并，合并之后就需要进行调度计算，按照车辆的运力生成运输任务，以及司机的作业单，这样的话就可以进入到司机与车辆的运输环节了。<br>\\n</p>\\n<h1> 2、任务调度</h1>\\n<h2> 2.1、分析</h2>\\n<p>通过前面的实现，已经将相同转运节点的写入到了Redis的队列中，谁来处理呢？这就需要调度任务进行处理了，基本的思路是：</p>\\n<blockquote>\\n<p>查询待分配任务的车辆 -&gt; 计算运力 -&gt; 分配运单 -&gt; 生成运输任务 -&gt; 生成司机作业单<br>\\n<strong>也就是说，调度是站在车辆角度推进的。</strong></p>\\n</blockquote>","copyright":{"author":"liu yang fang","license":"Apache License 2.0"},"autoDesc":true}');export{e as data};
